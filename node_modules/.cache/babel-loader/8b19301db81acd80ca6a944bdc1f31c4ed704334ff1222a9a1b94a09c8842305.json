{"ast":null,"code":"/**\n* (c) Iconify\n*\n* For the full copyright and license information, please view the license.txt\n* files at https://github.com/iconify/iconify\n*\n* Licensed under MIT.\n*\n* @license MIT\n* @version 2.1.0\n*/\nconst defaultIconDimensions = Object.freeze({\n  left: 0,\n  top: 0,\n  width: 16,\n  height: 16\n});\nconst defaultIconTransformations = Object.freeze({\n  rotate: 0,\n  vFlip: false,\n  hFlip: false\n});\nconst defaultIconProps = Object.freeze({\n  ...defaultIconDimensions,\n  ...defaultIconTransformations\n});\nconst defaultExtendedIconProps = Object.freeze({\n  ...defaultIconProps,\n  body: \"\",\n  hidden: false\n});\nconst defaultIconSizeCustomisations = Object.freeze({\n  width: null,\n  height: null\n});\nconst defaultIconCustomisations = Object.freeze({\n  // Dimensions\n  ...defaultIconSizeCustomisations,\n  // Transformations\n  ...defaultIconTransformations\n});\nfunction rotateFromString(value, defaultValue = 0) {\n  const units = value.replace(/^-?[0-9.]*/, \"\");\n  function cleanup(value2) {\n    while (value2 < 0) {\n      value2 += 4;\n    }\n    return value2 % 4;\n  }\n  if (units === \"\") {\n    const num = parseInt(value);\n    return isNaN(num) ? 0 : cleanup(num);\n  } else if (units !== value) {\n    let split = 0;\n    switch (units) {\n      case \"%\":\n        split = 25;\n        break;\n      case \"deg\":\n        split = 90;\n    }\n    if (split) {\n      let num = parseFloat(value.slice(0, value.length - units.length));\n      if (isNaN(num)) {\n        return 0;\n      }\n      num = num / split;\n      return num % 1 === 0 ? cleanup(num) : 0;\n    }\n  }\n  return defaultValue;\n}\nconst separator = /[\\s,]+/;\nfunction flipFromString(custom, flip) {\n  flip.split(separator).forEach(str => {\n    const value = str.trim();\n    switch (value) {\n      case \"horizontal\":\n        custom.hFlip = true;\n        break;\n      case \"vertical\":\n        custom.vFlip = true;\n        break;\n    }\n  });\n}\nconst defaultCustomisations = {\n  ...defaultIconCustomisations,\n  preserveAspectRatio: ''\n};\n/**\n * Get customisations\n */\nfunction getCustomisations(node) {\n  const customisations = {\n    ...defaultCustomisations\n  };\n  const attr = (key, def) => node.getAttribute(key) || def;\n  // Dimensions\n  customisations.width = attr('width', null);\n  customisations.height = attr('height', null);\n  // Rotation\n  customisations.rotate = rotateFromString(attr('rotate', ''));\n  // Flip\n  flipFromString(customisations, attr('flip', ''));\n  // SVG attributes\n  customisations.preserveAspectRatio = attr('preserveAspectRatio', attr('preserveaspectratio', ''));\n  return customisations;\n}\n/**\n * Check if customisations have been updated\n */\nfunction haveCustomisationsChanged(value1, value2) {\n  for (const key in defaultCustomisations) {\n    if (value1[key] !== value2[key]) {\n      return true;\n    }\n  }\n  return false;\n}\nconst matchIconName = /^[a-z0-9]+(-[a-z0-9]+)*$/;\nconst stringToIcon = (value, validate, allowSimpleName, provider = \"\") => {\n  const colonSeparated = value.split(\":\");\n  if (value.slice(0, 1) === \"@\") {\n    if (colonSeparated.length < 2 || colonSeparated.length > 3) {\n      return null;\n    }\n    provider = colonSeparated.shift().slice(1);\n  }\n  if (colonSeparated.length > 3 || !colonSeparated.length) {\n    return null;\n  }\n  if (colonSeparated.length > 1) {\n    const name2 = colonSeparated.pop();\n    const prefix = colonSeparated.pop();\n    const result = {\n      // Allow provider without '@': \"provider:prefix:name\"\n      provider: colonSeparated.length > 0 ? colonSeparated[0] : provider,\n      prefix,\n      name: name2\n    };\n    return validate && !validateIconName(result) ? null : result;\n  }\n  const name = colonSeparated[0];\n  const dashSeparated = name.split(\"-\");\n  if (dashSeparated.length > 1) {\n    const result = {\n      provider,\n      prefix: dashSeparated.shift(),\n      name: dashSeparated.join(\"-\")\n    };\n    return validate && !validateIconName(result) ? null : result;\n  }\n  if (allowSimpleName && provider === \"\") {\n    const result = {\n      provider,\n      prefix: \"\",\n      name\n    };\n    return validate && !validateIconName(result, allowSimpleName) ? null : result;\n  }\n  return null;\n};\nconst validateIconName = (icon, allowSimpleName) => {\n  if (!icon) {\n    return false;\n  }\n  return !!((icon.provider === \"\" || icon.provider.match(matchIconName)) && (allowSimpleName && icon.prefix === \"\" || icon.prefix.match(matchIconName)) && icon.name.match(matchIconName));\n};\nfunction mergeIconTransformations(obj1, obj2) {\n  const result = {};\n  if (!obj1.hFlip !== !obj2.hFlip) {\n    result.hFlip = true;\n  }\n  if (!obj1.vFlip !== !obj2.vFlip) {\n    result.vFlip = true;\n  }\n  const rotate = ((obj1.rotate || 0) + (obj2.rotate || 0)) % 4;\n  if (rotate) {\n    result.rotate = rotate;\n  }\n  return result;\n}\nfunction mergeIconData(parent, child) {\n  const result = mergeIconTransformations(parent, child);\n  for (const key in defaultExtendedIconProps) {\n    if (key in defaultIconTransformations) {\n      if (key in parent && !(key in result)) {\n        result[key] = defaultIconTransformations[key];\n      }\n    } else if (key in child) {\n      result[key] = child[key];\n    } else if (key in parent) {\n      result[key] = parent[key];\n    }\n  }\n  return result;\n}\nfunction getIconsTree(data, names) {\n  const icons = data.icons;\n  const aliases = data.aliases || /* @__PURE__ */Object.create(null);\n  const resolved = /* @__PURE__ */Object.create(null);\n  function resolve(name) {\n    if (icons[name]) {\n      return resolved[name] = [];\n    }\n    if (!(name in resolved)) {\n      resolved[name] = null;\n      const parent = aliases[name] && aliases[name].parent;\n      const value = parent && resolve(parent);\n      if (value) {\n        resolved[name] = [parent].concat(value);\n      }\n    }\n    return resolved[name];\n  }\n  (names || Object.keys(icons).concat(Object.keys(aliases))).forEach(resolve);\n  return resolved;\n}\nfunction internalGetIconData(data, name, tree) {\n  const icons = data.icons;\n  const aliases = data.aliases || /* @__PURE__ */Object.create(null);\n  let currentProps = {};\n  function parse(name2) {\n    currentProps = mergeIconData(icons[name2] || aliases[name2], currentProps);\n  }\n  parse(name);\n  tree.forEach(parse);\n  return mergeIconData(data, currentProps);\n}\nfunction parseIconSet(data, callback) {\n  const names = [];\n  if (typeof data !== \"object\" || typeof data.icons !== \"object\") {\n    return names;\n  }\n  if (data.not_found instanceof Array) {\n    data.not_found.forEach(name => {\n      callback(name, null);\n      names.push(name);\n    });\n  }\n  const tree = getIconsTree(data);\n  for (const name in tree) {\n    const item = tree[name];\n    if (item) {\n      callback(name, internalGetIconData(data, name, item));\n      names.push(name);\n    }\n  }\n  return names;\n}\nconst optionalPropertyDefaults = {\n  provider: \"\",\n  aliases: {},\n  not_found: {},\n  ...defaultIconDimensions\n};\nfunction checkOptionalProps(item, defaults) {\n  for (const prop in defaults) {\n    if (prop in item && typeof item[prop] !== typeof defaults[prop]) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction quicklyValidateIconSet(obj) {\n  if (typeof obj !== \"object\" || obj === null) {\n    return null;\n  }\n  const data = obj;\n  if (typeof data.prefix !== \"string\" || !obj.icons || typeof obj.icons !== \"object\") {\n    return null;\n  }\n  if (!checkOptionalProps(obj, optionalPropertyDefaults)) {\n    return null;\n  }\n  const icons = data.icons;\n  for (const name in icons) {\n    const icon = icons[name];\n    if (!name.match(matchIconName) || typeof icon.body !== \"string\" || !checkOptionalProps(icon, defaultExtendedIconProps)) {\n      return null;\n    }\n  }\n  const aliases = data.aliases || /* @__PURE__ */Object.create(null);\n  for (const name in aliases) {\n    const icon = aliases[name];\n    const parent = icon.parent;\n    if (!name.match(matchIconName) || typeof parent !== \"string\" || !icons[parent] && !aliases[parent] || !checkOptionalProps(icon, defaultExtendedIconProps)) {\n      return null;\n    }\n  }\n  return data;\n}\nconst dataStorage = /* @__PURE__ */Object.create(null);\nfunction newStorage(provider, prefix) {\n  return {\n    provider,\n    prefix,\n    icons: /* @__PURE__ */Object.create(null),\n    missing: /* @__PURE__ */new Set()\n  };\n}\nfunction getStorage(provider, prefix) {\n  const providerStorage = dataStorage[provider] || (dataStorage[provider] = /* @__PURE__ */Object.create(null));\n  return providerStorage[prefix] || (providerStorage[prefix] = newStorage(provider, prefix));\n}\nfunction addIconSet(storage, data) {\n  if (!quicklyValidateIconSet(data)) {\n    return [];\n  }\n  return parseIconSet(data, (name, icon) => {\n    if (icon) {\n      storage.icons[name] = icon;\n    } else {\n      storage.missing.add(name);\n    }\n  });\n}\nfunction addIconToStorage(storage, name, icon) {\n  try {\n    if (typeof icon.body === \"string\") {\n      storage.icons[name] = {\n        ...icon\n      };\n      return true;\n    }\n  } catch (err) {}\n  return false;\n}\nfunction listIcons$1(provider, prefix) {\n  let allIcons = [];\n  const providers = typeof provider === \"string\" ? [provider] : Object.keys(dataStorage);\n  providers.forEach(provider2 => {\n    const prefixes = typeof provider2 === \"string\" && typeof prefix === \"string\" ? [prefix] : Object.keys(dataStorage[provider2] || {});\n    prefixes.forEach(prefix2 => {\n      const storage = getStorage(provider2, prefix2);\n      allIcons = allIcons.concat(Object.keys(storage.icons).map(name => (provider2 !== \"\" ? \"@\" + provider2 + \":\" : \"\") + prefix2 + \":\" + name));\n    });\n  });\n  return allIcons;\n}\nlet simpleNames = false;\nfunction allowSimpleNames(allow) {\n  if (typeof allow === \"boolean\") {\n    simpleNames = allow;\n  }\n  return simpleNames;\n}\nfunction getIconData(name) {\n  const icon = typeof name === \"string\" ? stringToIcon(name, true, simpleNames) : name;\n  if (icon) {\n    const storage = getStorage(icon.provider, icon.prefix);\n    const iconName = icon.name;\n    return storage.icons[iconName] || (storage.missing.has(iconName) ? null : void 0);\n  }\n}\nfunction addIcon$1(name, data) {\n  const icon = stringToIcon(name, true, simpleNames);\n  if (!icon) {\n    return false;\n  }\n  const storage = getStorage(icon.provider, icon.prefix);\n  return addIconToStorage(storage, icon.name, data);\n}\nfunction addCollection$1(data, provider) {\n  if (typeof data !== \"object\") {\n    return false;\n  }\n  if (typeof provider !== \"string\") {\n    provider = data.provider || \"\";\n  }\n  if (simpleNames && !provider && !data.prefix) {\n    let added = false;\n    if (quicklyValidateIconSet(data)) {\n      data.prefix = \"\";\n      parseIconSet(data, (name, icon) => {\n        if (icon && addIcon$1(name, icon)) {\n          added = true;\n        }\n      });\n    }\n    return added;\n  }\n  const prefix = data.prefix;\n  if (!validateIconName({\n    provider,\n    prefix,\n    name: \"a\"\n  })) {\n    return false;\n  }\n  const storage = getStorage(provider, prefix);\n  return !!addIconSet(storage, data);\n}\nfunction iconLoaded$1(name) {\n  return !!getIconData(name);\n}\nfunction getIcon$1(name) {\n  const result = getIconData(name);\n  return result ? {\n    ...defaultIconProps,\n    ...result\n  } : null;\n}\nfunction sortIcons(icons) {\n  const result = {\n    loaded: [],\n    missing: [],\n    pending: []\n  };\n  const storage = /* @__PURE__ */Object.create(null);\n  icons.sort((a, b) => {\n    if (a.provider !== b.provider) {\n      return a.provider.localeCompare(b.provider);\n    }\n    if (a.prefix !== b.prefix) {\n      return a.prefix.localeCompare(b.prefix);\n    }\n    return a.name.localeCompare(b.name);\n  });\n  let lastIcon = {\n    provider: \"\",\n    prefix: \"\",\n    name: \"\"\n  };\n  icons.forEach(icon => {\n    if (lastIcon.name === icon.name && lastIcon.prefix === icon.prefix && lastIcon.provider === icon.provider) {\n      return;\n    }\n    lastIcon = icon;\n    const provider = icon.provider;\n    const prefix = icon.prefix;\n    const name = icon.name;\n    const providerStorage = storage[provider] || (storage[provider] = /* @__PURE__ */Object.create(null));\n    const localStorage = providerStorage[prefix] || (providerStorage[prefix] = getStorage(provider, prefix));\n    let list;\n    if (name in localStorage.icons) {\n      list = result.loaded;\n    } else if (prefix === \"\" || localStorage.missing.has(name)) {\n      list = result.missing;\n    } else {\n      list = result.pending;\n    }\n    const item = {\n      provider,\n      prefix,\n      name\n    };\n    list.push(item);\n  });\n  return result;\n}\nfunction removeCallback(storages, id) {\n  storages.forEach(storage => {\n    const items = storage.loaderCallbacks;\n    if (items) {\n      storage.loaderCallbacks = items.filter(row => row.id !== id);\n    }\n  });\n}\nfunction updateCallbacks(storage) {\n  if (!storage.pendingCallbacksFlag) {\n    storage.pendingCallbacksFlag = true;\n    setTimeout(() => {\n      storage.pendingCallbacksFlag = false;\n      const items = storage.loaderCallbacks ? storage.loaderCallbacks.slice(0) : [];\n      if (!items.length) {\n        return;\n      }\n      let hasPending = false;\n      const provider = storage.provider;\n      const prefix = storage.prefix;\n      items.forEach(item => {\n        const icons = item.icons;\n        const oldLength = icons.pending.length;\n        icons.pending = icons.pending.filter(icon => {\n          if (icon.prefix !== prefix) {\n            return true;\n          }\n          const name = icon.name;\n          if (storage.icons[name]) {\n            icons.loaded.push({\n              provider,\n              prefix,\n              name\n            });\n          } else if (storage.missing.has(name)) {\n            icons.missing.push({\n              provider,\n              prefix,\n              name\n            });\n          } else {\n            hasPending = true;\n            return true;\n          }\n          return false;\n        });\n        if (icons.pending.length !== oldLength) {\n          if (!hasPending) {\n            removeCallback([storage], item.id);\n          }\n          item.callback(icons.loaded.slice(0), icons.missing.slice(0), icons.pending.slice(0), item.abort);\n        }\n      });\n    });\n  }\n}\nlet idCounter = 0;\nfunction storeCallback(callback, icons, pendingSources) {\n  const id = idCounter++;\n  const abort = removeCallback.bind(null, pendingSources, id);\n  if (!icons.pending.length) {\n    return abort;\n  }\n  const item = {\n    id,\n    icons,\n    callback,\n    abort\n  };\n  pendingSources.forEach(storage => {\n    (storage.loaderCallbacks || (storage.loaderCallbacks = [])).push(item);\n  });\n  return abort;\n}\nconst storage = /* @__PURE__ */Object.create(null);\nfunction setAPIModule(provider, item) {\n  storage[provider] = item;\n}\nfunction getAPIModule(provider) {\n  return storage[provider] || storage[\"\"];\n}\nfunction listToIcons(list, validate = true, simpleNames = false) {\n  const result = [];\n  list.forEach(item => {\n    const icon = typeof item === \"string\" ? stringToIcon(item, validate, simpleNames) : item;\n    if (icon) {\n      result.push(icon);\n    }\n  });\n  return result;\n}\n\n// src/config.ts\nvar defaultConfig = {\n  resources: [],\n  index: 0,\n  timeout: 2e3,\n  rotate: 750,\n  random: false,\n  dataAfterTimeout: false\n};\n\n// src/query.ts\nfunction sendQuery(config, payload, query, done) {\n  const resourcesCount = config.resources.length;\n  const startIndex = config.random ? Math.floor(Math.random() * resourcesCount) : config.index;\n  let resources;\n  if (config.random) {\n    let list = config.resources.slice(0);\n    resources = [];\n    while (list.length > 1) {\n      const nextIndex = Math.floor(Math.random() * list.length);\n      resources.push(list[nextIndex]);\n      list = list.slice(0, nextIndex).concat(list.slice(nextIndex + 1));\n    }\n    resources = resources.concat(list);\n  } else {\n    resources = config.resources.slice(startIndex).concat(config.resources.slice(0, startIndex));\n  }\n  const startTime = Date.now();\n  let status = \"pending\";\n  let queriesSent = 0;\n  let lastError;\n  let timer = null;\n  let queue = [];\n  let doneCallbacks = [];\n  if (typeof done === \"function\") {\n    doneCallbacks.push(done);\n  }\n  function resetTimer() {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  }\n  function abort() {\n    if (status === \"pending\") {\n      status = \"aborted\";\n    }\n    resetTimer();\n    queue.forEach(item => {\n      if (item.status === \"pending\") {\n        item.status = \"aborted\";\n      }\n    });\n    queue = [];\n  }\n  function subscribe(callback, overwrite) {\n    if (overwrite) {\n      doneCallbacks = [];\n    }\n    if (typeof callback === \"function\") {\n      doneCallbacks.push(callback);\n    }\n  }\n  function getQueryStatus() {\n    return {\n      startTime,\n      payload,\n      status,\n      queriesSent,\n      queriesPending: queue.length,\n      subscribe,\n      abort\n    };\n  }\n  function failQuery() {\n    status = \"failed\";\n    doneCallbacks.forEach(callback => {\n      callback(void 0, lastError);\n    });\n  }\n  function clearQueue() {\n    queue.forEach(item => {\n      if (item.status === \"pending\") {\n        item.status = \"aborted\";\n      }\n    });\n    queue = [];\n  }\n  function moduleResponse(item, response, data) {\n    const isError = response !== \"success\";\n    queue = queue.filter(queued => queued !== item);\n    switch (status) {\n      case \"pending\":\n        break;\n      case \"failed\":\n        if (isError || !config.dataAfterTimeout) {\n          return;\n        }\n        break;\n      default:\n        return;\n    }\n    if (response === \"abort\") {\n      lastError = data;\n      failQuery();\n      return;\n    }\n    if (isError) {\n      lastError = data;\n      if (!queue.length) {\n        if (!resources.length) {\n          failQuery();\n        } else {\n          execNext();\n        }\n      }\n      return;\n    }\n    resetTimer();\n    clearQueue();\n    if (!config.random) {\n      const index = config.resources.indexOf(item.resource);\n      if (index !== -1 && index !== config.index) {\n        config.index = index;\n      }\n    }\n    status = \"completed\";\n    doneCallbacks.forEach(callback => {\n      callback(data);\n    });\n  }\n  function execNext() {\n    if (status !== \"pending\") {\n      return;\n    }\n    resetTimer();\n    const resource = resources.shift();\n    if (resource === void 0) {\n      if (queue.length) {\n        timer = setTimeout(() => {\n          resetTimer();\n          if (status === \"pending\") {\n            clearQueue();\n            failQuery();\n          }\n        }, config.timeout);\n        return;\n      }\n      failQuery();\n      return;\n    }\n    const item = {\n      status: \"pending\",\n      resource,\n      callback: (status2, data) => {\n        moduleResponse(item, status2, data);\n      }\n    };\n    queue.push(item);\n    queriesSent++;\n    timer = setTimeout(execNext, config.rotate);\n    query(resource, payload, item.callback);\n  }\n  setTimeout(execNext);\n  return getQueryStatus;\n}\n\n// src/index.ts\nfunction initRedundancy(cfg) {\n  const config = {\n    ...defaultConfig,\n    ...cfg\n  };\n  let queries = [];\n  function cleanup() {\n    queries = queries.filter(item => item().status === \"pending\");\n  }\n  function query(payload, queryCallback, doneCallback) {\n    const query2 = sendQuery(config, payload, queryCallback, (data, error) => {\n      cleanup();\n      if (doneCallback) {\n        doneCallback(data, error);\n      }\n    });\n    queries.push(query2);\n    return query2;\n  }\n  function find(callback) {\n    return queries.find(value => {\n      return callback(value);\n    }) || null;\n  }\n  const instance = {\n    query,\n    find,\n    setIndex: index => {\n      config.index = index;\n    },\n    getIndex: () => config.index,\n    cleanup\n  };\n  return instance;\n}\nfunction createAPIConfig(source) {\n  let resources;\n  if (typeof source.resources === \"string\") {\n    resources = [source.resources];\n  } else {\n    resources = source.resources;\n    if (!(resources instanceof Array) || !resources.length) {\n      return null;\n    }\n  }\n  const result = {\n    // API hosts\n    resources,\n    // Root path\n    path: source.path || \"/\",\n    // URL length limit\n    maxURL: source.maxURL || 500,\n    // Timeout before next host is used.\n    rotate: source.rotate || 750,\n    // Timeout before failing query.\n    timeout: source.timeout || 5e3,\n    // Randomise default API end point.\n    random: source.random === true,\n    // Start index\n    index: source.index || 0,\n    // Receive data after time out (used if time out kicks in first, then API module sends data anyway).\n    dataAfterTimeout: source.dataAfterTimeout !== false\n  };\n  return result;\n}\nconst configStorage = /* @__PURE__ */Object.create(null);\nconst fallBackAPISources = [\"https://api.simplesvg.com\", \"https://api.unisvg.com\"];\nconst fallBackAPI = [];\nwhile (fallBackAPISources.length > 0) {\n  if (fallBackAPISources.length === 1) {\n    fallBackAPI.push(fallBackAPISources.shift());\n  } else {\n    if (Math.random() > 0.5) {\n      fallBackAPI.push(fallBackAPISources.shift());\n    } else {\n      fallBackAPI.push(fallBackAPISources.pop());\n    }\n  }\n}\nconfigStorage[\"\"] = createAPIConfig({\n  resources: [\"https://api.iconify.design\"].concat(fallBackAPI)\n});\nfunction addAPIProvider$1(provider, customConfig) {\n  const config = createAPIConfig(customConfig);\n  if (config === null) {\n    return false;\n  }\n  configStorage[provider] = config;\n  return true;\n}\nfunction getAPIConfig(provider) {\n  return configStorage[provider];\n}\nfunction listAPIProviders() {\n  return Object.keys(configStorage);\n}\nfunction emptyCallback$1() {}\nconst redundancyCache = /* @__PURE__ */Object.create(null);\nfunction getRedundancyCache(provider) {\n  if (!redundancyCache[provider]) {\n    const config = getAPIConfig(provider);\n    if (!config) {\n      return;\n    }\n    const redundancy = initRedundancy(config);\n    const cachedReundancy = {\n      config,\n      redundancy\n    };\n    redundancyCache[provider] = cachedReundancy;\n  }\n  return redundancyCache[provider];\n}\nfunction sendAPIQuery(target, query, callback) {\n  let redundancy;\n  let send;\n  if (typeof target === \"string\") {\n    const api = getAPIModule(target);\n    if (!api) {\n      callback(void 0, 424);\n      return emptyCallback$1;\n    }\n    send = api.send;\n    const cached = getRedundancyCache(target);\n    if (cached) {\n      redundancy = cached.redundancy;\n    }\n  } else {\n    const config = createAPIConfig(target);\n    if (config) {\n      redundancy = initRedundancy(config);\n      const moduleKey = target.resources ? target.resources[0] : \"\";\n      const api = getAPIModule(moduleKey);\n      if (api) {\n        send = api.send;\n      }\n    }\n  }\n  if (!redundancy || !send) {\n    callback(void 0, 424);\n    return emptyCallback$1;\n  }\n  return redundancy.query(query, send, callback)().abort;\n}\nconst browserCacheVersion = \"iconify2\";\nconst browserCachePrefix = \"iconify\";\nconst browserCacheCountKey = browserCachePrefix + \"-count\";\nconst browserCacheVersionKey = browserCachePrefix + \"-version\";\nconst browserStorageHour = 36e5;\nconst browserStorageCacheExpiration = 168;\nconst browserStorageLimit = 50;\nfunction getStoredItem(func, key) {\n  try {\n    return func.getItem(key);\n  } catch (err) {}\n}\nfunction setStoredItem(func, key, value) {\n  try {\n    func.setItem(key, value);\n    return true;\n  } catch (err) {}\n}\nfunction removeStoredItem(func, key) {\n  try {\n    func.removeItem(key);\n  } catch (err) {}\n}\nfunction setBrowserStorageItemsCount(storage, value) {\n  return setStoredItem(storage, browserCacheCountKey, value.toString());\n}\nfunction getBrowserStorageItemsCount(storage) {\n  return parseInt(getStoredItem(storage, browserCacheCountKey)) || 0;\n}\nconst browserStorageConfig = {\n  local: true,\n  session: true\n};\nconst browserStorageEmptyItems = {\n  local: /* @__PURE__ */new Set(),\n  session: /* @__PURE__ */new Set()\n};\nlet browserStorageStatus = false;\nfunction setBrowserStorageStatus(status) {\n  browserStorageStatus = status;\n}\nlet _window = typeof window === \"undefined\" ? {} : window;\nfunction getBrowserStorage(key) {\n  const attr = key + \"Storage\";\n  try {\n    if (_window && _window[attr] && typeof _window[attr].length === \"number\") {\n      return _window[attr];\n    }\n  } catch (err) {}\n  browserStorageConfig[key] = false;\n}\nfunction iterateBrowserStorage(key, callback) {\n  const func = getBrowserStorage(key);\n  if (!func) {\n    return;\n  }\n  const version = getStoredItem(func, browserCacheVersionKey);\n  if (version !== browserCacheVersion) {\n    if (version) {\n      const total2 = getBrowserStorageItemsCount(func);\n      for (let i = 0; i < total2; i++) {\n        removeStoredItem(func, browserCachePrefix + i.toString());\n      }\n    }\n    setStoredItem(func, browserCacheVersionKey, browserCacheVersion);\n    setBrowserStorageItemsCount(func, 0);\n    return;\n  }\n  const minTime = Math.floor(Date.now() / browserStorageHour) - browserStorageCacheExpiration;\n  const parseItem = index => {\n    const name = browserCachePrefix + index.toString();\n    const item = getStoredItem(func, name);\n    if (typeof item !== \"string\") {\n      return;\n    }\n    try {\n      const data = JSON.parse(item);\n      if (typeof data === \"object\" && typeof data.cached === \"number\" && data.cached > minTime && typeof data.provider === \"string\" && typeof data.data === \"object\" && typeof data.data.prefix === \"string\" &&\n      // Valid item: run callback\n      callback(data, index)) {\n        return true;\n      }\n    } catch (err) {}\n    removeStoredItem(func, name);\n  };\n  let total = getBrowserStorageItemsCount(func);\n  for (let i = total - 1; i >= 0; i--) {\n    if (!parseItem(i)) {\n      if (i === total - 1) {\n        total--;\n        setBrowserStorageItemsCount(func, total);\n      } else {\n        browserStorageEmptyItems[key].add(i);\n      }\n    }\n  }\n}\nfunction initBrowserStorage() {\n  if (browserStorageStatus) {\n    return;\n  }\n  setBrowserStorageStatus(true);\n  for (const key in browserStorageConfig) {\n    iterateBrowserStorage(key, item => {\n      const iconSet = item.data;\n      const provider = item.provider;\n      const prefix = iconSet.prefix;\n      const storage = getStorage(provider, prefix);\n      if (!addIconSet(storage, iconSet).length) {\n        return false;\n      }\n      const lastModified = iconSet.lastModified || -1;\n      storage.lastModifiedCached = storage.lastModifiedCached ? Math.min(storage.lastModifiedCached, lastModified) : lastModified;\n      return true;\n    });\n  }\n}\nfunction updateLastModified(storage, lastModified) {\n  const lastValue = storage.lastModifiedCached;\n  if (\n  // Matches or newer\n  lastValue && lastValue >= lastModified) {\n    return lastValue === lastModified;\n  }\n  storage.lastModifiedCached = lastModified;\n  if (lastValue) {\n    for (const key in browserStorageConfig) {\n      iterateBrowserStorage(key, item => {\n        const iconSet = item.data;\n        return item.provider !== storage.provider || iconSet.prefix !== storage.prefix || iconSet.lastModified === lastModified;\n      });\n    }\n  }\n  return true;\n}\nfunction storeInBrowserStorage(storage, data) {\n  if (!browserStorageStatus) {\n    initBrowserStorage();\n  }\n  function store(key) {\n    let func;\n    if (!browserStorageConfig[key] || !(func = getBrowserStorage(key))) {\n      return;\n    }\n    const set = browserStorageEmptyItems[key];\n    let index;\n    if (set.size) {\n      set.delete(index = Array.from(set).shift());\n    } else {\n      index = getBrowserStorageItemsCount(func);\n      if (index >= browserStorageLimit || !setBrowserStorageItemsCount(func, index + 1)) {\n        return;\n      }\n    }\n    const item = {\n      cached: Math.floor(Date.now() / browserStorageHour),\n      provider: storage.provider,\n      data\n    };\n    return setStoredItem(func, browserCachePrefix + index.toString(), JSON.stringify(item));\n  }\n  if (data.lastModified && !updateLastModified(storage, data.lastModified)) {\n    return;\n  }\n  if (!Object.keys(data.icons).length) {\n    return;\n  }\n  if (data.not_found) {\n    data = Object.assign({}, data);\n    delete data.not_found;\n  }\n  if (!store(\"local\")) {\n    store(\"session\");\n  }\n}\nfunction emptyCallback() {}\nfunction loadedNewIcons(storage) {\n  if (!storage.iconsLoaderFlag) {\n    storage.iconsLoaderFlag = true;\n    setTimeout(() => {\n      storage.iconsLoaderFlag = false;\n      updateCallbacks(storage);\n    });\n  }\n}\nfunction loadNewIcons(storage, icons) {\n  if (!storage.iconsToLoad) {\n    storage.iconsToLoad = icons;\n  } else {\n    storage.iconsToLoad = storage.iconsToLoad.concat(icons).sort();\n  }\n  if (!storage.iconsQueueFlag) {\n    storage.iconsQueueFlag = true;\n    setTimeout(() => {\n      storage.iconsQueueFlag = false;\n      const {\n        provider,\n        prefix\n      } = storage;\n      const icons2 = storage.iconsToLoad;\n      delete storage.iconsToLoad;\n      let api;\n      if (!icons2 || !(api = getAPIModule(provider))) {\n        return;\n      }\n      const params = api.prepare(provider, prefix, icons2);\n      params.forEach(item => {\n        sendAPIQuery(provider, item, data => {\n          if (typeof data !== \"object\") {\n            item.icons.forEach(name => {\n              storage.missing.add(name);\n            });\n          } else {\n            try {\n              const parsed = addIconSet(storage, data);\n              if (!parsed.length) {\n                return;\n              }\n              const pending = storage.pendingIcons;\n              if (pending) {\n                parsed.forEach(name => {\n                  pending.delete(name);\n                });\n              }\n              storeInBrowserStorage(storage, data);\n            } catch (err) {\n              console.error(err);\n            }\n          }\n          loadedNewIcons(storage);\n        });\n      });\n    });\n  }\n}\nconst loadIcons$1 = (icons, callback) => {\n  const cleanedIcons = listToIcons(icons, true, allowSimpleNames());\n  const sortedIcons = sortIcons(cleanedIcons);\n  if (!sortedIcons.pending.length) {\n    let callCallback = true;\n    if (callback) {\n      setTimeout(() => {\n        if (callCallback) {\n          callback(sortedIcons.loaded, sortedIcons.missing, sortedIcons.pending, emptyCallback);\n        }\n      });\n    }\n    return () => {\n      callCallback = false;\n    };\n  }\n  const newIcons = /* @__PURE__ */Object.create(null);\n  const sources = [];\n  let lastProvider, lastPrefix;\n  sortedIcons.pending.forEach(icon => {\n    const {\n      provider,\n      prefix\n    } = icon;\n    if (prefix === lastPrefix && provider === lastProvider) {\n      return;\n    }\n    lastProvider = provider;\n    lastPrefix = prefix;\n    sources.push(getStorage(provider, prefix));\n    const providerNewIcons = newIcons[provider] || (newIcons[provider] = /* @__PURE__ */Object.create(null));\n    if (!providerNewIcons[prefix]) {\n      providerNewIcons[prefix] = [];\n    }\n  });\n  sortedIcons.pending.forEach(icon => {\n    const {\n      provider,\n      prefix,\n      name\n    } = icon;\n    const storage = getStorage(provider, prefix);\n    const pendingQueue = storage.pendingIcons || (storage.pendingIcons = /* @__PURE__ */new Set());\n    if (!pendingQueue.has(name)) {\n      pendingQueue.add(name);\n      newIcons[provider][prefix].push(name);\n    }\n  });\n  sources.forEach(storage => {\n    const {\n      provider,\n      prefix\n    } = storage;\n    if (newIcons[provider][prefix].length) {\n      loadNewIcons(storage, newIcons[provider][prefix]);\n    }\n  });\n  return callback ? storeCallback(callback, sortedIcons, sources) : emptyCallback;\n};\nconst loadIcon$1 = icon => {\n  return new Promise((fulfill, reject) => {\n    const iconObj = typeof icon === \"string\" ? stringToIcon(icon, true) : icon;\n    if (!iconObj) {\n      reject(icon);\n      return;\n    }\n    loadIcons$1([iconObj || icon], loaded => {\n      if (loaded.length && iconObj) {\n        const data = getIconData(iconObj);\n        if (data) {\n          fulfill({\n            ...defaultIconProps,\n            ...data\n          });\n          return;\n        }\n      }\n      reject(icon);\n    });\n  });\n};\n\n/**\n * Test icon string\n */\nfunction testIconObject(value) {\n  try {\n    const obj = typeof value === 'string' ? JSON.parse(value) : value;\n    if (typeof obj.body === 'string') {\n      return {\n        ...obj\n      };\n    }\n  } catch (err) {\n    //\n  }\n}\n\n/**\n * Parse icon value, load if needed\n */\nfunction parseIconValue(value, onload) {\n  // Check if icon name is valid\n  const name = typeof value === 'string' ? stringToIcon(value, true, true) : null;\n  if (!name) {\n    // Test for serialised object\n    const data = testIconObject(value);\n    return {\n      value,\n      data\n    };\n  }\n  // Valid icon name: check if data is available\n  const data = getIconData(name);\n  // Icon data exists or icon has no prefix. Do not load icon from API if icon has no prefix\n  if (data !== void 0 || !name.prefix) {\n    return {\n      value,\n      name,\n      data // could be 'null' -> icon is missing\n    };\n  }\n  // Load icon\n  const loading = loadIcons$1([name], () => onload(value, name, getIconData(name)));\n  return {\n    value,\n    name,\n    loading\n  };\n}\n\n// Check for Safari\nlet isBuggedSafari = false;\ntry {\n  isBuggedSafari = navigator.vendor.indexOf('Apple') === 0;\n} catch (err) {\n  //\n}\n/**\n * Get render mode\n */\nfunction getRenderMode(body, mode) {\n  switch (mode) {\n    // Force mode\n    case 'svg':\n    case 'bg':\n    case 'mask':\n      return mode;\n  }\n  // Check for animation, use 'style' for animated icons, unless browser is Safari\n  // (only <a>, which should be ignored or animations start with '<a')\n  if (mode !== 'style' && (isBuggedSafari || body.indexOf('<a') === -1)) {\n    // Render <svg>\n    return 'svg';\n  }\n  // Use background or mask\n  return body.indexOf('currentColor') === -1 ? 'bg' : 'mask';\n}\nconst unitsSplit = /(-?[0-9.]*[0-9]+[0-9.]*)/g;\nconst unitsTest = /^-?[0-9.]*[0-9]+[0-9.]*$/g;\nfunction calculateSize$1(size, ratio, precision) {\n  if (ratio === 1) {\n    return size;\n  }\n  precision = precision || 100;\n  if (typeof size === \"number\") {\n    return Math.ceil(size * ratio * precision) / precision;\n  }\n  if (typeof size !== \"string\") {\n    return size;\n  }\n  const oldParts = size.split(unitsSplit);\n  if (oldParts === null || !oldParts.length) {\n    return size;\n  }\n  const newParts = [];\n  let code = oldParts.shift();\n  let isNumber = unitsTest.test(code);\n  while (true) {\n    if (isNumber) {\n      const num = parseFloat(code);\n      if (isNaN(num)) {\n        newParts.push(code);\n      } else {\n        newParts.push(Math.ceil(num * ratio * precision) / precision);\n      }\n    } else {\n      newParts.push(code);\n    }\n    code = oldParts.shift();\n    if (code === void 0) {\n      return newParts.join(\"\");\n    }\n    isNumber = !isNumber;\n  }\n}\nfunction splitSVGDefs(content, tag = \"defs\") {\n  let defs = \"\";\n  const index = content.indexOf(\"<\" + tag);\n  while (index >= 0) {\n    const start = content.indexOf(\">\", index);\n    const end = content.indexOf(\"</\" + tag);\n    if (start === -1 || end === -1) {\n      break;\n    }\n    const endEnd = content.indexOf(\">\", end);\n    if (endEnd === -1) {\n      break;\n    }\n    defs += content.slice(start + 1, end).trim();\n    content = content.slice(0, index).trim() + content.slice(endEnd + 1);\n  }\n  return {\n    defs,\n    content\n  };\n}\nfunction mergeDefsAndContent(defs, content) {\n  return defs ? \"<defs>\" + defs + \"</defs>\" + content : content;\n}\nfunction wrapSVGContent(body, start, end) {\n  const split = splitSVGDefs(body);\n  return mergeDefsAndContent(split.defs, start + split.content + end);\n}\nconst isUnsetKeyword = value => value === \"unset\" || value === \"undefined\" || value === \"none\";\nfunction iconToSVG(icon, customisations) {\n  const fullIcon = {\n    ...defaultIconProps,\n    ...icon\n  };\n  const fullCustomisations = {\n    ...defaultIconCustomisations,\n    ...customisations\n  };\n  const box = {\n    left: fullIcon.left,\n    top: fullIcon.top,\n    width: fullIcon.width,\n    height: fullIcon.height\n  };\n  let body = fullIcon.body;\n  [fullIcon, fullCustomisations].forEach(props => {\n    const transformations = [];\n    const hFlip = props.hFlip;\n    const vFlip = props.vFlip;\n    let rotation = props.rotate;\n    if (hFlip) {\n      if (vFlip) {\n        rotation += 2;\n      } else {\n        transformations.push(\"translate(\" + (box.width + box.left).toString() + \" \" + (0 - box.top).toString() + \")\");\n        transformations.push(\"scale(-1 1)\");\n        box.top = box.left = 0;\n      }\n    } else if (vFlip) {\n      transformations.push(\"translate(\" + (0 - box.left).toString() + \" \" + (box.height + box.top).toString() + \")\");\n      transformations.push(\"scale(1 -1)\");\n      box.top = box.left = 0;\n    }\n    let tempValue;\n    if (rotation < 0) {\n      rotation -= Math.floor(rotation / 4) * 4;\n    }\n    rotation = rotation % 4;\n    switch (rotation) {\n      case 1:\n        tempValue = box.height / 2 + box.top;\n        transformations.unshift(\"rotate(90 \" + tempValue.toString() + \" \" + tempValue.toString() + \")\");\n        break;\n      case 2:\n        transformations.unshift(\"rotate(180 \" + (box.width / 2 + box.left).toString() + \" \" + (box.height / 2 + box.top).toString() + \")\");\n        break;\n      case 3:\n        tempValue = box.width / 2 + box.left;\n        transformations.unshift(\"rotate(-90 \" + tempValue.toString() + \" \" + tempValue.toString() + \")\");\n        break;\n    }\n    if (rotation % 2 === 1) {\n      if (box.left !== box.top) {\n        tempValue = box.left;\n        box.left = box.top;\n        box.top = tempValue;\n      }\n      if (box.width !== box.height) {\n        tempValue = box.width;\n        box.width = box.height;\n        box.height = tempValue;\n      }\n    }\n    if (transformations.length) {\n      body = wrapSVGContent(body, '<g transform=\"' + transformations.join(\" \") + '\">', \"</g>\");\n    }\n  });\n  const customisationsWidth = fullCustomisations.width;\n  const customisationsHeight = fullCustomisations.height;\n  const boxWidth = box.width;\n  const boxHeight = box.height;\n  let width;\n  let height;\n  if (customisationsWidth === null) {\n    height = customisationsHeight === null ? \"1em\" : customisationsHeight === \"auto\" ? boxHeight : customisationsHeight;\n    width = calculateSize$1(height, boxWidth / boxHeight);\n  } else {\n    width = customisationsWidth === \"auto\" ? boxWidth : customisationsWidth;\n    height = customisationsHeight === null ? calculateSize$1(width, boxHeight / boxWidth) : customisationsHeight === \"auto\" ? boxHeight : customisationsHeight;\n  }\n  const attributes = {};\n  const setAttr = (prop, value) => {\n    if (!isUnsetKeyword(value)) {\n      attributes[prop] = value.toString();\n    }\n  };\n  setAttr(\"width\", width);\n  setAttr(\"height\", height);\n  const viewBox = [box.left, box.top, boxWidth, boxHeight];\n  attributes.viewBox = viewBox.join(\" \");\n  return {\n    attributes,\n    viewBox,\n    body\n  };\n}\nfunction iconToHTML$1(body, attributes) {\n  let renderAttribsHTML = body.indexOf(\"xlink:\") === -1 ? \"\" : ' xmlns:xlink=\"http://www.w3.org/1999/xlink\"';\n  for (const attr in attributes) {\n    renderAttribsHTML += \" \" + attr + '=\"' + attributes[attr] + '\"';\n  }\n  return '<svg xmlns=\"http://www.w3.org/2000/svg\"' + renderAttribsHTML + \">\" + body + \"</svg>\";\n}\nfunction encodeSVGforURL(svg) {\n  return svg.replace(/\"/g, \"'\").replace(/%/g, \"%25\").replace(/#/g, \"%23\").replace(/</g, \"%3C\").replace(/>/g, \"%3E\").replace(/\\s+/g, \" \");\n}\nfunction svgToData(svg) {\n  return \"data:image/svg+xml,\" + encodeSVGforURL(svg);\n}\nfunction svgToURL$1(svg) {\n  return 'url(\"' + svgToData(svg) + '\")';\n}\nconst detectFetch = () => {\n  let callback;\n  try {\n    callback = fetch;\n    if (typeof callback === \"function\") {\n      return callback;\n    }\n  } catch (err) {}\n};\nlet fetchModule = detectFetch();\nfunction setFetch(fetch2) {\n  fetchModule = fetch2;\n}\nfunction getFetch() {\n  return fetchModule;\n}\nfunction calculateMaxLength(provider, prefix) {\n  const config = getAPIConfig(provider);\n  if (!config) {\n    return 0;\n  }\n  let result;\n  if (!config.maxURL) {\n    result = 0;\n  } else {\n    let maxHostLength = 0;\n    config.resources.forEach(item => {\n      const host = item;\n      maxHostLength = Math.max(maxHostLength, host.length);\n    });\n    const url = prefix + \".json?icons=\";\n    result = config.maxURL - maxHostLength - config.path.length - url.length;\n  }\n  return result;\n}\nfunction shouldAbort(status) {\n  return status === 404;\n}\nconst prepare = (provider, prefix, icons) => {\n  const results = [];\n  const maxLength = calculateMaxLength(provider, prefix);\n  const type = \"icons\";\n  let item = {\n    type,\n    provider,\n    prefix,\n    icons: []\n  };\n  let length = 0;\n  icons.forEach((name, index) => {\n    length += name.length + 1;\n    if (length >= maxLength && index > 0) {\n      results.push(item);\n      item = {\n        type,\n        provider,\n        prefix,\n        icons: []\n      };\n      length = name.length;\n    }\n    item.icons.push(name);\n  });\n  results.push(item);\n  return results;\n};\nfunction getPath(provider) {\n  if (typeof provider === \"string\") {\n    const config = getAPIConfig(provider);\n    if (config) {\n      return config.path;\n    }\n  }\n  return \"/\";\n}\nconst send = (host, params, callback) => {\n  if (!fetchModule) {\n    callback(\"abort\", 424);\n    return;\n  }\n  let path = getPath(params.provider);\n  switch (params.type) {\n    case \"icons\":\n      {\n        const prefix = params.prefix;\n        const icons = params.icons;\n        const iconsList = icons.join(\",\");\n        const urlParams = new URLSearchParams({\n          icons: iconsList\n        });\n        path += prefix + \".json?\" + urlParams.toString();\n        break;\n      }\n    case \"custom\":\n      {\n        const uri = params.uri;\n        path += uri.slice(0, 1) === \"/\" ? uri.slice(1) : uri;\n        break;\n      }\n    default:\n      callback(\"abort\", 400);\n      return;\n  }\n  let defaultError = 503;\n  fetchModule(host + path).then(response => {\n    const status = response.status;\n    if (status !== 200) {\n      setTimeout(() => {\n        callback(shouldAbort(status) ? \"abort\" : \"next\", status);\n      });\n      return;\n    }\n    defaultError = 501;\n    return response.json();\n  }).then(data => {\n    if (typeof data !== \"object\" || data === null) {\n      setTimeout(() => {\n        if (data === 404) {\n          callback(\"abort\", data);\n        } else {\n          callback(\"next\", defaultError);\n        }\n      });\n      return;\n    }\n    setTimeout(() => {\n      callback(\"success\", data);\n    });\n  }).catch(() => {\n    callback(\"next\", defaultError);\n  });\n};\nconst fetchAPIModule = {\n  prepare,\n  send\n};\nfunction toggleBrowserCache(storage, value) {\n  switch (storage) {\n    case \"local\":\n    case \"session\":\n      browserStorageConfig[storage] = value;\n      break;\n    case \"all\":\n      for (const key in browserStorageConfig) {\n        browserStorageConfig[key] = value;\n      }\n      break;\n  }\n}\n\n/**\n * Attribute to add\n */\nconst nodeAttr = 'data-style';\n/**\n * Custom style to add to each node\n */\nlet customStyle = '';\n/**\n * Set custom style to add to all components\n *\n * Affects only components rendered after function call\n */\nfunction appendCustomStyle(style) {\n  customStyle = style;\n}\n/**\n * Add/update style node\n */\nfunction updateStyle(parent, inline) {\n  // Get node, create if needed\n  let styleNode = Array.from(parent.childNodes).find(node => node.hasAttribute && node.hasAttribute(nodeAttr));\n  if (!styleNode) {\n    styleNode = document.createElement('style');\n    styleNode.setAttribute(nodeAttr, nodeAttr);\n    parent.appendChild(styleNode);\n  }\n  // Update content\n  styleNode.textContent = ':host{display:inline-block;vertical-align:' + (inline ? '-0.125em' : '0') + '}span,svg{display:block}' + customStyle;\n}\n\n// Core\n/**\n * Get functions and initialise stuff\n */\nfunction exportFunctions() {\n  /**\n   * Initialise stuff\n   */\n  // Set API module\n  setAPIModule('', fetchAPIModule);\n  // Allow simple icon names\n  allowSimpleNames(true);\n  let _window;\n  try {\n    _window = window;\n  } catch (err) {\n    //\n  }\n  if (_window) {\n    // Set cache and load existing cache\n    initBrowserStorage();\n    // Load icons from global \"IconifyPreload\"\n    if (_window.IconifyPreload !== void 0) {\n      const preload = _window.IconifyPreload;\n      const err = 'Invalid IconifyPreload syntax.';\n      if (typeof preload === 'object' && preload !== null) {\n        (preload instanceof Array ? preload : [preload]).forEach(item => {\n          try {\n            if (\n            // Check if item is an object and not null/array\n            typeof item !== 'object' || item === null || item instanceof Array ||\n            // Check for 'icons' and 'prefix'\n            typeof item.icons !== 'object' || typeof item.prefix !== 'string' ||\n            // Add icon set\n            !addCollection$1(item)) {\n              console.error(err);\n            }\n          } catch (e) {\n            console.error(err);\n          }\n        });\n      }\n    }\n    // Set API from global \"IconifyProviders\"\n    if (_window.IconifyProviders !== void 0) {\n      const providers = _window.IconifyProviders;\n      if (typeof providers === 'object' && providers !== null) {\n        for (const key in providers) {\n          const err = 'IconifyProviders[' + key + '] is invalid.';\n          try {\n            const value = providers[key];\n            if (typeof value !== 'object' || !value || value.resources === void 0) {\n              continue;\n            }\n            if (!addAPIProvider$1(key, value)) {\n              console.error(err);\n            }\n          } catch (e) {\n            console.error(err);\n          }\n        }\n      }\n    }\n  }\n  const _api = {\n    getAPIConfig,\n    setAPIModule,\n    sendAPIQuery,\n    setFetch,\n    getFetch,\n    listAPIProviders\n  };\n  return {\n    enableCache: storage => toggleBrowserCache(storage, true),\n    disableCache: storage => toggleBrowserCache(storage, false),\n    iconLoaded: iconLoaded$1,\n    iconExists: iconLoaded$1,\n    // deprecated, kept to avoid breaking changes\n    getIcon: getIcon$1,\n    listIcons: listIcons$1,\n    addIcon: addIcon$1,\n    addCollection: addCollection$1,\n    calculateSize: calculateSize$1,\n    buildIcon: iconToSVG,\n    iconToHTML: iconToHTML$1,\n    svgToURL: svgToURL$1,\n    loadIcons: loadIcons$1,\n    loadIcon: loadIcon$1,\n    addAPIProvider: addAPIProvider$1,\n    appendCustomStyle,\n    _api\n  };\n}\n\n// List of properties to apply\nconst monotoneProps = {\n  'background-color': 'currentColor'\n};\nconst coloredProps = {\n  'background-color': 'transparent'\n};\n// Dynamically add common props to variables above\nconst propsToAdd = {\n  image: 'var(--svg)',\n  repeat: 'no-repeat',\n  size: '100% 100%'\n};\nconst propsToAddTo = {\n  '-webkit-mask': monotoneProps,\n  'mask': monotoneProps,\n  'background': coloredProps\n};\nfor (const prefix in propsToAddTo) {\n  const list = propsToAddTo[prefix];\n  for (const prop in propsToAdd) {\n    list[prefix + '-' + prop] = propsToAdd[prop];\n  }\n}\n/**\n * Fix size: add 'px' to numbers\n */\nfunction fixSize(value) {\n  return value ? value + (value.match(/^[-0-9.]+$/) ? 'px' : '') : 'inherit';\n}\n/**\n * Render node as <span>\n */\nfunction renderSPAN(data, icon, useMask) {\n  const node = document.createElement('span');\n  // Body\n  let body = data.body;\n  if (body.indexOf('<a') !== -1) {\n    // Animated SVG: add something to fix timing bug\n    body += '<!-- ' + Date.now() + ' -->';\n  }\n  // Generate SVG as URL\n  const renderAttribs = data.attributes;\n  const html = iconToHTML$1(body, {\n    ...renderAttribs,\n    width: icon.width + '',\n    height: icon.height + ''\n  });\n  const url = svgToURL$1(html);\n  // Generate style\n  const svgStyle = node.style;\n  const styles = {\n    '--svg': url,\n    'width': fixSize(renderAttribs.width),\n    'height': fixSize(renderAttribs.height),\n    ...(useMask ? monotoneProps : coloredProps)\n  };\n  // Apply style\n  for (const prop in styles) {\n    svgStyle.setProperty(prop, styles[prop]);\n  }\n  return node;\n}\nlet policy;\nfunction createPolicy() {\n  try {\n    policy = window.trustedTypes.createPolicy(\"iconify\", {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n      createHTML: s => s\n    });\n  } catch (err) {\n    policy = null;\n  }\n}\nfunction cleanUpInnerHTML(html) {\n  if (policy === void 0) {\n    createPolicy();\n  }\n  return policy ? policy.createHTML(html) : html;\n}\n\n/**\n * Render node as <svg>\n */\nfunction renderSVG(data) {\n  const node = document.createElement('span');\n  // Add style if needed\n  const attr = data.attributes;\n  let style = '';\n  if (!attr.width) {\n    style = 'width: inherit;';\n  }\n  if (!attr.height) {\n    style += 'height: inherit;';\n  }\n  if (style) {\n    attr.style = style;\n  }\n  // Generate SVG\n  const html = iconToHTML$1(data.body, attr);\n  node.innerHTML = cleanUpInnerHTML(html);\n  return node.firstChild;\n}\n\n/**\n * Find icon node\n */\nfunction findIconElement(parent) {\n  return Array.from(parent.childNodes).find(node => {\n    const tag = node.tagName && node.tagName.toUpperCase();\n    return tag === 'SPAN' || tag === 'SVG';\n  });\n}\n/**\n * Render icon\n */\nfunction renderIcon(parent, state) {\n  const iconData = state.icon.data;\n  const customisations = state.customisations;\n  // Render icon\n  const renderData = iconToSVG(iconData, customisations);\n  if (customisations.preserveAspectRatio) {\n    renderData.attributes['preserveAspectRatio'] = customisations.preserveAspectRatio;\n  }\n  const mode = state.renderedMode;\n  let node;\n  switch (mode) {\n    case 'svg':\n      node = renderSVG(renderData);\n      break;\n    default:\n      node = renderSPAN(renderData, {\n        ...defaultIconProps,\n        ...iconData\n      }, mode === 'mask');\n  }\n  // Set element\n  const oldNode = findIconElement(parent);\n  if (oldNode) {\n    // Replace old element\n    if (node.tagName === 'SPAN' && oldNode.tagName === node.tagName) {\n      // Swap style instead of whole node\n      oldNode.setAttribute('style', node.getAttribute('style'));\n    } else {\n      parent.replaceChild(node, oldNode);\n    }\n  } else {\n    // Add new element\n    parent.appendChild(node);\n  }\n}\n\n/**\n * Set state to PendingState\n */\nfunction setPendingState(icon, inline, lastState) {\n  const lastRender = lastState && (lastState.rendered ? lastState : lastState.lastRender);\n  return {\n    rendered: false,\n    inline,\n    icon,\n    lastRender\n  };\n}\n\n/**\n * Register 'iconify-icon' component, if it does not exist\n */\nfunction defineIconifyIcon(name = 'iconify-icon') {\n  // Check for custom elements registry and HTMLElement\n  let customElements;\n  let ParentClass;\n  try {\n    customElements = window.customElements;\n    ParentClass = window.HTMLElement;\n  } catch (err) {\n    return;\n  }\n  // Make sure registry and HTMLElement exist\n  if (!customElements || !ParentClass) {\n    return;\n  }\n  // Check for duplicate\n  const ConflictingClass = customElements.get(name);\n  if (ConflictingClass) {\n    return ConflictingClass;\n  }\n  // All attributes\n  const attributes = [\n  // Icon\n  'icon',\n  // Mode\n  'mode', 'inline', 'noobserver',\n  // Customisations\n  'width', 'height', 'rotate', 'flip'];\n  /**\n   * Component class\n   */\n  const IconifyIcon = class extends ParentClass {\n    // Root\n    _shadowRoot;\n    // Initialised\n    _initialised = false;\n    // Icon state\n    _state;\n    // Attributes check queued\n    _checkQueued = false;\n    // Connected\n    _connected = false;\n    // Observer\n    _observer = null;\n    _visible = true;\n    /**\n     * Constructor\n     */\n    constructor() {\n      super();\n      // Attach shadow DOM\n      const root = this._shadowRoot = this.attachShadow({\n        mode: 'open'\n      });\n      // Add style\n      const inline = this.hasAttribute('inline');\n      updateStyle(root, inline);\n      // Create empty state\n      this._state = setPendingState({\n        value: ''\n      }, inline);\n      // Queue icon render\n      this._queueCheck();\n    }\n    /**\n     * Connected to DOM\n     */\n    connectedCallback() {\n      this._connected = true;\n      this.startObserver();\n    }\n    /**\n     * Disconnected from DOM\n     */\n    disconnectedCallback() {\n      this._connected = false;\n      this.stopObserver();\n    }\n    /**\n     * Observed attributes\n     */\n    static get observedAttributes() {\n      return attributes.slice(0);\n    }\n    /**\n     * Observed properties that are different from attributes\n     *\n     * Experimental! Need to test with various frameworks that support it\n     */\n    /*\n    static get properties() {\n        return {\n            inline: {\n                type: Boolean,\n                reflect: true,\n            },\n            // Not listing other attributes because they are strings or combination\n            // of string and another type. Cannot have multiple types\n        };\n    }\n    */\n    /**\n     * Attribute has changed\n     */\n    attributeChangedCallback(name) {\n      switch (name) {\n        case 'inline':\n          {\n            // Update immediately: not affected by other attributes\n            const newInline = this.hasAttribute('inline');\n            const state = this._state;\n            if (newInline !== state.inline) {\n              // Update style if inline mode changed\n              state.inline = newInline;\n              updateStyle(this._shadowRoot, newInline);\n            }\n            break;\n          }\n        case 'noobserver':\n          {\n            const value = this.hasAttribute('noobserver');\n            if (value) {\n              this.startObserver();\n            } else {\n              this.stopObserver();\n            }\n            break;\n          }\n        default:\n          // Queue check for other attributes\n          this._queueCheck();\n      }\n    }\n    /**\n     * Get/set icon\n     */\n    get icon() {\n      const value = this.getAttribute('icon');\n      if (value && value.slice(0, 1) === '{') {\n        try {\n          return JSON.parse(value);\n        } catch (err) {\n          //\n        }\n      }\n      return value;\n    }\n    set icon(value) {\n      if (typeof value === 'object') {\n        value = JSON.stringify(value);\n      }\n      this.setAttribute('icon', value);\n    }\n    /**\n     * Get/set inline\n     */\n    get inline() {\n      return this.hasAttribute('inline');\n    }\n    set inline(value) {\n      if (value) {\n        this.setAttribute('inline', 'true');\n      } else {\n        this.removeAttribute('inline');\n      }\n    }\n    /**\n     * Get/set observer\n     */\n    get observer() {\n      return this.hasAttribute('observer');\n    }\n    set observer(value) {\n      if (value) {\n        this.setAttribute('observer', 'true');\n      } else {\n        this.removeAttribute('observer');\n      }\n    }\n    /**\n     * Restart animation\n     */\n    restartAnimation() {\n      const state = this._state;\n      if (state.rendered) {\n        const root = this._shadowRoot;\n        if (state.renderedMode === 'svg') {\n          // Update root node\n          try {\n            root.lastChild.setCurrentTime(0);\n            return;\n          } catch (err) {\n            // Failed: setCurrentTime() is not supported\n          }\n        }\n        renderIcon(root, state);\n      }\n    }\n    /**\n     * Get status\n     */\n    get status() {\n      const state = this._state;\n      return state.rendered ? 'rendered' : state.icon.data === null ? 'failed' : 'loading';\n    }\n    /**\n     * Queue attributes re-check\n     */\n    _queueCheck() {\n      if (!this._checkQueued) {\n        this._checkQueued = true;\n        setTimeout(() => {\n          this._check();\n        });\n      }\n    }\n    /**\n     * Check for changes\n     */\n    _check() {\n      if (!this._checkQueued) {\n        return;\n      }\n      this._checkQueued = false;\n      const state = this._state;\n      // Get icon\n      const newIcon = this.getAttribute('icon');\n      if (newIcon !== state.icon.value) {\n        this._iconChanged(newIcon);\n        return;\n      }\n      // Ignore other attributes if icon is not rendered\n      if (!state.rendered || !this._visible) {\n        return;\n      }\n      // Check for mode and attribute changes\n      const mode = this.getAttribute('mode');\n      const customisations = getCustomisations(this);\n      if (state.attrMode !== mode || haveCustomisationsChanged(state.customisations, customisations) || !findIconElement(this._shadowRoot)) {\n        this._renderIcon(state.icon, customisations, mode);\n      }\n    }\n    /**\n     * Icon value has changed\n     */\n    _iconChanged(newValue) {\n      const icon = parseIconValue(newValue, (value, name, data) => {\n        // Asynchronous callback: re-check values to make sure stuff wasn't changed\n        const state = this._state;\n        if (state.rendered || this.getAttribute('icon') !== value) {\n          // Icon data is already available or icon attribute was changed\n          return;\n        }\n        // Change icon\n        const icon = {\n          value,\n          name,\n          data\n        };\n        if (icon.data) {\n          // Render icon\n          this._gotIconData(icon);\n        } else {\n          // Nothing to render: update icon in state\n          state.icon = icon;\n        }\n      });\n      if (icon.data) {\n        // Icon is ready to render\n        this._gotIconData(icon);\n      } else {\n        // Pending icon\n        this._state = setPendingState(icon, this._state.inline, this._state);\n      }\n    }\n    /**\n     * Force render icon on state change\n     */\n    _forceRender() {\n      if (!this._visible) {\n        // Remove icon\n        const node = findIconElement(this._shadowRoot);\n        if (node) {\n          this._shadowRoot.removeChild(node);\n        }\n        return;\n      }\n      // Re-render icon\n      this._queueCheck();\n    }\n    /**\n     * Got new icon data, icon is ready to (re)render\n     */\n    _gotIconData(icon) {\n      this._checkQueued = false;\n      this._renderIcon(icon, getCustomisations(this), this.getAttribute('mode'));\n    }\n    /**\n     * Re-render based on icon data\n     */\n    _renderIcon(icon, customisations, attrMode) {\n      // Get mode\n      const renderedMode = getRenderMode(icon.data.body, attrMode);\n      // Inline was not changed\n      const inline = this._state.inline;\n      // Set state and render\n      renderIcon(this._shadowRoot, this._state = {\n        rendered: true,\n        icon,\n        inline,\n        customisations,\n        attrMode,\n        renderedMode\n      });\n    }\n    /**\n     * Start observer\n     */\n    startObserver() {\n      if (!this._observer && !this.hasAttribute('noobserver')) {\n        try {\n          this._observer = new IntersectionObserver(entries => {\n            const intersecting = entries.some(entry => entry.isIntersecting);\n            if (intersecting !== this._visible) {\n              this._visible = intersecting;\n              this._forceRender();\n            }\n          });\n          this._observer.observe(this);\n        } catch (err) {\n          // Something went wrong, possibly observer is not supported\n          if (this._observer) {\n            try {\n              this._observer.disconnect();\n            } catch (err) {\n              //\n            }\n            this._observer = null;\n          }\n        }\n      }\n    }\n    /**\n     * Stop observer\n     */\n    stopObserver() {\n      if (this._observer) {\n        this._observer.disconnect();\n        this._observer = null;\n        this._visible = true;\n        if (this._connected) {\n          // Render icon\n          this._forceRender();\n        }\n      }\n    }\n  };\n  // Add getters and setters\n  attributes.forEach(attr => {\n    if (!(attr in IconifyIcon.prototype)) {\n      Object.defineProperty(IconifyIcon.prototype, attr, {\n        get: function () {\n          return this.getAttribute(attr);\n        },\n        set: function (value) {\n          if (value !== null) {\n            this.setAttribute(attr, value);\n          } else {\n            this.removeAttribute(attr);\n          }\n        }\n      });\n    }\n  });\n  // Add exported functions: both as static and instance methods\n  const functions = exportFunctions();\n  for (const key in functions) {\n    IconifyIcon[key] = IconifyIcon.prototype[key] = functions[key];\n  }\n  // Define new component\n  customElements.define(name, IconifyIcon);\n  return IconifyIcon;\n}\n\n/**\n * Create exported data: either component instance or functions\n */\nconst IconifyIconComponent = defineIconifyIcon() || exportFunctions();\n/**\n * Export functions\n */\nconst {\n  enableCache,\n  disableCache,\n  iconLoaded,\n  iconExists,\n  // deprecated, kept to avoid breaking changes\n  getIcon,\n  listIcons,\n  addIcon,\n  addCollection,\n  calculateSize,\n  buildIcon,\n  iconToHTML,\n  svgToURL,\n  loadIcons,\n  loadIcon,\n  addAPIProvider,\n  _api\n} = IconifyIconComponent;\nexport { IconifyIconComponent, _api, addAPIProvider, addCollection, addIcon, appendCustomStyle, buildIcon, calculateSize, disableCache, enableCache, getIcon, iconExists, iconLoaded, iconToHTML, listIcons, loadIcon, loadIcons, svgToURL };","map":{"version":3,"names":["defaultIconDimensions","Object","freeze","left","top","width","height","defaultIconTransformations","rotate","vFlip","hFlip","defaultIconProps","defaultExtendedIconProps","body","hidden","defaultIconSizeCustomisations","defaultIconCustomisations","rotateFromString","value","defaultValue","units","replace","cleanup","value2","num","parseInt","isNaN","split","parseFloat","slice","length","separator","flipFromString","custom","flip","forEach","str","trim","defaultCustomisations","preserveAspectRatio","getCustomisations","node","customisations","attr","key","def","getAttribute","haveCustomisationsChanged","value1","matchIconName","stringToIcon","validate","allowSimpleName","provider","colonSeparated","shift","name2","pop","prefix","result","name","validateIconName","dashSeparated","join","icon","match","mergeIconTransformations","obj1","obj2","mergeIconData","parent","child","getIconsTree","data","names","icons","aliases","create","resolved","resolve","concat","keys","internalGetIconData","tree","currentProps","parse","parseIconSet","callback","not_found","Array","push","item","optionalPropertyDefaults","checkOptionalProps","defaults","prop","quicklyValidateIconSet","obj","dataStorage","newStorage","missing","Set","getStorage","providerStorage","addIconSet","storage","add","addIconToStorage","err","listIcons$1","allIcons","providers","provider2","prefixes","prefix2","map","simpleNames","allowSimpleNames","allow","getIconData","iconName","has","addIcon$1","addCollection$1","added","iconLoaded$1","getIcon$1","sortIcons","loaded","pending","sort","a","b","localeCompare","lastIcon","localStorage","list","removeCallback","storages","id","items","loaderCallbacks","filter","row","updateCallbacks","pendingCallbacksFlag","setTimeout","hasPending","oldLength","abort","idCounter","storeCallback","pendingSources","bind","setAPIModule","getAPIModule","listToIcons","defaultConfig","resources","index","timeout","random","dataAfterTimeout","sendQuery","config","payload","query","done","resourcesCount","startIndex","Math","floor","nextIndex","startTime","Date","now","status","queriesSent","lastError","timer","queue","doneCallbacks","resetTimer","clearTimeout","subscribe","overwrite","getQueryStatus","queriesPending","failQuery","clearQueue","moduleResponse","response","isError","queued","execNext","indexOf","resource","status2","initRedundancy","cfg","queries","queryCallback","doneCallback","query2","error","find","instance","setIndex","getIndex","createAPIConfig","source","path","maxURL","configStorage","fallBackAPISources","fallBackAPI","addAPIProvider$1","customConfig","getAPIConfig","listAPIProviders","emptyCallback$1","redundancyCache","getRedundancyCache","redundancy","cachedReundancy","sendAPIQuery","target","send","api","cached","moduleKey","browserCacheVersion","browserCachePrefix","browserCacheCountKey","browserCacheVersionKey","browserStorageHour","browserStorageCacheExpiration","browserStorageLimit","getStoredItem","func","getItem","setStoredItem","setItem","removeStoredItem","removeItem","setBrowserStorageItemsCount","toString","getBrowserStorageItemsCount","browserStorageConfig","local","session","browserStorageEmptyItems","browserStorageStatus","setBrowserStorageStatus","_window","window","getBrowserStorage","iterateBrowserStorage","version","total2","i","minTime","parseItem","JSON","total","initBrowserStorage","iconSet","lastModified","lastModifiedCached","min","updateLastModified","lastValue","storeInBrowserStorage","store","set","size","delete","from","stringify","assign","emptyCallback","loadedNewIcons","iconsLoaderFlag","loadNewIcons","iconsToLoad","iconsQueueFlag","icons2","params","prepare","parsed","pendingIcons","console","loadIcons$1","cleanedIcons","sortedIcons","callCallback","newIcons","sources","lastProvider","lastPrefix","providerNewIcons","pendingQueue","loadIcon$1","Promise","fulfill","reject","iconObj","testIconObject","parseIconValue","onload","loading","isBuggedSafari","navigator","vendor","getRenderMode","mode","unitsSplit","unitsTest","calculateSize$1","ratio","precision","ceil","oldParts","newParts","code","isNumber","test","splitSVGDefs","content","tag","defs","start","end","endEnd","mergeDefsAndContent","wrapSVGContent","isUnsetKeyword","iconToSVG","fullIcon","fullCustomisations","box","props","transformations","rotation","tempValue","unshift","customisationsWidth","customisationsHeight","boxWidth","boxHeight","attributes","setAttr","viewBox","iconToHTML$1","renderAttribsHTML","encodeSVGforURL","svg","svgToData","svgToURL$1","detectFetch","fetch","fetchModule","setFetch","fetch2","getFetch","calculateMaxLength","maxHostLength","host","max","url","shouldAbort","results","maxLength","type","getPath","iconsList","urlParams","URLSearchParams","uri","defaultError","then","json","catch","fetchAPIModule","toggleBrowserCache","nodeAttr","customStyle","appendCustomStyle","style","updateStyle","inline","styleNode","childNodes","hasAttribute","document","createElement","setAttribute","appendChild","textContent","exportFunctions","IconifyPreload","preload","e","IconifyProviders","_api","enableCache","disableCache","iconLoaded","iconExists","getIcon","listIcons","addIcon","addCollection","calculateSize","buildIcon","iconToHTML","svgToURL","loadIcons","loadIcon","addAPIProvider","monotoneProps","coloredProps","propsToAdd","image","repeat","propsToAddTo","fixSize","renderSPAN","useMask","renderAttribs","html","svgStyle","styles","setProperty","policy","createPolicy","trustedTypes","createHTML","s","cleanUpInnerHTML","renderSVG","innerHTML","firstChild","findIconElement","tagName","toUpperCase","renderIcon","state","iconData","renderData","renderedMode","oldNode","replaceChild","setPendingState","lastState","lastRender","rendered","defineIconifyIcon","customElements","ParentClass","HTMLElement","ConflictingClass","get","IconifyIcon","_shadowRoot","_initialised","_state","_checkQueued","_connected","_observer","_visible","constructor","root","attachShadow","_queueCheck","connectedCallback","startObserver","disconnectedCallback","stopObserver","observedAttributes","attributeChangedCallback","newInline","removeAttribute","observer","restartAnimation","lastChild","setCurrentTime","_check","newIcon","_iconChanged","attrMode","_renderIcon","newValue","_gotIconData","_forceRender","removeChild","IntersectionObserver","entries","intersecting","some","entry","isIntersecting","observe","disconnect","prototype","defineProperty","functions","define","IconifyIconComponent"],"sources":["/Users/vishnutammishetti/Desktop/Manu portfolio/reactjs-portfolio-main/node_modules/iconify-icon/dist/iconify-icon.mjs"],"sourcesContent":["/**\n* (c) Iconify\n*\n* For the full copyright and license information, please view the license.txt\n* files at https://github.com/iconify/iconify\n*\n* Licensed under MIT.\n*\n* @license MIT\n* @version 2.1.0\n*/\nconst defaultIconDimensions = Object.freeze(\n  {\n    left: 0,\n    top: 0,\n    width: 16,\n    height: 16\n  }\n);\nconst defaultIconTransformations = Object.freeze({\n  rotate: 0,\n  vFlip: false,\n  hFlip: false\n});\nconst defaultIconProps = Object.freeze({\n  ...defaultIconDimensions,\n  ...defaultIconTransformations\n});\nconst defaultExtendedIconProps = Object.freeze({\n  ...defaultIconProps,\n  body: \"\",\n  hidden: false\n});\n\nconst defaultIconSizeCustomisations = Object.freeze({\n  width: null,\n  height: null\n});\nconst defaultIconCustomisations = Object.freeze({\n  // Dimensions\n  ...defaultIconSizeCustomisations,\n  // Transformations\n  ...defaultIconTransformations\n});\n\nfunction rotateFromString(value, defaultValue = 0) {\n  const units = value.replace(/^-?[0-9.]*/, \"\");\n  function cleanup(value2) {\n    while (value2 < 0) {\n      value2 += 4;\n    }\n    return value2 % 4;\n  }\n  if (units === \"\") {\n    const num = parseInt(value);\n    return isNaN(num) ? 0 : cleanup(num);\n  } else if (units !== value) {\n    let split = 0;\n    switch (units) {\n      case \"%\":\n        split = 25;\n        break;\n      case \"deg\":\n        split = 90;\n    }\n    if (split) {\n      let num = parseFloat(value.slice(0, value.length - units.length));\n      if (isNaN(num)) {\n        return 0;\n      }\n      num = num / split;\n      return num % 1 === 0 ? cleanup(num) : 0;\n    }\n  }\n  return defaultValue;\n}\n\nconst separator = /[\\s,]+/;\nfunction flipFromString(custom, flip) {\n  flip.split(separator).forEach((str) => {\n    const value = str.trim();\n    switch (value) {\n      case \"horizontal\":\n        custom.hFlip = true;\n        break;\n      case \"vertical\":\n        custom.vFlip = true;\n        break;\n    }\n  });\n}\n\nconst defaultCustomisations = {\n    ...defaultIconCustomisations,\n    preserveAspectRatio: '',\n};\n/**\n * Get customisations\n */\nfunction getCustomisations(node) {\n    const customisations = {\n        ...defaultCustomisations,\n    };\n    const attr = (key, def) => node.getAttribute(key) || def;\n    // Dimensions\n    customisations.width = attr('width', null);\n    customisations.height = attr('height', null);\n    // Rotation\n    customisations.rotate = rotateFromString(attr('rotate', ''));\n    // Flip\n    flipFromString(customisations, attr('flip', ''));\n    // SVG attributes\n    customisations.preserveAspectRatio = attr('preserveAspectRatio', attr('preserveaspectratio', ''));\n    return customisations;\n}\n/**\n * Check if customisations have been updated\n */\nfunction haveCustomisationsChanged(value1, value2) {\n    for (const key in defaultCustomisations) {\n        if (value1[key] !== value2[key]) {\n            return true;\n        }\n    }\n    return false;\n}\n\nconst matchIconName = /^[a-z0-9]+(-[a-z0-9]+)*$/;\nconst stringToIcon = (value, validate, allowSimpleName, provider = \"\") => {\n  const colonSeparated = value.split(\":\");\n  if (value.slice(0, 1) === \"@\") {\n    if (colonSeparated.length < 2 || colonSeparated.length > 3) {\n      return null;\n    }\n    provider = colonSeparated.shift().slice(1);\n  }\n  if (colonSeparated.length > 3 || !colonSeparated.length) {\n    return null;\n  }\n  if (colonSeparated.length > 1) {\n    const name2 = colonSeparated.pop();\n    const prefix = colonSeparated.pop();\n    const result = {\n      // Allow provider without '@': \"provider:prefix:name\"\n      provider: colonSeparated.length > 0 ? colonSeparated[0] : provider,\n      prefix,\n      name: name2\n    };\n    return validate && !validateIconName(result) ? null : result;\n  }\n  const name = colonSeparated[0];\n  const dashSeparated = name.split(\"-\");\n  if (dashSeparated.length > 1) {\n    const result = {\n      provider,\n      prefix: dashSeparated.shift(),\n      name: dashSeparated.join(\"-\")\n    };\n    return validate && !validateIconName(result) ? null : result;\n  }\n  if (allowSimpleName && provider === \"\") {\n    const result = {\n      provider,\n      prefix: \"\",\n      name\n    };\n    return validate && !validateIconName(result, allowSimpleName) ? null : result;\n  }\n  return null;\n};\nconst validateIconName = (icon, allowSimpleName) => {\n  if (!icon) {\n    return false;\n  }\n  return !!((icon.provider === \"\" || icon.provider.match(matchIconName)) && (allowSimpleName && icon.prefix === \"\" || icon.prefix.match(matchIconName)) && icon.name.match(matchIconName));\n};\n\nfunction mergeIconTransformations(obj1, obj2) {\n  const result = {};\n  if (!obj1.hFlip !== !obj2.hFlip) {\n    result.hFlip = true;\n  }\n  if (!obj1.vFlip !== !obj2.vFlip) {\n    result.vFlip = true;\n  }\n  const rotate = ((obj1.rotate || 0) + (obj2.rotate || 0)) % 4;\n  if (rotate) {\n    result.rotate = rotate;\n  }\n  return result;\n}\n\nfunction mergeIconData(parent, child) {\n  const result = mergeIconTransformations(parent, child);\n  for (const key in defaultExtendedIconProps) {\n    if (key in defaultIconTransformations) {\n      if (key in parent && !(key in result)) {\n        result[key] = defaultIconTransformations[key];\n      }\n    } else if (key in child) {\n      result[key] = child[key];\n    } else if (key in parent) {\n      result[key] = parent[key];\n    }\n  }\n  return result;\n}\n\nfunction getIconsTree(data, names) {\n  const icons = data.icons;\n  const aliases = data.aliases || /* @__PURE__ */ Object.create(null);\n  const resolved = /* @__PURE__ */ Object.create(null);\n  function resolve(name) {\n    if (icons[name]) {\n      return resolved[name] = [];\n    }\n    if (!(name in resolved)) {\n      resolved[name] = null;\n      const parent = aliases[name] && aliases[name].parent;\n      const value = parent && resolve(parent);\n      if (value) {\n        resolved[name] = [parent].concat(value);\n      }\n    }\n    return resolved[name];\n  }\n  (names || Object.keys(icons).concat(Object.keys(aliases))).forEach(resolve);\n  return resolved;\n}\n\nfunction internalGetIconData(data, name, tree) {\n  const icons = data.icons;\n  const aliases = data.aliases || /* @__PURE__ */ Object.create(null);\n  let currentProps = {};\n  function parse(name2) {\n    currentProps = mergeIconData(\n      icons[name2] || aliases[name2],\n      currentProps\n    );\n  }\n  parse(name);\n  tree.forEach(parse);\n  return mergeIconData(data, currentProps);\n}\n\nfunction parseIconSet(data, callback) {\n  const names = [];\n  if (typeof data !== \"object\" || typeof data.icons !== \"object\") {\n    return names;\n  }\n  if (data.not_found instanceof Array) {\n    data.not_found.forEach((name) => {\n      callback(name, null);\n      names.push(name);\n    });\n  }\n  const tree = getIconsTree(data);\n  for (const name in tree) {\n    const item = tree[name];\n    if (item) {\n      callback(name, internalGetIconData(data, name, item));\n      names.push(name);\n    }\n  }\n  return names;\n}\n\nconst optionalPropertyDefaults = {\n  provider: \"\",\n  aliases: {},\n  not_found: {},\n  ...defaultIconDimensions\n};\nfunction checkOptionalProps(item, defaults) {\n  for (const prop in defaults) {\n    if (prop in item && typeof item[prop] !== typeof defaults[prop]) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction quicklyValidateIconSet(obj) {\n  if (typeof obj !== \"object\" || obj === null) {\n    return null;\n  }\n  const data = obj;\n  if (typeof data.prefix !== \"string\" || !obj.icons || typeof obj.icons !== \"object\") {\n    return null;\n  }\n  if (!checkOptionalProps(obj, optionalPropertyDefaults)) {\n    return null;\n  }\n  const icons = data.icons;\n  for (const name in icons) {\n    const icon = icons[name];\n    if (!name.match(matchIconName) || typeof icon.body !== \"string\" || !checkOptionalProps(\n      icon,\n      defaultExtendedIconProps\n    )) {\n      return null;\n    }\n  }\n  const aliases = data.aliases || /* @__PURE__ */ Object.create(null);\n  for (const name in aliases) {\n    const icon = aliases[name];\n    const parent = icon.parent;\n    if (!name.match(matchIconName) || typeof parent !== \"string\" || !icons[parent] && !aliases[parent] || !checkOptionalProps(\n      icon,\n      defaultExtendedIconProps\n    )) {\n      return null;\n    }\n  }\n  return data;\n}\n\nconst dataStorage = /* @__PURE__ */ Object.create(null);\nfunction newStorage(provider, prefix) {\n  return {\n    provider,\n    prefix,\n    icons: /* @__PURE__ */ Object.create(null),\n    missing: /* @__PURE__ */ new Set()\n  };\n}\nfunction getStorage(provider, prefix) {\n  const providerStorage = dataStorage[provider] || (dataStorage[provider] = /* @__PURE__ */ Object.create(null));\n  return providerStorage[prefix] || (providerStorage[prefix] = newStorage(provider, prefix));\n}\nfunction addIconSet(storage, data) {\n  if (!quicklyValidateIconSet(data)) {\n    return [];\n  }\n  return parseIconSet(data, (name, icon) => {\n    if (icon) {\n      storage.icons[name] = icon;\n    } else {\n      storage.missing.add(name);\n    }\n  });\n}\nfunction addIconToStorage(storage, name, icon) {\n  try {\n    if (typeof icon.body === \"string\") {\n      storage.icons[name] = { ...icon };\n      return true;\n    }\n  } catch (err) {\n  }\n  return false;\n}\nfunction listIcons$1(provider, prefix) {\n  let allIcons = [];\n  const providers = typeof provider === \"string\" ? [provider] : Object.keys(dataStorage);\n  providers.forEach((provider2) => {\n    const prefixes = typeof provider2 === \"string\" && typeof prefix === \"string\" ? [prefix] : Object.keys(dataStorage[provider2] || {});\n    prefixes.forEach((prefix2) => {\n      const storage = getStorage(provider2, prefix2);\n      allIcons = allIcons.concat(\n        Object.keys(storage.icons).map(\n          (name) => (provider2 !== \"\" ? \"@\" + provider2 + \":\" : \"\") + prefix2 + \":\" + name\n        )\n      );\n    });\n  });\n  return allIcons;\n}\n\nlet simpleNames = false;\nfunction allowSimpleNames(allow) {\n  if (typeof allow === \"boolean\") {\n    simpleNames = allow;\n  }\n  return simpleNames;\n}\nfunction getIconData(name) {\n  const icon = typeof name === \"string\" ? stringToIcon(name, true, simpleNames) : name;\n  if (icon) {\n    const storage = getStorage(icon.provider, icon.prefix);\n    const iconName = icon.name;\n    return storage.icons[iconName] || (storage.missing.has(iconName) ? null : void 0);\n  }\n}\nfunction addIcon$1(name, data) {\n  const icon = stringToIcon(name, true, simpleNames);\n  if (!icon) {\n    return false;\n  }\n  const storage = getStorage(icon.provider, icon.prefix);\n  return addIconToStorage(storage, icon.name, data);\n}\nfunction addCollection$1(data, provider) {\n  if (typeof data !== \"object\") {\n    return false;\n  }\n  if (typeof provider !== \"string\") {\n    provider = data.provider || \"\";\n  }\n  if (simpleNames && !provider && !data.prefix) {\n    let added = false;\n    if (quicklyValidateIconSet(data)) {\n      data.prefix = \"\";\n      parseIconSet(data, (name, icon) => {\n        if (icon && addIcon$1(name, icon)) {\n          added = true;\n        }\n      });\n    }\n    return added;\n  }\n  const prefix = data.prefix;\n  if (!validateIconName({\n    provider,\n    prefix,\n    name: \"a\"\n  })) {\n    return false;\n  }\n  const storage = getStorage(provider, prefix);\n  return !!addIconSet(storage, data);\n}\nfunction iconLoaded$1(name) {\n  return !!getIconData(name);\n}\nfunction getIcon$1(name) {\n  const result = getIconData(name);\n  return result ? {\n    ...defaultIconProps,\n    ...result\n  } : null;\n}\n\nfunction sortIcons(icons) {\n  const result = {\n    loaded: [],\n    missing: [],\n    pending: []\n  };\n  const storage = /* @__PURE__ */ Object.create(null);\n  icons.sort((a, b) => {\n    if (a.provider !== b.provider) {\n      return a.provider.localeCompare(b.provider);\n    }\n    if (a.prefix !== b.prefix) {\n      return a.prefix.localeCompare(b.prefix);\n    }\n    return a.name.localeCompare(b.name);\n  });\n  let lastIcon = {\n    provider: \"\",\n    prefix: \"\",\n    name: \"\"\n  };\n  icons.forEach((icon) => {\n    if (lastIcon.name === icon.name && lastIcon.prefix === icon.prefix && lastIcon.provider === icon.provider) {\n      return;\n    }\n    lastIcon = icon;\n    const provider = icon.provider;\n    const prefix = icon.prefix;\n    const name = icon.name;\n    const providerStorage = storage[provider] || (storage[provider] = /* @__PURE__ */ Object.create(null));\n    const localStorage = providerStorage[prefix] || (providerStorage[prefix] = getStorage(provider, prefix));\n    let list;\n    if (name in localStorage.icons) {\n      list = result.loaded;\n    } else if (prefix === \"\" || localStorage.missing.has(name)) {\n      list = result.missing;\n    } else {\n      list = result.pending;\n    }\n    const item = {\n      provider,\n      prefix,\n      name\n    };\n    list.push(item);\n  });\n  return result;\n}\n\nfunction removeCallback(storages, id) {\n  storages.forEach((storage) => {\n    const items = storage.loaderCallbacks;\n    if (items) {\n      storage.loaderCallbacks = items.filter((row) => row.id !== id);\n    }\n  });\n}\nfunction updateCallbacks(storage) {\n  if (!storage.pendingCallbacksFlag) {\n    storage.pendingCallbacksFlag = true;\n    setTimeout(() => {\n      storage.pendingCallbacksFlag = false;\n      const items = storage.loaderCallbacks ? storage.loaderCallbacks.slice(0) : [];\n      if (!items.length) {\n        return;\n      }\n      let hasPending = false;\n      const provider = storage.provider;\n      const prefix = storage.prefix;\n      items.forEach((item) => {\n        const icons = item.icons;\n        const oldLength = icons.pending.length;\n        icons.pending = icons.pending.filter((icon) => {\n          if (icon.prefix !== prefix) {\n            return true;\n          }\n          const name = icon.name;\n          if (storage.icons[name]) {\n            icons.loaded.push({\n              provider,\n              prefix,\n              name\n            });\n          } else if (storage.missing.has(name)) {\n            icons.missing.push({\n              provider,\n              prefix,\n              name\n            });\n          } else {\n            hasPending = true;\n            return true;\n          }\n          return false;\n        });\n        if (icons.pending.length !== oldLength) {\n          if (!hasPending) {\n            removeCallback([storage], item.id);\n          }\n          item.callback(\n            icons.loaded.slice(0),\n            icons.missing.slice(0),\n            icons.pending.slice(0),\n            item.abort\n          );\n        }\n      });\n    });\n  }\n}\nlet idCounter = 0;\nfunction storeCallback(callback, icons, pendingSources) {\n  const id = idCounter++;\n  const abort = removeCallback.bind(null, pendingSources, id);\n  if (!icons.pending.length) {\n    return abort;\n  }\n  const item = {\n    id,\n    icons,\n    callback,\n    abort\n  };\n  pendingSources.forEach((storage) => {\n    (storage.loaderCallbacks || (storage.loaderCallbacks = [])).push(item);\n  });\n  return abort;\n}\n\nconst storage = /* @__PURE__ */ Object.create(null);\nfunction setAPIModule(provider, item) {\n  storage[provider] = item;\n}\nfunction getAPIModule(provider) {\n  return storage[provider] || storage[\"\"];\n}\n\nfunction listToIcons(list, validate = true, simpleNames = false) {\n  const result = [];\n  list.forEach((item) => {\n    const icon = typeof item === \"string\" ? stringToIcon(item, validate, simpleNames) : item;\n    if (icon) {\n      result.push(icon);\n    }\n  });\n  return result;\n}\n\n// src/config.ts\nvar defaultConfig = {\n  resources: [],\n  index: 0,\n  timeout: 2e3,\n  rotate: 750,\n  random: false,\n  dataAfterTimeout: false\n};\n\n// src/query.ts\nfunction sendQuery(config, payload, query, done) {\n  const resourcesCount = config.resources.length;\n  const startIndex = config.random ? Math.floor(Math.random() * resourcesCount) : config.index;\n  let resources;\n  if (config.random) {\n    let list = config.resources.slice(0);\n    resources = [];\n    while (list.length > 1) {\n      const nextIndex = Math.floor(Math.random() * list.length);\n      resources.push(list[nextIndex]);\n      list = list.slice(0, nextIndex).concat(list.slice(nextIndex + 1));\n    }\n    resources = resources.concat(list);\n  } else {\n    resources = config.resources.slice(startIndex).concat(config.resources.slice(0, startIndex));\n  }\n  const startTime = Date.now();\n  let status = \"pending\";\n  let queriesSent = 0;\n  let lastError;\n  let timer = null;\n  let queue = [];\n  let doneCallbacks = [];\n  if (typeof done === \"function\") {\n    doneCallbacks.push(done);\n  }\n  function resetTimer() {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  }\n  function abort() {\n    if (status === \"pending\") {\n      status = \"aborted\";\n    }\n    resetTimer();\n    queue.forEach((item) => {\n      if (item.status === \"pending\") {\n        item.status = \"aborted\";\n      }\n    });\n    queue = [];\n  }\n  function subscribe(callback, overwrite) {\n    if (overwrite) {\n      doneCallbacks = [];\n    }\n    if (typeof callback === \"function\") {\n      doneCallbacks.push(callback);\n    }\n  }\n  function getQueryStatus() {\n    return {\n      startTime,\n      payload,\n      status,\n      queriesSent,\n      queriesPending: queue.length,\n      subscribe,\n      abort\n    };\n  }\n  function failQuery() {\n    status = \"failed\";\n    doneCallbacks.forEach((callback) => {\n      callback(void 0, lastError);\n    });\n  }\n  function clearQueue() {\n    queue.forEach((item) => {\n      if (item.status === \"pending\") {\n        item.status = \"aborted\";\n      }\n    });\n    queue = [];\n  }\n  function moduleResponse(item, response, data) {\n    const isError = response !== \"success\";\n    queue = queue.filter((queued) => queued !== item);\n    switch (status) {\n      case \"pending\":\n        break;\n      case \"failed\":\n        if (isError || !config.dataAfterTimeout) {\n          return;\n        }\n        break;\n      default:\n        return;\n    }\n    if (response === \"abort\") {\n      lastError = data;\n      failQuery();\n      return;\n    }\n    if (isError) {\n      lastError = data;\n      if (!queue.length) {\n        if (!resources.length) {\n          failQuery();\n        } else {\n          execNext();\n        }\n      }\n      return;\n    }\n    resetTimer();\n    clearQueue();\n    if (!config.random) {\n      const index = config.resources.indexOf(item.resource);\n      if (index !== -1 && index !== config.index) {\n        config.index = index;\n      }\n    }\n    status = \"completed\";\n    doneCallbacks.forEach((callback) => {\n      callback(data);\n    });\n  }\n  function execNext() {\n    if (status !== \"pending\") {\n      return;\n    }\n    resetTimer();\n    const resource = resources.shift();\n    if (resource === void 0) {\n      if (queue.length) {\n        timer = setTimeout(() => {\n          resetTimer();\n          if (status === \"pending\") {\n            clearQueue();\n            failQuery();\n          }\n        }, config.timeout);\n        return;\n      }\n      failQuery();\n      return;\n    }\n    const item = {\n      status: \"pending\",\n      resource,\n      callback: (status2, data) => {\n        moduleResponse(item, status2, data);\n      }\n    };\n    queue.push(item);\n    queriesSent++;\n    timer = setTimeout(execNext, config.rotate);\n    query(resource, payload, item.callback);\n  }\n  setTimeout(execNext);\n  return getQueryStatus;\n}\n\n// src/index.ts\nfunction initRedundancy(cfg) {\n  const config = {\n    ...defaultConfig,\n    ...cfg\n  };\n  let queries = [];\n  function cleanup() {\n    queries = queries.filter((item) => item().status === \"pending\");\n  }\n  function query(payload, queryCallback, doneCallback) {\n    const query2 = sendQuery(\n      config,\n      payload,\n      queryCallback,\n      (data, error) => {\n        cleanup();\n        if (doneCallback) {\n          doneCallback(data, error);\n        }\n      }\n    );\n    queries.push(query2);\n    return query2;\n  }\n  function find(callback) {\n    return queries.find((value) => {\n      return callback(value);\n    }) || null;\n  }\n  const instance = {\n    query,\n    find,\n    setIndex: (index) => {\n      config.index = index;\n    },\n    getIndex: () => config.index,\n    cleanup\n  };\n  return instance;\n}\n\nfunction createAPIConfig(source) {\n  let resources;\n  if (typeof source.resources === \"string\") {\n    resources = [source.resources];\n  } else {\n    resources = source.resources;\n    if (!(resources instanceof Array) || !resources.length) {\n      return null;\n    }\n  }\n  const result = {\n    // API hosts\n    resources,\n    // Root path\n    path: source.path || \"/\",\n    // URL length limit\n    maxURL: source.maxURL || 500,\n    // Timeout before next host is used.\n    rotate: source.rotate || 750,\n    // Timeout before failing query.\n    timeout: source.timeout || 5e3,\n    // Randomise default API end point.\n    random: source.random === true,\n    // Start index\n    index: source.index || 0,\n    // Receive data after time out (used if time out kicks in first, then API module sends data anyway).\n    dataAfterTimeout: source.dataAfterTimeout !== false\n  };\n  return result;\n}\nconst configStorage = /* @__PURE__ */ Object.create(null);\nconst fallBackAPISources = [\n  \"https://api.simplesvg.com\",\n  \"https://api.unisvg.com\"\n];\nconst fallBackAPI = [];\nwhile (fallBackAPISources.length > 0) {\n  if (fallBackAPISources.length === 1) {\n    fallBackAPI.push(fallBackAPISources.shift());\n  } else {\n    if (Math.random() > 0.5) {\n      fallBackAPI.push(fallBackAPISources.shift());\n    } else {\n      fallBackAPI.push(fallBackAPISources.pop());\n    }\n  }\n}\nconfigStorage[\"\"] = createAPIConfig({\n  resources: [\"https://api.iconify.design\"].concat(fallBackAPI)\n});\nfunction addAPIProvider$1(provider, customConfig) {\n  const config = createAPIConfig(customConfig);\n  if (config === null) {\n    return false;\n  }\n  configStorage[provider] = config;\n  return true;\n}\nfunction getAPIConfig(provider) {\n  return configStorage[provider];\n}\nfunction listAPIProviders() {\n  return Object.keys(configStorage);\n}\n\nfunction emptyCallback$1() {\n}\nconst redundancyCache = /* @__PURE__ */ Object.create(null);\nfunction getRedundancyCache(provider) {\n  if (!redundancyCache[provider]) {\n    const config = getAPIConfig(provider);\n    if (!config) {\n      return;\n    }\n    const redundancy = initRedundancy(config);\n    const cachedReundancy = {\n      config,\n      redundancy\n    };\n    redundancyCache[provider] = cachedReundancy;\n  }\n  return redundancyCache[provider];\n}\nfunction sendAPIQuery(target, query, callback) {\n  let redundancy;\n  let send;\n  if (typeof target === \"string\") {\n    const api = getAPIModule(target);\n    if (!api) {\n      callback(void 0, 424);\n      return emptyCallback$1;\n    }\n    send = api.send;\n    const cached = getRedundancyCache(target);\n    if (cached) {\n      redundancy = cached.redundancy;\n    }\n  } else {\n    const config = createAPIConfig(target);\n    if (config) {\n      redundancy = initRedundancy(config);\n      const moduleKey = target.resources ? target.resources[0] : \"\";\n      const api = getAPIModule(moduleKey);\n      if (api) {\n        send = api.send;\n      }\n    }\n  }\n  if (!redundancy || !send) {\n    callback(void 0, 424);\n    return emptyCallback$1;\n  }\n  return redundancy.query(query, send, callback)().abort;\n}\n\nconst browserCacheVersion = \"iconify2\";\nconst browserCachePrefix = \"iconify\";\nconst browserCacheCountKey = browserCachePrefix + \"-count\";\nconst browserCacheVersionKey = browserCachePrefix + \"-version\";\nconst browserStorageHour = 36e5;\nconst browserStorageCacheExpiration = 168;\nconst browserStorageLimit = 50;\n\nfunction getStoredItem(func, key) {\n  try {\n    return func.getItem(key);\n  } catch (err) {\n  }\n}\nfunction setStoredItem(func, key, value) {\n  try {\n    func.setItem(key, value);\n    return true;\n  } catch (err) {\n  }\n}\nfunction removeStoredItem(func, key) {\n  try {\n    func.removeItem(key);\n  } catch (err) {\n  }\n}\n\nfunction setBrowserStorageItemsCount(storage, value) {\n  return setStoredItem(storage, browserCacheCountKey, value.toString());\n}\nfunction getBrowserStorageItemsCount(storage) {\n  return parseInt(getStoredItem(storage, browserCacheCountKey)) || 0;\n}\n\nconst browserStorageConfig = {\n  local: true,\n  session: true\n};\nconst browserStorageEmptyItems = {\n  local: /* @__PURE__ */ new Set(),\n  session: /* @__PURE__ */ new Set()\n};\nlet browserStorageStatus = false;\nfunction setBrowserStorageStatus(status) {\n  browserStorageStatus = status;\n}\n\nlet _window = typeof window === \"undefined\" ? {} : window;\nfunction getBrowserStorage(key) {\n  const attr = key + \"Storage\";\n  try {\n    if (_window && _window[attr] && typeof _window[attr].length === \"number\") {\n      return _window[attr];\n    }\n  } catch (err) {\n  }\n  browserStorageConfig[key] = false;\n}\n\nfunction iterateBrowserStorage(key, callback) {\n  const func = getBrowserStorage(key);\n  if (!func) {\n    return;\n  }\n  const version = getStoredItem(func, browserCacheVersionKey);\n  if (version !== browserCacheVersion) {\n    if (version) {\n      const total2 = getBrowserStorageItemsCount(func);\n      for (let i = 0; i < total2; i++) {\n        removeStoredItem(func, browserCachePrefix + i.toString());\n      }\n    }\n    setStoredItem(func, browserCacheVersionKey, browserCacheVersion);\n    setBrowserStorageItemsCount(func, 0);\n    return;\n  }\n  const minTime = Math.floor(Date.now() / browserStorageHour) - browserStorageCacheExpiration;\n  const parseItem = (index) => {\n    const name = browserCachePrefix + index.toString();\n    const item = getStoredItem(func, name);\n    if (typeof item !== \"string\") {\n      return;\n    }\n    try {\n      const data = JSON.parse(item);\n      if (typeof data === \"object\" && typeof data.cached === \"number\" && data.cached > minTime && typeof data.provider === \"string\" && typeof data.data === \"object\" && typeof data.data.prefix === \"string\" && // Valid item: run callback\n      callback(data, index)) {\n        return true;\n      }\n    } catch (err) {\n    }\n    removeStoredItem(func, name);\n  };\n  let total = getBrowserStorageItemsCount(func);\n  for (let i = total - 1; i >= 0; i--) {\n    if (!parseItem(i)) {\n      if (i === total - 1) {\n        total--;\n        setBrowserStorageItemsCount(func, total);\n      } else {\n        browserStorageEmptyItems[key].add(i);\n      }\n    }\n  }\n}\n\nfunction initBrowserStorage() {\n  if (browserStorageStatus) {\n    return;\n  }\n  setBrowserStorageStatus(true);\n  for (const key in browserStorageConfig) {\n    iterateBrowserStorage(key, (item) => {\n      const iconSet = item.data;\n      const provider = item.provider;\n      const prefix = iconSet.prefix;\n      const storage = getStorage(\n        provider,\n        prefix\n      );\n      if (!addIconSet(storage, iconSet).length) {\n        return false;\n      }\n      const lastModified = iconSet.lastModified || -1;\n      storage.lastModifiedCached = storage.lastModifiedCached ? Math.min(storage.lastModifiedCached, lastModified) : lastModified;\n      return true;\n    });\n  }\n}\n\nfunction updateLastModified(storage, lastModified) {\n  const lastValue = storage.lastModifiedCached;\n  if (\n    // Matches or newer\n    lastValue && lastValue >= lastModified\n  ) {\n    return lastValue === lastModified;\n  }\n  storage.lastModifiedCached = lastModified;\n  if (lastValue) {\n    for (const key in browserStorageConfig) {\n      iterateBrowserStorage(key, (item) => {\n        const iconSet = item.data;\n        return item.provider !== storage.provider || iconSet.prefix !== storage.prefix || iconSet.lastModified === lastModified;\n      });\n    }\n  }\n  return true;\n}\nfunction storeInBrowserStorage(storage, data) {\n  if (!browserStorageStatus) {\n    initBrowserStorage();\n  }\n  function store(key) {\n    let func;\n    if (!browserStorageConfig[key] || !(func = getBrowserStorage(key))) {\n      return;\n    }\n    const set = browserStorageEmptyItems[key];\n    let index;\n    if (set.size) {\n      set.delete(index = Array.from(set).shift());\n    } else {\n      index = getBrowserStorageItemsCount(func);\n      if (index >= browserStorageLimit || !setBrowserStorageItemsCount(func, index + 1)) {\n        return;\n      }\n    }\n    const item = {\n      cached: Math.floor(Date.now() / browserStorageHour),\n      provider: storage.provider,\n      data\n    };\n    return setStoredItem(\n      func,\n      browserCachePrefix + index.toString(),\n      JSON.stringify(item)\n    );\n  }\n  if (data.lastModified && !updateLastModified(storage, data.lastModified)) {\n    return;\n  }\n  if (!Object.keys(data.icons).length) {\n    return;\n  }\n  if (data.not_found) {\n    data = Object.assign({}, data);\n    delete data.not_found;\n  }\n  if (!store(\"local\")) {\n    store(\"session\");\n  }\n}\n\nfunction emptyCallback() {\n}\nfunction loadedNewIcons(storage) {\n  if (!storage.iconsLoaderFlag) {\n    storage.iconsLoaderFlag = true;\n    setTimeout(() => {\n      storage.iconsLoaderFlag = false;\n      updateCallbacks(storage);\n    });\n  }\n}\nfunction loadNewIcons(storage, icons) {\n  if (!storage.iconsToLoad) {\n    storage.iconsToLoad = icons;\n  } else {\n    storage.iconsToLoad = storage.iconsToLoad.concat(icons).sort();\n  }\n  if (!storage.iconsQueueFlag) {\n    storage.iconsQueueFlag = true;\n    setTimeout(() => {\n      storage.iconsQueueFlag = false;\n      const { provider, prefix } = storage;\n      const icons2 = storage.iconsToLoad;\n      delete storage.iconsToLoad;\n      let api;\n      if (!icons2 || !(api = getAPIModule(provider))) {\n        return;\n      }\n      const params = api.prepare(provider, prefix, icons2);\n      params.forEach((item) => {\n        sendAPIQuery(provider, item, (data) => {\n          if (typeof data !== \"object\") {\n            item.icons.forEach((name) => {\n              storage.missing.add(name);\n            });\n          } else {\n            try {\n              const parsed = addIconSet(\n                storage,\n                data\n              );\n              if (!parsed.length) {\n                return;\n              }\n              const pending = storage.pendingIcons;\n              if (pending) {\n                parsed.forEach((name) => {\n                  pending.delete(name);\n                });\n              }\n              storeInBrowserStorage(storage, data);\n            } catch (err) {\n              console.error(err);\n            }\n          }\n          loadedNewIcons(storage);\n        });\n      });\n    });\n  }\n}\nconst loadIcons$1 = (icons, callback) => {\n  const cleanedIcons = listToIcons(icons, true, allowSimpleNames());\n  const sortedIcons = sortIcons(cleanedIcons);\n  if (!sortedIcons.pending.length) {\n    let callCallback = true;\n    if (callback) {\n      setTimeout(() => {\n        if (callCallback) {\n          callback(\n            sortedIcons.loaded,\n            sortedIcons.missing,\n            sortedIcons.pending,\n            emptyCallback\n          );\n        }\n      });\n    }\n    return () => {\n      callCallback = false;\n    };\n  }\n  const newIcons = /* @__PURE__ */ Object.create(null);\n  const sources = [];\n  let lastProvider, lastPrefix;\n  sortedIcons.pending.forEach((icon) => {\n    const { provider, prefix } = icon;\n    if (prefix === lastPrefix && provider === lastProvider) {\n      return;\n    }\n    lastProvider = provider;\n    lastPrefix = prefix;\n    sources.push(getStorage(provider, prefix));\n    const providerNewIcons = newIcons[provider] || (newIcons[provider] = /* @__PURE__ */ Object.create(null));\n    if (!providerNewIcons[prefix]) {\n      providerNewIcons[prefix] = [];\n    }\n  });\n  sortedIcons.pending.forEach((icon) => {\n    const { provider, prefix, name } = icon;\n    const storage = getStorage(provider, prefix);\n    const pendingQueue = storage.pendingIcons || (storage.pendingIcons = /* @__PURE__ */ new Set());\n    if (!pendingQueue.has(name)) {\n      pendingQueue.add(name);\n      newIcons[provider][prefix].push(name);\n    }\n  });\n  sources.forEach((storage) => {\n    const { provider, prefix } = storage;\n    if (newIcons[provider][prefix].length) {\n      loadNewIcons(storage, newIcons[provider][prefix]);\n    }\n  });\n  return callback ? storeCallback(callback, sortedIcons, sources) : emptyCallback;\n};\nconst loadIcon$1 = (icon) => {\n  return new Promise((fulfill, reject) => {\n    const iconObj = typeof icon === \"string\" ? stringToIcon(icon, true) : icon;\n    if (!iconObj) {\n      reject(icon);\n      return;\n    }\n    loadIcons$1([iconObj || icon], (loaded) => {\n      if (loaded.length && iconObj) {\n        const data = getIconData(iconObj);\n        if (data) {\n          fulfill({\n            ...defaultIconProps,\n            ...data\n          });\n          return;\n        }\n      }\n      reject(icon);\n    });\n  });\n};\n\n/**\n * Test icon string\n */\nfunction testIconObject(value) {\n    try {\n        const obj = typeof value === 'string' ? JSON.parse(value) : value;\n        if (typeof obj.body === 'string') {\n            return {\n                ...obj,\n            };\n        }\n    }\n    catch (err) {\n        //\n    }\n}\n\n/**\n * Parse icon value, load if needed\n */\nfunction parseIconValue(value, onload) {\n    // Check if icon name is valid\n    const name = typeof value === 'string' ? stringToIcon(value, true, true) : null;\n    if (!name) {\n        // Test for serialised object\n        const data = testIconObject(value);\n        return {\n            value,\n            data,\n        };\n    }\n    // Valid icon name: check if data is available\n    const data = getIconData(name);\n    // Icon data exists or icon has no prefix. Do not load icon from API if icon has no prefix\n    if (data !== void 0 || !name.prefix) {\n        return {\n            value,\n            name,\n            data, // could be 'null' -> icon is missing\n        };\n    }\n    // Load icon\n    const loading = loadIcons$1([name], () => onload(value, name, getIconData(name)));\n    return {\n        value,\n        name,\n        loading,\n    };\n}\n\n// Check for Safari\nlet isBuggedSafari = false;\ntry {\n    isBuggedSafari = navigator.vendor.indexOf('Apple') === 0;\n}\ncatch (err) {\n    //\n}\n/**\n * Get render mode\n */\nfunction getRenderMode(body, mode) {\n    switch (mode) {\n        // Force mode\n        case 'svg':\n        case 'bg':\n        case 'mask':\n            return mode;\n    }\n    // Check for animation, use 'style' for animated icons, unless browser is Safari\n    // (only <a>, which should be ignored or animations start with '<a')\n    if (mode !== 'style' &&\n        (isBuggedSafari || body.indexOf('<a') === -1)) {\n        // Render <svg>\n        return 'svg';\n    }\n    // Use background or mask\n    return body.indexOf('currentColor') === -1 ? 'bg' : 'mask';\n}\n\nconst unitsSplit = /(-?[0-9.]*[0-9]+[0-9.]*)/g;\nconst unitsTest = /^-?[0-9.]*[0-9]+[0-9.]*$/g;\nfunction calculateSize$1(size, ratio, precision) {\n  if (ratio === 1) {\n    return size;\n  }\n  precision = precision || 100;\n  if (typeof size === \"number\") {\n    return Math.ceil(size * ratio * precision) / precision;\n  }\n  if (typeof size !== \"string\") {\n    return size;\n  }\n  const oldParts = size.split(unitsSplit);\n  if (oldParts === null || !oldParts.length) {\n    return size;\n  }\n  const newParts = [];\n  let code = oldParts.shift();\n  let isNumber = unitsTest.test(code);\n  while (true) {\n    if (isNumber) {\n      const num = parseFloat(code);\n      if (isNaN(num)) {\n        newParts.push(code);\n      } else {\n        newParts.push(Math.ceil(num * ratio * precision) / precision);\n      }\n    } else {\n      newParts.push(code);\n    }\n    code = oldParts.shift();\n    if (code === void 0) {\n      return newParts.join(\"\");\n    }\n    isNumber = !isNumber;\n  }\n}\n\nfunction splitSVGDefs(content, tag = \"defs\") {\n  let defs = \"\";\n  const index = content.indexOf(\"<\" + tag);\n  while (index >= 0) {\n    const start = content.indexOf(\">\", index);\n    const end = content.indexOf(\"</\" + tag);\n    if (start === -1 || end === -1) {\n      break;\n    }\n    const endEnd = content.indexOf(\">\", end);\n    if (endEnd === -1) {\n      break;\n    }\n    defs += content.slice(start + 1, end).trim();\n    content = content.slice(0, index).trim() + content.slice(endEnd + 1);\n  }\n  return {\n    defs,\n    content\n  };\n}\nfunction mergeDefsAndContent(defs, content) {\n  return defs ? \"<defs>\" + defs + \"</defs>\" + content : content;\n}\nfunction wrapSVGContent(body, start, end) {\n  const split = splitSVGDefs(body);\n  return mergeDefsAndContent(split.defs, start + split.content + end);\n}\n\nconst isUnsetKeyword = (value) => value === \"unset\" || value === \"undefined\" || value === \"none\";\nfunction iconToSVG(icon, customisations) {\n  const fullIcon = {\n    ...defaultIconProps,\n    ...icon\n  };\n  const fullCustomisations = {\n    ...defaultIconCustomisations,\n    ...customisations\n  };\n  const box = {\n    left: fullIcon.left,\n    top: fullIcon.top,\n    width: fullIcon.width,\n    height: fullIcon.height\n  };\n  let body = fullIcon.body;\n  [fullIcon, fullCustomisations].forEach((props) => {\n    const transformations = [];\n    const hFlip = props.hFlip;\n    const vFlip = props.vFlip;\n    let rotation = props.rotate;\n    if (hFlip) {\n      if (vFlip) {\n        rotation += 2;\n      } else {\n        transformations.push(\n          \"translate(\" + (box.width + box.left).toString() + \" \" + (0 - box.top).toString() + \")\"\n        );\n        transformations.push(\"scale(-1 1)\");\n        box.top = box.left = 0;\n      }\n    } else if (vFlip) {\n      transformations.push(\n        \"translate(\" + (0 - box.left).toString() + \" \" + (box.height + box.top).toString() + \")\"\n      );\n      transformations.push(\"scale(1 -1)\");\n      box.top = box.left = 0;\n    }\n    let tempValue;\n    if (rotation < 0) {\n      rotation -= Math.floor(rotation / 4) * 4;\n    }\n    rotation = rotation % 4;\n    switch (rotation) {\n      case 1:\n        tempValue = box.height / 2 + box.top;\n        transformations.unshift(\n          \"rotate(90 \" + tempValue.toString() + \" \" + tempValue.toString() + \")\"\n        );\n        break;\n      case 2:\n        transformations.unshift(\n          \"rotate(180 \" + (box.width / 2 + box.left).toString() + \" \" + (box.height / 2 + box.top).toString() + \")\"\n        );\n        break;\n      case 3:\n        tempValue = box.width / 2 + box.left;\n        transformations.unshift(\n          \"rotate(-90 \" + tempValue.toString() + \" \" + tempValue.toString() + \")\"\n        );\n        break;\n    }\n    if (rotation % 2 === 1) {\n      if (box.left !== box.top) {\n        tempValue = box.left;\n        box.left = box.top;\n        box.top = tempValue;\n      }\n      if (box.width !== box.height) {\n        tempValue = box.width;\n        box.width = box.height;\n        box.height = tempValue;\n      }\n    }\n    if (transformations.length) {\n      body = wrapSVGContent(\n        body,\n        '<g transform=\"' + transformations.join(\" \") + '\">',\n        \"</g>\"\n      );\n    }\n  });\n  const customisationsWidth = fullCustomisations.width;\n  const customisationsHeight = fullCustomisations.height;\n  const boxWidth = box.width;\n  const boxHeight = box.height;\n  let width;\n  let height;\n  if (customisationsWidth === null) {\n    height = customisationsHeight === null ? \"1em\" : customisationsHeight === \"auto\" ? boxHeight : customisationsHeight;\n    width = calculateSize$1(height, boxWidth / boxHeight);\n  } else {\n    width = customisationsWidth === \"auto\" ? boxWidth : customisationsWidth;\n    height = customisationsHeight === null ? calculateSize$1(width, boxHeight / boxWidth) : customisationsHeight === \"auto\" ? boxHeight : customisationsHeight;\n  }\n  const attributes = {};\n  const setAttr = (prop, value) => {\n    if (!isUnsetKeyword(value)) {\n      attributes[prop] = value.toString();\n    }\n  };\n  setAttr(\"width\", width);\n  setAttr(\"height\", height);\n  const viewBox = [box.left, box.top, boxWidth, boxHeight];\n  attributes.viewBox = viewBox.join(\" \");\n  return {\n    attributes,\n    viewBox,\n    body\n  };\n}\n\nfunction iconToHTML$1(body, attributes) {\n  let renderAttribsHTML = body.indexOf(\"xlink:\") === -1 ? \"\" : ' xmlns:xlink=\"http://www.w3.org/1999/xlink\"';\n  for (const attr in attributes) {\n    renderAttribsHTML += \" \" + attr + '=\"' + attributes[attr] + '\"';\n  }\n  return '<svg xmlns=\"http://www.w3.org/2000/svg\"' + renderAttribsHTML + \">\" + body + \"</svg>\";\n}\n\nfunction encodeSVGforURL(svg) {\n  return svg.replace(/\"/g, \"'\").replace(/%/g, \"%25\").replace(/#/g, \"%23\").replace(/</g, \"%3C\").replace(/>/g, \"%3E\").replace(/\\s+/g, \" \");\n}\nfunction svgToData(svg) {\n  return \"data:image/svg+xml,\" + encodeSVGforURL(svg);\n}\nfunction svgToURL$1(svg) {\n  return 'url(\"' + svgToData(svg) + '\")';\n}\n\nconst detectFetch = () => {\n  let callback;\n  try {\n    callback = fetch;\n    if (typeof callback === \"function\") {\n      return callback;\n    }\n  } catch (err) {\n  }\n};\nlet fetchModule = detectFetch();\nfunction setFetch(fetch2) {\n  fetchModule = fetch2;\n}\nfunction getFetch() {\n  return fetchModule;\n}\nfunction calculateMaxLength(provider, prefix) {\n  const config = getAPIConfig(provider);\n  if (!config) {\n    return 0;\n  }\n  let result;\n  if (!config.maxURL) {\n    result = 0;\n  } else {\n    let maxHostLength = 0;\n    config.resources.forEach((item) => {\n      const host = item;\n      maxHostLength = Math.max(maxHostLength, host.length);\n    });\n    const url = prefix + \".json?icons=\";\n    result = config.maxURL - maxHostLength - config.path.length - url.length;\n  }\n  return result;\n}\nfunction shouldAbort(status) {\n  return status === 404;\n}\nconst prepare = (provider, prefix, icons) => {\n  const results = [];\n  const maxLength = calculateMaxLength(provider, prefix);\n  const type = \"icons\";\n  let item = {\n    type,\n    provider,\n    prefix,\n    icons: []\n  };\n  let length = 0;\n  icons.forEach((name, index) => {\n    length += name.length + 1;\n    if (length >= maxLength && index > 0) {\n      results.push(item);\n      item = {\n        type,\n        provider,\n        prefix,\n        icons: []\n      };\n      length = name.length;\n    }\n    item.icons.push(name);\n  });\n  results.push(item);\n  return results;\n};\nfunction getPath(provider) {\n  if (typeof provider === \"string\") {\n    const config = getAPIConfig(provider);\n    if (config) {\n      return config.path;\n    }\n  }\n  return \"/\";\n}\nconst send = (host, params, callback) => {\n  if (!fetchModule) {\n    callback(\"abort\", 424);\n    return;\n  }\n  let path = getPath(params.provider);\n  switch (params.type) {\n    case \"icons\": {\n      const prefix = params.prefix;\n      const icons = params.icons;\n      const iconsList = icons.join(\",\");\n      const urlParams = new URLSearchParams({\n        icons: iconsList\n      });\n      path += prefix + \".json?\" + urlParams.toString();\n      break;\n    }\n    case \"custom\": {\n      const uri = params.uri;\n      path += uri.slice(0, 1) === \"/\" ? uri.slice(1) : uri;\n      break;\n    }\n    default:\n      callback(\"abort\", 400);\n      return;\n  }\n  let defaultError = 503;\n  fetchModule(host + path).then((response) => {\n    const status = response.status;\n    if (status !== 200) {\n      setTimeout(() => {\n        callback(shouldAbort(status) ? \"abort\" : \"next\", status);\n      });\n      return;\n    }\n    defaultError = 501;\n    return response.json();\n  }).then((data) => {\n    if (typeof data !== \"object\" || data === null) {\n      setTimeout(() => {\n        if (data === 404) {\n          callback(\"abort\", data);\n        } else {\n          callback(\"next\", defaultError);\n        }\n      });\n      return;\n    }\n    setTimeout(() => {\n      callback(\"success\", data);\n    });\n  }).catch(() => {\n    callback(\"next\", defaultError);\n  });\n};\nconst fetchAPIModule = {\n  prepare,\n  send\n};\n\nfunction toggleBrowserCache(storage, value) {\n  switch (storage) {\n    case \"local\":\n    case \"session\":\n      browserStorageConfig[storage] = value;\n      break;\n    case \"all\":\n      for (const key in browserStorageConfig) {\n        browserStorageConfig[key] = value;\n      }\n      break;\n  }\n}\n\n/**\n * Attribute to add\n */\nconst nodeAttr = 'data-style';\n/**\n * Custom style to add to each node\n */\nlet customStyle = '';\n/**\n * Set custom style to add to all components\n *\n * Affects only components rendered after function call\n */\nfunction appendCustomStyle(style) {\n    customStyle = style;\n}\n/**\n * Add/update style node\n */\nfunction updateStyle(parent, inline) {\n    // Get node, create if needed\n    let styleNode = Array.from(parent.childNodes).find((node) => node.hasAttribute &&\n        node.hasAttribute(nodeAttr));\n    if (!styleNode) {\n        styleNode = document.createElement('style');\n        styleNode.setAttribute(nodeAttr, nodeAttr);\n        parent.appendChild(styleNode);\n    }\n    // Update content\n    styleNode.textContent =\n        ':host{display:inline-block;vertical-align:' +\n            (inline ? '-0.125em' : '0') +\n            '}span,svg{display:block}' +\n            customStyle;\n}\n\n// Core\n/**\n * Get functions and initialise stuff\n */\nfunction exportFunctions() {\n    /**\n     * Initialise stuff\n     */\n    // Set API module\n    setAPIModule('', fetchAPIModule);\n    // Allow simple icon names\n    allowSimpleNames(true);\n    let _window;\n    try {\n        _window = window;\n    }\n    catch (err) {\n        //\n    }\n    if (_window) {\n        // Set cache and load existing cache\n        initBrowserStorage();\n        // Load icons from global \"IconifyPreload\"\n        if (_window.IconifyPreload !== void 0) {\n            const preload = _window.IconifyPreload;\n            const err = 'Invalid IconifyPreload syntax.';\n            if (typeof preload === 'object' && preload !== null) {\n                (preload instanceof Array ? preload : [preload]).forEach((item) => {\n                    try {\n                        if (\n                        // Check if item is an object and not null/array\n                        typeof item !== 'object' ||\n                            item === null ||\n                            item instanceof Array ||\n                            // Check for 'icons' and 'prefix'\n                            typeof item.icons !== 'object' ||\n                            typeof item.prefix !== 'string' ||\n                            // Add icon set\n                            !addCollection$1(item)) {\n                            console.error(err);\n                        }\n                    }\n                    catch (e) {\n                        console.error(err);\n                    }\n                });\n            }\n        }\n        // Set API from global \"IconifyProviders\"\n        if (_window.IconifyProviders !== void 0) {\n            const providers = _window.IconifyProviders;\n            if (typeof providers === 'object' && providers !== null) {\n                for (const key in providers) {\n                    const err = 'IconifyProviders[' + key + '] is invalid.';\n                    try {\n                        const value = providers[key];\n                        if (typeof value !== 'object' ||\n                            !value ||\n                            value.resources === void 0) {\n                            continue;\n                        }\n                        if (!addAPIProvider$1(key, value)) {\n                            console.error(err);\n                        }\n                    }\n                    catch (e) {\n                        console.error(err);\n                    }\n                }\n            }\n        }\n    }\n    const _api = {\n        getAPIConfig,\n        setAPIModule,\n        sendAPIQuery,\n        setFetch,\n        getFetch,\n        listAPIProviders,\n    };\n    return {\n        enableCache: (storage) => toggleBrowserCache(storage, true),\n        disableCache: (storage) => toggleBrowserCache(storage, false),\n        iconLoaded: iconLoaded$1,\n        iconExists: iconLoaded$1, // deprecated, kept to avoid breaking changes\n        getIcon: getIcon$1,\n        listIcons: listIcons$1,\n        addIcon: addIcon$1,\n        addCollection: addCollection$1,\n        calculateSize: calculateSize$1,\n        buildIcon: iconToSVG,\n        iconToHTML: iconToHTML$1,\n        svgToURL: svgToURL$1,\n        loadIcons: loadIcons$1,\n        loadIcon: loadIcon$1,\n        addAPIProvider: addAPIProvider$1,\n        appendCustomStyle,\n        _api,\n    };\n}\n\n// List of properties to apply\nconst monotoneProps = {\n    'background-color': 'currentColor',\n};\nconst coloredProps = {\n    'background-color': 'transparent',\n};\n// Dynamically add common props to variables above\nconst propsToAdd = {\n    image: 'var(--svg)',\n    repeat: 'no-repeat',\n    size: '100% 100%',\n};\nconst propsToAddTo = {\n    '-webkit-mask': monotoneProps,\n    'mask': monotoneProps,\n    'background': coloredProps,\n};\nfor (const prefix in propsToAddTo) {\n    const list = propsToAddTo[prefix];\n    for (const prop in propsToAdd) {\n        list[prefix + '-' + prop] = propsToAdd[prop];\n    }\n}\n/**\n * Fix size: add 'px' to numbers\n */\nfunction fixSize(value) {\n    return value ? value + (value.match(/^[-0-9.]+$/) ? 'px' : '') : 'inherit';\n}\n/**\n * Render node as <span>\n */\nfunction renderSPAN(data, icon, useMask) {\n    const node = document.createElement('span');\n    // Body\n    let body = data.body;\n    if (body.indexOf('<a') !== -1) {\n        // Animated SVG: add something to fix timing bug\n        body += '<!-- ' + Date.now() + ' -->';\n    }\n    // Generate SVG as URL\n    const renderAttribs = data.attributes;\n    const html = iconToHTML$1(body, {\n        ...renderAttribs,\n        width: icon.width + '',\n        height: icon.height + '',\n    });\n    const url = svgToURL$1(html);\n    // Generate style\n    const svgStyle = node.style;\n    const styles = {\n        '--svg': url,\n        'width': fixSize(renderAttribs.width),\n        'height': fixSize(renderAttribs.height),\n        ...(useMask ? monotoneProps : coloredProps),\n    };\n    // Apply style\n    for (const prop in styles) {\n        svgStyle.setProperty(prop, styles[prop]);\n    }\n    return node;\n}\n\nlet policy;\nfunction createPolicy() {\n  try {\n    policy = window.trustedTypes.createPolicy(\"iconify\", {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n      createHTML: (s) => s\n    });\n  } catch (err) {\n    policy = null;\n  }\n}\nfunction cleanUpInnerHTML(html) {\n  if (policy === void 0) {\n    createPolicy();\n  }\n  return policy ? policy.createHTML(html) : html;\n}\n\n/**\n * Render node as <svg>\n */\nfunction renderSVG(data) {\n    const node = document.createElement('span');\n    // Add style if needed\n    const attr = data.attributes;\n    let style = '';\n    if (!attr.width) {\n        style = 'width: inherit;';\n    }\n    if (!attr.height) {\n        style += 'height: inherit;';\n    }\n    if (style) {\n        attr.style = style;\n    }\n    // Generate SVG\n    const html = iconToHTML$1(data.body, attr);\n    node.innerHTML = cleanUpInnerHTML(html);\n    return node.firstChild;\n}\n\n/**\n * Find icon node\n */\nfunction findIconElement(parent) {\n    return Array.from(parent.childNodes).find((node) => {\n        const tag = node.tagName &&\n            node.tagName.toUpperCase();\n        return tag === 'SPAN' || tag === 'SVG';\n    });\n}\n/**\n * Render icon\n */\nfunction renderIcon(parent, state) {\n    const iconData = state.icon.data;\n    const customisations = state.customisations;\n    // Render icon\n    const renderData = iconToSVG(iconData, customisations);\n    if (customisations.preserveAspectRatio) {\n        renderData.attributes['preserveAspectRatio'] =\n            customisations.preserveAspectRatio;\n    }\n    const mode = state.renderedMode;\n    let node;\n    switch (mode) {\n        case 'svg':\n            node = renderSVG(renderData);\n            break;\n        default:\n            node = renderSPAN(renderData, {\n                ...defaultIconProps,\n                ...iconData,\n            }, mode === 'mask');\n    }\n    // Set element\n    const oldNode = findIconElement(parent);\n    if (oldNode) {\n        // Replace old element\n        if (node.tagName === 'SPAN' && oldNode.tagName === node.tagName) {\n            // Swap style instead of whole node\n            oldNode.setAttribute('style', node.getAttribute('style'));\n        }\n        else {\n            parent.replaceChild(node, oldNode);\n        }\n    }\n    else {\n        // Add new element\n        parent.appendChild(node);\n    }\n}\n\n/**\n * Set state to PendingState\n */\nfunction setPendingState(icon, inline, lastState) {\n    const lastRender = lastState &&\n        (lastState.rendered\n            ? lastState\n            : lastState.lastRender);\n    return {\n        rendered: false,\n        inline,\n        icon,\n        lastRender,\n    };\n}\n\n/**\n * Register 'iconify-icon' component, if it does not exist\n */\nfunction defineIconifyIcon(name = 'iconify-icon') {\n    // Check for custom elements registry and HTMLElement\n    let customElements;\n    let ParentClass;\n    try {\n        customElements = window.customElements;\n        ParentClass = window.HTMLElement;\n    }\n    catch (err) {\n        return;\n    }\n    // Make sure registry and HTMLElement exist\n    if (!customElements || !ParentClass) {\n        return;\n    }\n    // Check for duplicate\n    const ConflictingClass = customElements.get(name);\n    if (ConflictingClass) {\n        return ConflictingClass;\n    }\n    // All attributes\n    const attributes = [\n        // Icon\n        'icon',\n        // Mode\n        'mode',\n        'inline',\n        'noobserver',\n        // Customisations\n        'width',\n        'height',\n        'rotate',\n        'flip',\n    ];\n    /**\n     * Component class\n     */\n    const IconifyIcon = class extends ParentClass {\n        // Root\n        _shadowRoot;\n        // Initialised\n        _initialised = false;\n        // Icon state\n        _state;\n        // Attributes check queued\n        _checkQueued = false;\n        // Connected\n        _connected = false;\n        // Observer\n        _observer = null;\n        _visible = true;\n        /**\n         * Constructor\n         */\n        constructor() {\n            super();\n            // Attach shadow DOM\n            const root = (this._shadowRoot = this.attachShadow({\n                mode: 'open',\n            }));\n            // Add style\n            const inline = this.hasAttribute('inline');\n            updateStyle(root, inline);\n            // Create empty state\n            this._state = setPendingState({\n                value: '',\n            }, inline);\n            // Queue icon render\n            this._queueCheck();\n        }\n        /**\n         * Connected to DOM\n         */\n        connectedCallback() {\n            this._connected = true;\n            this.startObserver();\n        }\n        /**\n         * Disconnected from DOM\n         */\n        disconnectedCallback() {\n            this._connected = false;\n            this.stopObserver();\n        }\n        /**\n         * Observed attributes\n         */\n        static get observedAttributes() {\n            return attributes.slice(0);\n        }\n        /**\n         * Observed properties that are different from attributes\n         *\n         * Experimental! Need to test with various frameworks that support it\n         */\n        /*\n        static get properties() {\n            return {\n                inline: {\n                    type: Boolean,\n                    reflect: true,\n                },\n                // Not listing other attributes because they are strings or combination\n                // of string and another type. Cannot have multiple types\n            };\n        }\n        */\n        /**\n         * Attribute has changed\n         */\n        attributeChangedCallback(name) {\n            switch (name) {\n                case 'inline': {\n                    // Update immediately: not affected by other attributes\n                    const newInline = this.hasAttribute('inline');\n                    const state = this._state;\n                    if (newInline !== state.inline) {\n                        // Update style if inline mode changed\n                        state.inline = newInline;\n                        updateStyle(this._shadowRoot, newInline);\n                    }\n                    break;\n                }\n                case 'noobserver': {\n                    const value = this.hasAttribute('noobserver');\n                    if (value) {\n                        this.startObserver();\n                    }\n                    else {\n                        this.stopObserver();\n                    }\n                    break;\n                }\n                default:\n                    // Queue check for other attributes\n                    this._queueCheck();\n            }\n        }\n        /**\n         * Get/set icon\n         */\n        get icon() {\n            const value = this.getAttribute('icon');\n            if (value && value.slice(0, 1) === '{') {\n                try {\n                    return JSON.parse(value);\n                }\n                catch (err) {\n                    //\n                }\n            }\n            return value;\n        }\n        set icon(value) {\n            if (typeof value === 'object') {\n                value = JSON.stringify(value);\n            }\n            this.setAttribute('icon', value);\n        }\n        /**\n         * Get/set inline\n         */\n        get inline() {\n            return this.hasAttribute('inline');\n        }\n        set inline(value) {\n            if (value) {\n                this.setAttribute('inline', 'true');\n            }\n            else {\n                this.removeAttribute('inline');\n            }\n        }\n        /**\n         * Get/set observer\n         */\n        get observer() {\n            return this.hasAttribute('observer');\n        }\n        set observer(value) {\n            if (value) {\n                this.setAttribute('observer', 'true');\n            }\n            else {\n                this.removeAttribute('observer');\n            }\n        }\n        /**\n         * Restart animation\n         */\n        restartAnimation() {\n            const state = this._state;\n            if (state.rendered) {\n                const root = this._shadowRoot;\n                if (state.renderedMode === 'svg') {\n                    // Update root node\n                    try {\n                        root.lastChild.setCurrentTime(0);\n                        return;\n                    }\n                    catch (err) {\n                        // Failed: setCurrentTime() is not supported\n                    }\n                }\n                renderIcon(root, state);\n            }\n        }\n        /**\n         * Get status\n         */\n        get status() {\n            const state = this._state;\n            return state.rendered\n                ? 'rendered'\n                : state.icon.data === null\n                    ? 'failed'\n                    : 'loading';\n        }\n        /**\n         * Queue attributes re-check\n         */\n        _queueCheck() {\n            if (!this._checkQueued) {\n                this._checkQueued = true;\n                setTimeout(() => {\n                    this._check();\n                });\n            }\n        }\n        /**\n         * Check for changes\n         */\n        _check() {\n            if (!this._checkQueued) {\n                return;\n            }\n            this._checkQueued = false;\n            const state = this._state;\n            // Get icon\n            const newIcon = this.getAttribute('icon');\n            if (newIcon !== state.icon.value) {\n                this._iconChanged(newIcon);\n                return;\n            }\n            // Ignore other attributes if icon is not rendered\n            if (!state.rendered || !this._visible) {\n                return;\n            }\n            // Check for mode and attribute changes\n            const mode = this.getAttribute('mode');\n            const customisations = getCustomisations(this);\n            if (state.attrMode !== mode ||\n                haveCustomisationsChanged(state.customisations, customisations) ||\n                !findIconElement(this._shadowRoot)) {\n                this._renderIcon(state.icon, customisations, mode);\n            }\n        }\n        /**\n         * Icon value has changed\n         */\n        _iconChanged(newValue) {\n            const icon = parseIconValue(newValue, (value, name, data) => {\n                // Asynchronous callback: re-check values to make sure stuff wasn't changed\n                const state = this._state;\n                if (state.rendered || this.getAttribute('icon') !== value) {\n                    // Icon data is already available or icon attribute was changed\n                    return;\n                }\n                // Change icon\n                const icon = {\n                    value,\n                    name,\n                    data,\n                };\n                if (icon.data) {\n                    // Render icon\n                    this._gotIconData(icon);\n                }\n                else {\n                    // Nothing to render: update icon in state\n                    state.icon = icon;\n                }\n            });\n            if (icon.data) {\n                // Icon is ready to render\n                this._gotIconData(icon);\n            }\n            else {\n                // Pending icon\n                this._state = setPendingState(icon, this._state.inline, this._state);\n            }\n        }\n        /**\n         * Force render icon on state change\n         */\n        _forceRender() {\n            if (!this._visible) {\n                // Remove icon\n                const node = findIconElement(this._shadowRoot);\n                if (node) {\n                    this._shadowRoot.removeChild(node);\n                }\n                return;\n            }\n            // Re-render icon\n            this._queueCheck();\n        }\n        /**\n         * Got new icon data, icon is ready to (re)render\n         */\n        _gotIconData(icon) {\n            this._checkQueued = false;\n            this._renderIcon(icon, getCustomisations(this), this.getAttribute('mode'));\n        }\n        /**\n         * Re-render based on icon data\n         */\n        _renderIcon(icon, customisations, attrMode) {\n            // Get mode\n            const renderedMode = getRenderMode(icon.data.body, attrMode);\n            // Inline was not changed\n            const inline = this._state.inline;\n            // Set state and render\n            renderIcon(this._shadowRoot, (this._state = {\n                rendered: true,\n                icon,\n                inline,\n                customisations,\n                attrMode,\n                renderedMode,\n            }));\n        }\n        /**\n         * Start observer\n         */\n        startObserver() {\n            if (!this._observer && !this.hasAttribute('noobserver')) {\n                try {\n                    this._observer = new IntersectionObserver((entries) => {\n                        const intersecting = entries.some((entry) => entry.isIntersecting);\n                        if (intersecting !== this._visible) {\n                            this._visible = intersecting;\n                            this._forceRender();\n                        }\n                    });\n                    this._observer.observe(this);\n                }\n                catch (err) {\n                    // Something went wrong, possibly observer is not supported\n                    if (this._observer) {\n                        try {\n                            this._observer.disconnect();\n                        }\n                        catch (err) {\n                            //\n                        }\n                        this._observer = null;\n                    }\n                }\n            }\n        }\n        /**\n         * Stop observer\n         */\n        stopObserver() {\n            if (this._observer) {\n                this._observer.disconnect();\n                this._observer = null;\n                this._visible = true;\n                if (this._connected) {\n                    // Render icon\n                    this._forceRender();\n                }\n            }\n        }\n    };\n    // Add getters and setters\n    attributes.forEach((attr) => {\n        if (!(attr in IconifyIcon.prototype)) {\n            Object.defineProperty(IconifyIcon.prototype, attr, {\n                get: function () {\n                    return this.getAttribute(attr);\n                },\n                set: function (value) {\n                    if (value !== null) {\n                        this.setAttribute(attr, value);\n                    }\n                    else {\n                        this.removeAttribute(attr);\n                    }\n                },\n            });\n        }\n    });\n    // Add exported functions: both as static and instance methods\n    const functions = exportFunctions();\n    for (const key in functions) {\n        IconifyIcon[key] = IconifyIcon.prototype[key] = functions[key];\n    }\n    // Define new component\n    customElements.define(name, IconifyIcon);\n    return IconifyIcon;\n}\n\n/**\n * Create exported data: either component instance or functions\n */\nconst IconifyIconComponent = defineIconifyIcon() || exportFunctions();\n/**\n * Export functions\n */\nconst { enableCache, disableCache, iconLoaded, iconExists, // deprecated, kept to avoid breaking changes\ngetIcon, listIcons, addIcon, addCollection, calculateSize, buildIcon, iconToHTML, svgToURL, loadIcons, loadIcon, addAPIProvider, _api, } = IconifyIconComponent;\n\nexport { IconifyIconComponent, _api, addAPIProvider, addCollection, addIcon, appendCustomStyle, buildIcon, calculateSize, disableCache, enableCache, getIcon, iconExists, iconLoaded, iconToHTML, listIcons, loadIcon, loadIcons, svgToURL };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,qBAAqB,GAAGC,MAAM,CAACC,MAAM,CACzC;EACEC,IAAI,EAAE,CAAC;EACPC,GAAG,EAAE,CAAC;EACNC,KAAK,EAAE,EAAE;EACTC,MAAM,EAAE;AACV,CACF,CAAC;AACD,MAAMC,0BAA0B,GAAGN,MAAM,CAACC,MAAM,CAAC;EAC/CM,MAAM,EAAE,CAAC;EACTC,KAAK,EAAE,KAAK;EACZC,KAAK,EAAE;AACT,CAAC,CAAC;AACF,MAAMC,gBAAgB,GAAGV,MAAM,CAACC,MAAM,CAAC;EACrC,GAAGF,qBAAqB;EACxB,GAAGO;AACL,CAAC,CAAC;AACF,MAAMK,wBAAwB,GAAGX,MAAM,CAACC,MAAM,CAAC;EAC7C,GAAGS,gBAAgB;EACnBE,IAAI,EAAE,EAAE;EACRC,MAAM,EAAE;AACV,CAAC,CAAC;AAEF,MAAMC,6BAA6B,GAAGd,MAAM,CAACC,MAAM,CAAC;EAClDG,KAAK,EAAE,IAAI;EACXC,MAAM,EAAE;AACV,CAAC,CAAC;AACF,MAAMU,yBAAyB,GAAGf,MAAM,CAACC,MAAM,CAAC;EAC9C;EACA,GAAGa,6BAA6B;EAChC;EACA,GAAGR;AACL,CAAC,CAAC;AAEF,SAASU,gBAAgBA,CAACC,KAAK,EAAEC,YAAY,GAAG,CAAC,EAAE;EACjD,MAAMC,KAAK,GAAGF,KAAK,CAACG,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC;EAC7C,SAASC,OAAOA,CAACC,MAAM,EAAE;IACvB,OAAOA,MAAM,GAAG,CAAC,EAAE;MACjBA,MAAM,IAAI,CAAC;IACb;IACA,OAAOA,MAAM,GAAG,CAAC;EACnB;EACA,IAAIH,KAAK,KAAK,EAAE,EAAE;IAChB,MAAMI,GAAG,GAAGC,QAAQ,CAACP,KAAK,CAAC;IAC3B,OAAOQ,KAAK,CAACF,GAAG,CAAC,GAAG,CAAC,GAAGF,OAAO,CAACE,GAAG,CAAC;EACtC,CAAC,MAAM,IAAIJ,KAAK,KAAKF,KAAK,EAAE;IAC1B,IAAIS,KAAK,GAAG,CAAC;IACb,QAAQP,KAAK;MACX,KAAK,GAAG;QACNO,KAAK,GAAG,EAAE;QACV;MACF,KAAK,KAAK;QACRA,KAAK,GAAG,EAAE;IACd;IACA,IAAIA,KAAK,EAAE;MACT,IAAIH,GAAG,GAAGI,UAAU,CAACV,KAAK,CAACW,KAAK,CAAC,CAAC,EAAEX,KAAK,CAACY,MAAM,GAAGV,KAAK,CAACU,MAAM,CAAC,CAAC;MACjE,IAAIJ,KAAK,CAACF,GAAG,CAAC,EAAE;QACd,OAAO,CAAC;MACV;MACAA,GAAG,GAAGA,GAAG,GAAGG,KAAK;MACjB,OAAOH,GAAG,GAAG,CAAC,KAAK,CAAC,GAAGF,OAAO,CAACE,GAAG,CAAC,GAAG,CAAC;IACzC;EACF;EACA,OAAOL,YAAY;AACrB;AAEA,MAAMY,SAAS,GAAG,QAAQ;AAC1B,SAASC,cAAcA,CAACC,MAAM,EAAEC,IAAI,EAAE;EACpCA,IAAI,CAACP,KAAK,CAACI,SAAS,CAAC,CAACI,OAAO,CAAEC,GAAG,IAAK;IACrC,MAAMlB,KAAK,GAAGkB,GAAG,CAACC,IAAI,CAAC,CAAC;IACxB,QAAQnB,KAAK;MACX,KAAK,YAAY;QACfe,MAAM,CAACvB,KAAK,GAAG,IAAI;QACnB;MACF,KAAK,UAAU;QACbuB,MAAM,CAACxB,KAAK,GAAG,IAAI;QACnB;IACJ;EACF,CAAC,CAAC;AACJ;AAEA,MAAM6B,qBAAqB,GAAG;EAC1B,GAAGtB,yBAAyB;EAC5BuB,mBAAmB,EAAE;AACzB,CAAC;AACD;AACA;AACA;AACA,SAASC,iBAAiBA,CAACC,IAAI,EAAE;EAC7B,MAAMC,cAAc,GAAG;IACnB,GAAGJ;EACP,CAAC;EACD,MAAMK,IAAI,GAAGA,CAACC,GAAG,EAAEC,GAAG,KAAKJ,IAAI,CAACK,YAAY,CAACF,GAAG,CAAC,IAAIC,GAAG;EACxD;EACAH,cAAc,CAACrC,KAAK,GAAGsC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC;EAC1CD,cAAc,CAACpC,MAAM,GAAGqC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC;EAC5C;EACAD,cAAc,CAAClC,MAAM,GAAGS,gBAAgB,CAAC0B,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;EAC5D;EACAX,cAAc,CAACU,cAAc,EAAEC,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;EAChD;EACAD,cAAc,CAACH,mBAAmB,GAAGI,IAAI,CAAC,qBAAqB,EAAEA,IAAI,CAAC,qBAAqB,EAAE,EAAE,CAAC,CAAC;EACjG,OAAOD,cAAc;AACzB;AACA;AACA;AACA;AACA,SAASK,yBAAyBA,CAACC,MAAM,EAAEzB,MAAM,EAAE;EAC/C,KAAK,MAAMqB,GAAG,IAAIN,qBAAqB,EAAE;IACrC,IAAIU,MAAM,CAACJ,GAAG,CAAC,KAAKrB,MAAM,CAACqB,GAAG,CAAC,EAAE;MAC7B,OAAO,IAAI;IACf;EACJ;EACA,OAAO,KAAK;AAChB;AAEA,MAAMK,aAAa,GAAG,0BAA0B;AAChD,MAAMC,YAAY,GAAGA,CAAChC,KAAK,EAAEiC,QAAQ,EAAEC,eAAe,EAAEC,QAAQ,GAAG,EAAE,KAAK;EACxE,MAAMC,cAAc,GAAGpC,KAAK,CAACS,KAAK,CAAC,GAAG,CAAC;EACvC,IAAIT,KAAK,CAACW,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,GAAG,EAAE;IAC7B,IAAIyB,cAAc,CAACxB,MAAM,GAAG,CAAC,IAAIwB,cAAc,CAACxB,MAAM,GAAG,CAAC,EAAE;MAC1D,OAAO,IAAI;IACb;IACAuB,QAAQ,GAAGC,cAAc,CAACC,KAAK,CAAC,CAAC,CAAC1B,KAAK,CAAC,CAAC,CAAC;EAC5C;EACA,IAAIyB,cAAc,CAACxB,MAAM,GAAG,CAAC,IAAI,CAACwB,cAAc,CAACxB,MAAM,EAAE;IACvD,OAAO,IAAI;EACb;EACA,IAAIwB,cAAc,CAACxB,MAAM,GAAG,CAAC,EAAE;IAC7B,MAAM0B,KAAK,GAAGF,cAAc,CAACG,GAAG,CAAC,CAAC;IAClC,MAAMC,MAAM,GAAGJ,cAAc,CAACG,GAAG,CAAC,CAAC;IACnC,MAAME,MAAM,GAAG;MACb;MACAN,QAAQ,EAAEC,cAAc,CAACxB,MAAM,GAAG,CAAC,GAAGwB,cAAc,CAAC,CAAC,CAAC,GAAGD,QAAQ;MAClEK,MAAM;MACNE,IAAI,EAAEJ;IACR,CAAC;IACD,OAAOL,QAAQ,IAAI,CAACU,gBAAgB,CAACF,MAAM,CAAC,GAAG,IAAI,GAAGA,MAAM;EAC9D;EACA,MAAMC,IAAI,GAAGN,cAAc,CAAC,CAAC,CAAC;EAC9B,MAAMQ,aAAa,GAAGF,IAAI,CAACjC,KAAK,CAAC,GAAG,CAAC;EACrC,IAAImC,aAAa,CAAChC,MAAM,GAAG,CAAC,EAAE;IAC5B,MAAM6B,MAAM,GAAG;MACbN,QAAQ;MACRK,MAAM,EAAEI,aAAa,CAACP,KAAK,CAAC,CAAC;MAC7BK,IAAI,EAAEE,aAAa,CAACC,IAAI,CAAC,GAAG;IAC9B,CAAC;IACD,OAAOZ,QAAQ,IAAI,CAACU,gBAAgB,CAACF,MAAM,CAAC,GAAG,IAAI,GAAGA,MAAM;EAC9D;EACA,IAAIP,eAAe,IAAIC,QAAQ,KAAK,EAAE,EAAE;IACtC,MAAMM,MAAM,GAAG;MACbN,QAAQ;MACRK,MAAM,EAAE,EAAE;MACVE;IACF,CAAC;IACD,OAAOT,QAAQ,IAAI,CAACU,gBAAgB,CAACF,MAAM,EAAEP,eAAe,CAAC,GAAG,IAAI,GAAGO,MAAM;EAC/E;EACA,OAAO,IAAI;AACb,CAAC;AACD,MAAME,gBAAgB,GAAGA,CAACG,IAAI,EAAEZ,eAAe,KAAK;EAClD,IAAI,CAACY,IAAI,EAAE;IACT,OAAO,KAAK;EACd;EACA,OAAO,CAAC,EAAE,CAACA,IAAI,CAACX,QAAQ,KAAK,EAAE,IAAIW,IAAI,CAACX,QAAQ,CAACY,KAAK,CAAChB,aAAa,CAAC,MAAMG,eAAe,IAAIY,IAAI,CAACN,MAAM,KAAK,EAAE,IAAIM,IAAI,CAACN,MAAM,CAACO,KAAK,CAAChB,aAAa,CAAC,CAAC,IAAIe,IAAI,CAACJ,IAAI,CAACK,KAAK,CAAChB,aAAa,CAAC,CAAC;AAC1L,CAAC;AAED,SAASiB,wBAAwBA,CAACC,IAAI,EAAEC,IAAI,EAAE;EAC5C,MAAMT,MAAM,GAAG,CAAC,CAAC;EACjB,IAAI,CAACQ,IAAI,CAACzD,KAAK,KAAK,CAAC0D,IAAI,CAAC1D,KAAK,EAAE;IAC/BiD,MAAM,CAACjD,KAAK,GAAG,IAAI;EACrB;EACA,IAAI,CAACyD,IAAI,CAAC1D,KAAK,KAAK,CAAC2D,IAAI,CAAC3D,KAAK,EAAE;IAC/BkD,MAAM,CAAClD,KAAK,GAAG,IAAI;EACrB;EACA,MAAMD,MAAM,GAAG,CAAC,CAAC2D,IAAI,CAAC3D,MAAM,IAAI,CAAC,KAAK4D,IAAI,CAAC5D,MAAM,IAAI,CAAC,CAAC,IAAI,CAAC;EAC5D,IAAIA,MAAM,EAAE;IACVmD,MAAM,CAACnD,MAAM,GAAGA,MAAM;EACxB;EACA,OAAOmD,MAAM;AACf;AAEA,SAASU,aAAaA,CAACC,MAAM,EAAEC,KAAK,EAAE;EACpC,MAAMZ,MAAM,GAAGO,wBAAwB,CAACI,MAAM,EAAEC,KAAK,CAAC;EACtD,KAAK,MAAM3B,GAAG,IAAIhC,wBAAwB,EAAE;IAC1C,IAAIgC,GAAG,IAAIrC,0BAA0B,EAAE;MACrC,IAAIqC,GAAG,IAAI0B,MAAM,IAAI,EAAE1B,GAAG,IAAIe,MAAM,CAAC,EAAE;QACrCA,MAAM,CAACf,GAAG,CAAC,GAAGrC,0BAA0B,CAACqC,GAAG,CAAC;MAC/C;IACF,CAAC,MAAM,IAAIA,GAAG,IAAI2B,KAAK,EAAE;MACvBZ,MAAM,CAACf,GAAG,CAAC,GAAG2B,KAAK,CAAC3B,GAAG,CAAC;IAC1B,CAAC,MAAM,IAAIA,GAAG,IAAI0B,MAAM,EAAE;MACxBX,MAAM,CAACf,GAAG,CAAC,GAAG0B,MAAM,CAAC1B,GAAG,CAAC;IAC3B;EACF;EACA,OAAOe,MAAM;AACf;AAEA,SAASa,YAAYA,CAACC,IAAI,EAAEC,KAAK,EAAE;EACjC,MAAMC,KAAK,GAAGF,IAAI,CAACE,KAAK;EACxB,MAAMC,OAAO,GAAGH,IAAI,CAACG,OAAO,IAAI,eAAgB3E,MAAM,CAAC4E,MAAM,CAAC,IAAI,CAAC;EACnE,MAAMC,QAAQ,GAAG,eAAgB7E,MAAM,CAAC4E,MAAM,CAAC,IAAI,CAAC;EACpD,SAASE,OAAOA,CAACnB,IAAI,EAAE;IACrB,IAAIe,KAAK,CAACf,IAAI,CAAC,EAAE;MACf,OAAOkB,QAAQ,CAAClB,IAAI,CAAC,GAAG,EAAE;IAC5B;IACA,IAAI,EAAEA,IAAI,IAAIkB,QAAQ,CAAC,EAAE;MACvBA,QAAQ,CAAClB,IAAI,CAAC,GAAG,IAAI;MACrB,MAAMU,MAAM,GAAGM,OAAO,CAAChB,IAAI,CAAC,IAAIgB,OAAO,CAAChB,IAAI,CAAC,CAACU,MAAM;MACpD,MAAMpD,KAAK,GAAGoD,MAAM,IAAIS,OAAO,CAACT,MAAM,CAAC;MACvC,IAAIpD,KAAK,EAAE;QACT4D,QAAQ,CAAClB,IAAI,CAAC,GAAG,CAACU,MAAM,CAAC,CAACU,MAAM,CAAC9D,KAAK,CAAC;MACzC;IACF;IACA,OAAO4D,QAAQ,CAAClB,IAAI,CAAC;EACvB;EACA,CAACc,KAAK,IAAIzE,MAAM,CAACgF,IAAI,CAACN,KAAK,CAAC,CAACK,MAAM,CAAC/E,MAAM,CAACgF,IAAI,CAACL,OAAO,CAAC,CAAC,EAAEzC,OAAO,CAAC4C,OAAO,CAAC;EAC3E,OAAOD,QAAQ;AACjB;AAEA,SAASI,mBAAmBA,CAACT,IAAI,EAAEb,IAAI,EAAEuB,IAAI,EAAE;EAC7C,MAAMR,KAAK,GAAGF,IAAI,CAACE,KAAK;EACxB,MAAMC,OAAO,GAAGH,IAAI,CAACG,OAAO,IAAI,eAAgB3E,MAAM,CAAC4E,MAAM,CAAC,IAAI,CAAC;EACnE,IAAIO,YAAY,GAAG,CAAC,CAAC;EACrB,SAASC,KAAKA,CAAC7B,KAAK,EAAE;IACpB4B,YAAY,GAAGf,aAAa,CAC1BM,KAAK,CAACnB,KAAK,CAAC,IAAIoB,OAAO,CAACpB,KAAK,CAAC,EAC9B4B,YACF,CAAC;EACH;EACAC,KAAK,CAACzB,IAAI,CAAC;EACXuB,IAAI,CAAChD,OAAO,CAACkD,KAAK,CAAC;EACnB,OAAOhB,aAAa,CAACI,IAAI,EAAEW,YAAY,CAAC;AAC1C;AAEA,SAASE,YAAYA,CAACb,IAAI,EAAEc,QAAQ,EAAE;EACpC,MAAMb,KAAK,GAAG,EAAE;EAChB,IAAI,OAAOD,IAAI,KAAK,QAAQ,IAAI,OAAOA,IAAI,CAACE,KAAK,KAAK,QAAQ,EAAE;IAC9D,OAAOD,KAAK;EACd;EACA,IAAID,IAAI,CAACe,SAAS,YAAYC,KAAK,EAAE;IACnChB,IAAI,CAACe,SAAS,CAACrD,OAAO,CAAEyB,IAAI,IAAK;MAC/B2B,QAAQ,CAAC3B,IAAI,EAAE,IAAI,CAAC;MACpBc,KAAK,CAACgB,IAAI,CAAC9B,IAAI,CAAC;IAClB,CAAC,CAAC;EACJ;EACA,MAAMuB,IAAI,GAAGX,YAAY,CAACC,IAAI,CAAC;EAC/B,KAAK,MAAMb,IAAI,IAAIuB,IAAI,EAAE;IACvB,MAAMQ,IAAI,GAAGR,IAAI,CAACvB,IAAI,CAAC;IACvB,IAAI+B,IAAI,EAAE;MACRJ,QAAQ,CAAC3B,IAAI,EAAEsB,mBAAmB,CAACT,IAAI,EAAEb,IAAI,EAAE+B,IAAI,CAAC,CAAC;MACrDjB,KAAK,CAACgB,IAAI,CAAC9B,IAAI,CAAC;IAClB;EACF;EACA,OAAOc,KAAK;AACd;AAEA,MAAMkB,wBAAwB,GAAG;EAC/BvC,QAAQ,EAAE,EAAE;EACZuB,OAAO,EAAE,CAAC,CAAC;EACXY,SAAS,EAAE,CAAC,CAAC;EACb,GAAGxF;AACL,CAAC;AACD,SAAS6F,kBAAkBA,CAACF,IAAI,EAAEG,QAAQ,EAAE;EAC1C,KAAK,MAAMC,IAAI,IAAID,QAAQ,EAAE;IAC3B,IAAIC,IAAI,IAAIJ,IAAI,IAAI,OAAOA,IAAI,CAACI,IAAI,CAAC,KAAK,OAAOD,QAAQ,CAACC,IAAI,CAAC,EAAE;MAC/D,OAAO,KAAK;IACd;EACF;EACA,OAAO,IAAI;AACb;AACA,SAASC,sBAAsBA,CAACC,GAAG,EAAE;EACnC,IAAI,OAAOA,GAAG,KAAK,QAAQ,IAAIA,GAAG,KAAK,IAAI,EAAE;IAC3C,OAAO,IAAI;EACb;EACA,MAAMxB,IAAI,GAAGwB,GAAG;EAChB,IAAI,OAAOxB,IAAI,CAACf,MAAM,KAAK,QAAQ,IAAI,CAACuC,GAAG,CAACtB,KAAK,IAAI,OAAOsB,GAAG,CAACtB,KAAK,KAAK,QAAQ,EAAE;IAClF,OAAO,IAAI;EACb;EACA,IAAI,CAACkB,kBAAkB,CAACI,GAAG,EAAEL,wBAAwB,CAAC,EAAE;IACtD,OAAO,IAAI;EACb;EACA,MAAMjB,KAAK,GAAGF,IAAI,CAACE,KAAK;EACxB,KAAK,MAAMf,IAAI,IAAIe,KAAK,EAAE;IACxB,MAAMX,IAAI,GAAGW,KAAK,CAACf,IAAI,CAAC;IACxB,IAAI,CAACA,IAAI,CAACK,KAAK,CAAChB,aAAa,CAAC,IAAI,OAAOe,IAAI,CAACnD,IAAI,KAAK,QAAQ,IAAI,CAACgF,kBAAkB,CACpF7B,IAAI,EACJpD,wBACF,CAAC,EAAE;MACD,OAAO,IAAI;IACb;EACF;EACA,MAAMgE,OAAO,GAAGH,IAAI,CAACG,OAAO,IAAI,eAAgB3E,MAAM,CAAC4E,MAAM,CAAC,IAAI,CAAC;EACnE,KAAK,MAAMjB,IAAI,IAAIgB,OAAO,EAAE;IAC1B,MAAMZ,IAAI,GAAGY,OAAO,CAAChB,IAAI,CAAC;IAC1B,MAAMU,MAAM,GAAGN,IAAI,CAACM,MAAM;IAC1B,IAAI,CAACV,IAAI,CAACK,KAAK,CAAChB,aAAa,CAAC,IAAI,OAAOqB,MAAM,KAAK,QAAQ,IAAI,CAACK,KAAK,CAACL,MAAM,CAAC,IAAI,CAACM,OAAO,CAACN,MAAM,CAAC,IAAI,CAACuB,kBAAkB,CACvH7B,IAAI,EACJpD,wBACF,CAAC,EAAE;MACD,OAAO,IAAI;IACb;EACF;EACA,OAAO6D,IAAI;AACb;AAEA,MAAMyB,WAAW,GAAG,eAAgBjG,MAAM,CAAC4E,MAAM,CAAC,IAAI,CAAC;AACvD,SAASsB,UAAUA,CAAC9C,QAAQ,EAAEK,MAAM,EAAE;EACpC,OAAO;IACLL,QAAQ;IACRK,MAAM;IACNiB,KAAK,EAAE,eAAgB1E,MAAM,CAAC4E,MAAM,CAAC,IAAI,CAAC;IAC1CuB,OAAO,EAAE,eAAgB,IAAIC,GAAG,CAAC;EACnC,CAAC;AACH;AACA,SAASC,UAAUA,CAACjD,QAAQ,EAAEK,MAAM,EAAE;EACpC,MAAM6C,eAAe,GAAGL,WAAW,CAAC7C,QAAQ,CAAC,KAAK6C,WAAW,CAAC7C,QAAQ,CAAC,GAAG,eAAgBpD,MAAM,CAAC4E,MAAM,CAAC,IAAI,CAAC,CAAC;EAC9G,OAAO0B,eAAe,CAAC7C,MAAM,CAAC,KAAK6C,eAAe,CAAC7C,MAAM,CAAC,GAAGyC,UAAU,CAAC9C,QAAQ,EAAEK,MAAM,CAAC,CAAC;AAC5F;AACA,SAAS8C,UAAUA,CAACC,OAAO,EAAEhC,IAAI,EAAE;EACjC,IAAI,CAACuB,sBAAsB,CAACvB,IAAI,CAAC,EAAE;IACjC,OAAO,EAAE;EACX;EACA,OAAOa,YAAY,CAACb,IAAI,EAAE,CAACb,IAAI,EAAEI,IAAI,KAAK;IACxC,IAAIA,IAAI,EAAE;MACRyC,OAAO,CAAC9B,KAAK,CAACf,IAAI,CAAC,GAAGI,IAAI;IAC5B,CAAC,MAAM;MACLyC,OAAO,CAACL,OAAO,CAACM,GAAG,CAAC9C,IAAI,CAAC;IAC3B;EACF,CAAC,CAAC;AACJ;AACA,SAAS+C,gBAAgBA,CAACF,OAAO,EAAE7C,IAAI,EAAEI,IAAI,EAAE;EAC7C,IAAI;IACF,IAAI,OAAOA,IAAI,CAACnD,IAAI,KAAK,QAAQ,EAAE;MACjC4F,OAAO,CAAC9B,KAAK,CAACf,IAAI,CAAC,GAAG;QAAE,GAAGI;MAAK,CAAC;MACjC,OAAO,IAAI;IACb;EACF,CAAC,CAAC,OAAO4C,GAAG,EAAE,CACd;EACA,OAAO,KAAK;AACd;AACA,SAASC,WAAWA,CAACxD,QAAQ,EAAEK,MAAM,EAAE;EACrC,IAAIoD,QAAQ,GAAG,EAAE;EACjB,MAAMC,SAAS,GAAG,OAAO1D,QAAQ,KAAK,QAAQ,GAAG,CAACA,QAAQ,CAAC,GAAGpD,MAAM,CAACgF,IAAI,CAACiB,WAAW,CAAC;EACtFa,SAAS,CAAC5E,OAAO,CAAE6E,SAAS,IAAK;IAC/B,MAAMC,QAAQ,GAAG,OAAOD,SAAS,KAAK,QAAQ,IAAI,OAAOtD,MAAM,KAAK,QAAQ,GAAG,CAACA,MAAM,CAAC,GAAGzD,MAAM,CAACgF,IAAI,CAACiB,WAAW,CAACc,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;IACnIC,QAAQ,CAAC9E,OAAO,CAAE+E,OAAO,IAAK;MAC5B,MAAMT,OAAO,GAAGH,UAAU,CAACU,SAAS,EAAEE,OAAO,CAAC;MAC9CJ,QAAQ,GAAGA,QAAQ,CAAC9B,MAAM,CACxB/E,MAAM,CAACgF,IAAI,CAACwB,OAAO,CAAC9B,KAAK,CAAC,CAACwC,GAAG,CAC3BvD,IAAI,IAAK,CAACoD,SAAS,KAAK,EAAE,GAAG,GAAG,GAAGA,SAAS,GAAG,GAAG,GAAG,EAAE,IAAIE,OAAO,GAAG,GAAG,GAAGtD,IAC9E,CACF,CAAC;IACH,CAAC,CAAC;EACJ,CAAC,CAAC;EACF,OAAOkD,QAAQ;AACjB;AAEA,IAAIM,WAAW,GAAG,KAAK;AACvB,SAASC,gBAAgBA,CAACC,KAAK,EAAE;EAC/B,IAAI,OAAOA,KAAK,KAAK,SAAS,EAAE;IAC9BF,WAAW,GAAGE,KAAK;EACrB;EACA,OAAOF,WAAW;AACpB;AACA,SAASG,WAAWA,CAAC3D,IAAI,EAAE;EACzB,MAAMI,IAAI,GAAG,OAAOJ,IAAI,KAAK,QAAQ,GAAGV,YAAY,CAACU,IAAI,EAAE,IAAI,EAAEwD,WAAW,CAAC,GAAGxD,IAAI;EACpF,IAAII,IAAI,EAAE;IACR,MAAMyC,OAAO,GAAGH,UAAU,CAACtC,IAAI,CAACX,QAAQ,EAAEW,IAAI,CAACN,MAAM,CAAC;IACtD,MAAM8D,QAAQ,GAAGxD,IAAI,CAACJ,IAAI;IAC1B,OAAO6C,OAAO,CAAC9B,KAAK,CAAC6C,QAAQ,CAAC,KAAKf,OAAO,CAACL,OAAO,CAACqB,GAAG,CAACD,QAAQ,CAAC,GAAG,IAAI,GAAG,KAAK,CAAC,CAAC;EACnF;AACF;AACA,SAASE,SAASA,CAAC9D,IAAI,EAAEa,IAAI,EAAE;EAC7B,MAAMT,IAAI,GAAGd,YAAY,CAACU,IAAI,EAAE,IAAI,EAAEwD,WAAW,CAAC;EAClD,IAAI,CAACpD,IAAI,EAAE;IACT,OAAO,KAAK;EACd;EACA,MAAMyC,OAAO,GAAGH,UAAU,CAACtC,IAAI,CAACX,QAAQ,EAAEW,IAAI,CAACN,MAAM,CAAC;EACtD,OAAOiD,gBAAgB,CAACF,OAAO,EAAEzC,IAAI,CAACJ,IAAI,EAAEa,IAAI,CAAC;AACnD;AACA,SAASkD,eAAeA,CAAClD,IAAI,EAAEpB,QAAQ,EAAE;EACvC,IAAI,OAAOoB,IAAI,KAAK,QAAQ,EAAE;IAC5B,OAAO,KAAK;EACd;EACA,IAAI,OAAOpB,QAAQ,KAAK,QAAQ,EAAE;IAChCA,QAAQ,GAAGoB,IAAI,CAACpB,QAAQ,IAAI,EAAE;EAChC;EACA,IAAI+D,WAAW,IAAI,CAAC/D,QAAQ,IAAI,CAACoB,IAAI,CAACf,MAAM,EAAE;IAC5C,IAAIkE,KAAK,GAAG,KAAK;IACjB,IAAI5B,sBAAsB,CAACvB,IAAI,CAAC,EAAE;MAChCA,IAAI,CAACf,MAAM,GAAG,EAAE;MAChB4B,YAAY,CAACb,IAAI,EAAE,CAACb,IAAI,EAAEI,IAAI,KAAK;QACjC,IAAIA,IAAI,IAAI0D,SAAS,CAAC9D,IAAI,EAAEI,IAAI,CAAC,EAAE;UACjC4D,KAAK,GAAG,IAAI;QACd;MACF,CAAC,CAAC;IACJ;IACA,OAAOA,KAAK;EACd;EACA,MAAMlE,MAAM,GAAGe,IAAI,CAACf,MAAM;EAC1B,IAAI,CAACG,gBAAgB,CAAC;IACpBR,QAAQ;IACRK,MAAM;IACNE,IAAI,EAAE;EACR,CAAC,CAAC,EAAE;IACF,OAAO,KAAK;EACd;EACA,MAAM6C,OAAO,GAAGH,UAAU,CAACjD,QAAQ,EAAEK,MAAM,CAAC;EAC5C,OAAO,CAAC,CAAC8C,UAAU,CAACC,OAAO,EAAEhC,IAAI,CAAC;AACpC;AACA,SAASoD,YAAYA,CAACjE,IAAI,EAAE;EAC1B,OAAO,CAAC,CAAC2D,WAAW,CAAC3D,IAAI,CAAC;AAC5B;AACA,SAASkE,SAASA,CAAClE,IAAI,EAAE;EACvB,MAAMD,MAAM,GAAG4D,WAAW,CAAC3D,IAAI,CAAC;EAChC,OAAOD,MAAM,GAAG;IACd,GAAGhD,gBAAgB;IACnB,GAAGgD;EACL,CAAC,GAAG,IAAI;AACV;AAEA,SAASoE,SAASA,CAACpD,KAAK,EAAE;EACxB,MAAMhB,MAAM,GAAG;IACbqE,MAAM,EAAE,EAAE;IACV5B,OAAO,EAAE,EAAE;IACX6B,OAAO,EAAE;EACX,CAAC;EACD,MAAMxB,OAAO,GAAG,eAAgBxG,MAAM,CAAC4E,MAAM,CAAC,IAAI,CAAC;EACnDF,KAAK,CAACuD,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;IACnB,IAAID,CAAC,CAAC9E,QAAQ,KAAK+E,CAAC,CAAC/E,QAAQ,EAAE;MAC7B,OAAO8E,CAAC,CAAC9E,QAAQ,CAACgF,aAAa,CAACD,CAAC,CAAC/E,QAAQ,CAAC;IAC7C;IACA,IAAI8E,CAAC,CAACzE,MAAM,KAAK0E,CAAC,CAAC1E,MAAM,EAAE;MACzB,OAAOyE,CAAC,CAACzE,MAAM,CAAC2E,aAAa,CAACD,CAAC,CAAC1E,MAAM,CAAC;IACzC;IACA,OAAOyE,CAAC,CAACvE,IAAI,CAACyE,aAAa,CAACD,CAAC,CAACxE,IAAI,CAAC;EACrC,CAAC,CAAC;EACF,IAAI0E,QAAQ,GAAG;IACbjF,QAAQ,EAAE,EAAE;IACZK,MAAM,EAAE,EAAE;IACVE,IAAI,EAAE;EACR,CAAC;EACDe,KAAK,CAACxC,OAAO,CAAE6B,IAAI,IAAK;IACtB,IAAIsE,QAAQ,CAAC1E,IAAI,KAAKI,IAAI,CAACJ,IAAI,IAAI0E,QAAQ,CAAC5E,MAAM,KAAKM,IAAI,CAACN,MAAM,IAAI4E,QAAQ,CAACjF,QAAQ,KAAKW,IAAI,CAACX,QAAQ,EAAE;MACzG;IACF;IACAiF,QAAQ,GAAGtE,IAAI;IACf,MAAMX,QAAQ,GAAGW,IAAI,CAACX,QAAQ;IAC9B,MAAMK,MAAM,GAAGM,IAAI,CAACN,MAAM;IAC1B,MAAME,IAAI,GAAGI,IAAI,CAACJ,IAAI;IACtB,MAAM2C,eAAe,GAAGE,OAAO,CAACpD,QAAQ,CAAC,KAAKoD,OAAO,CAACpD,QAAQ,CAAC,GAAG,eAAgBpD,MAAM,CAAC4E,MAAM,CAAC,IAAI,CAAC,CAAC;IACtG,MAAM0D,YAAY,GAAGhC,eAAe,CAAC7C,MAAM,CAAC,KAAK6C,eAAe,CAAC7C,MAAM,CAAC,GAAG4C,UAAU,CAACjD,QAAQ,EAAEK,MAAM,CAAC,CAAC;IACxG,IAAI8E,IAAI;IACR,IAAI5E,IAAI,IAAI2E,YAAY,CAAC5D,KAAK,EAAE;MAC9B6D,IAAI,GAAG7E,MAAM,CAACqE,MAAM;IACtB,CAAC,MAAM,IAAItE,MAAM,KAAK,EAAE,IAAI6E,YAAY,CAACnC,OAAO,CAACqB,GAAG,CAAC7D,IAAI,CAAC,EAAE;MAC1D4E,IAAI,GAAG7E,MAAM,CAACyC,OAAO;IACvB,CAAC,MAAM;MACLoC,IAAI,GAAG7E,MAAM,CAACsE,OAAO;IACvB;IACA,MAAMtC,IAAI,GAAG;MACXtC,QAAQ;MACRK,MAAM;MACNE;IACF,CAAC;IACD4E,IAAI,CAAC9C,IAAI,CAACC,IAAI,CAAC;EACjB,CAAC,CAAC;EACF,OAAOhC,MAAM;AACf;AAEA,SAAS8E,cAAcA,CAACC,QAAQ,EAAEC,EAAE,EAAE;EACpCD,QAAQ,CAACvG,OAAO,CAAEsE,OAAO,IAAK;IAC5B,MAAMmC,KAAK,GAAGnC,OAAO,CAACoC,eAAe;IACrC,IAAID,KAAK,EAAE;MACTnC,OAAO,CAACoC,eAAe,GAAGD,KAAK,CAACE,MAAM,CAAEC,GAAG,IAAKA,GAAG,CAACJ,EAAE,KAAKA,EAAE,CAAC;IAChE;EACF,CAAC,CAAC;AACJ;AACA,SAASK,eAAeA,CAACvC,OAAO,EAAE;EAChC,IAAI,CAACA,OAAO,CAACwC,oBAAoB,EAAE;IACjCxC,OAAO,CAACwC,oBAAoB,GAAG,IAAI;IACnCC,UAAU,CAAC,MAAM;MACfzC,OAAO,CAACwC,oBAAoB,GAAG,KAAK;MACpC,MAAML,KAAK,GAAGnC,OAAO,CAACoC,eAAe,GAAGpC,OAAO,CAACoC,eAAe,CAAChH,KAAK,CAAC,CAAC,CAAC,GAAG,EAAE;MAC7E,IAAI,CAAC+G,KAAK,CAAC9G,MAAM,EAAE;QACjB;MACF;MACA,IAAIqH,UAAU,GAAG,KAAK;MACtB,MAAM9F,QAAQ,GAAGoD,OAAO,CAACpD,QAAQ;MACjC,MAAMK,MAAM,GAAG+C,OAAO,CAAC/C,MAAM;MAC7BkF,KAAK,CAACzG,OAAO,CAAEwD,IAAI,IAAK;QACtB,MAAMhB,KAAK,GAAGgB,IAAI,CAAChB,KAAK;QACxB,MAAMyE,SAAS,GAAGzE,KAAK,CAACsD,OAAO,CAACnG,MAAM;QACtC6C,KAAK,CAACsD,OAAO,GAAGtD,KAAK,CAACsD,OAAO,CAACa,MAAM,CAAE9E,IAAI,IAAK;UAC7C,IAAIA,IAAI,CAACN,MAAM,KAAKA,MAAM,EAAE;YAC1B,OAAO,IAAI;UACb;UACA,MAAME,IAAI,GAAGI,IAAI,CAACJ,IAAI;UACtB,IAAI6C,OAAO,CAAC9B,KAAK,CAACf,IAAI,CAAC,EAAE;YACvBe,KAAK,CAACqD,MAAM,CAACtC,IAAI,CAAC;cAChBrC,QAAQ;cACRK,MAAM;cACNE;YACF,CAAC,CAAC;UACJ,CAAC,MAAM,IAAI6C,OAAO,CAACL,OAAO,CAACqB,GAAG,CAAC7D,IAAI,CAAC,EAAE;YACpCe,KAAK,CAACyB,OAAO,CAACV,IAAI,CAAC;cACjBrC,QAAQ;cACRK,MAAM;cACNE;YACF,CAAC,CAAC;UACJ,CAAC,MAAM;YACLuF,UAAU,GAAG,IAAI;YACjB,OAAO,IAAI;UACb;UACA,OAAO,KAAK;QACd,CAAC,CAAC;QACF,IAAIxE,KAAK,CAACsD,OAAO,CAACnG,MAAM,KAAKsH,SAAS,EAAE;UACtC,IAAI,CAACD,UAAU,EAAE;YACfV,cAAc,CAAC,CAAChC,OAAO,CAAC,EAAEd,IAAI,CAACgD,EAAE,CAAC;UACpC;UACAhD,IAAI,CAACJ,QAAQ,CACXZ,KAAK,CAACqD,MAAM,CAACnG,KAAK,CAAC,CAAC,CAAC,EACrB8C,KAAK,CAACyB,OAAO,CAACvE,KAAK,CAAC,CAAC,CAAC,EACtB8C,KAAK,CAACsD,OAAO,CAACpG,KAAK,CAAC,CAAC,CAAC,EACtB8D,IAAI,CAAC0D,KACP,CAAC;QACH;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;AACF;AACA,IAAIC,SAAS,GAAG,CAAC;AACjB,SAASC,aAAaA,CAAChE,QAAQ,EAAEZ,KAAK,EAAE6E,cAAc,EAAE;EACtD,MAAMb,EAAE,GAAGW,SAAS,EAAE;EACtB,MAAMD,KAAK,GAAGZ,cAAc,CAACgB,IAAI,CAAC,IAAI,EAAED,cAAc,EAAEb,EAAE,CAAC;EAC3D,IAAI,CAAChE,KAAK,CAACsD,OAAO,CAACnG,MAAM,EAAE;IACzB,OAAOuH,KAAK;EACd;EACA,MAAM1D,IAAI,GAAG;IACXgD,EAAE;IACFhE,KAAK;IACLY,QAAQ;IACR8D;EACF,CAAC;EACDG,cAAc,CAACrH,OAAO,CAAEsE,OAAO,IAAK;IAClC,CAACA,OAAO,CAACoC,eAAe,KAAKpC,OAAO,CAACoC,eAAe,GAAG,EAAE,CAAC,EAAEnD,IAAI,CAACC,IAAI,CAAC;EACxE,CAAC,CAAC;EACF,OAAO0D,KAAK;AACd;AAEA,MAAM5C,OAAO,GAAG,eAAgBxG,MAAM,CAAC4E,MAAM,CAAC,IAAI,CAAC;AACnD,SAAS6E,YAAYA,CAACrG,QAAQ,EAAEsC,IAAI,EAAE;EACpCc,OAAO,CAACpD,QAAQ,CAAC,GAAGsC,IAAI;AAC1B;AACA,SAASgE,YAAYA,CAACtG,QAAQ,EAAE;EAC9B,OAAOoD,OAAO,CAACpD,QAAQ,CAAC,IAAIoD,OAAO,CAAC,EAAE,CAAC;AACzC;AAEA,SAASmD,WAAWA,CAACpB,IAAI,EAAErF,QAAQ,GAAG,IAAI,EAAEiE,WAAW,GAAG,KAAK,EAAE;EAC/D,MAAMzD,MAAM,GAAG,EAAE;EACjB6E,IAAI,CAACrG,OAAO,CAAEwD,IAAI,IAAK;IACrB,MAAM3B,IAAI,GAAG,OAAO2B,IAAI,KAAK,QAAQ,GAAGzC,YAAY,CAACyC,IAAI,EAAExC,QAAQ,EAAEiE,WAAW,CAAC,GAAGzB,IAAI;IACxF,IAAI3B,IAAI,EAAE;MACRL,MAAM,CAAC+B,IAAI,CAAC1B,IAAI,CAAC;IACnB;EACF,CAAC,CAAC;EACF,OAAOL,MAAM;AACf;;AAEA;AACA,IAAIkG,aAAa,GAAG;EAClBC,SAAS,EAAE,EAAE;EACbC,KAAK,EAAE,CAAC;EACRC,OAAO,EAAE,GAAG;EACZxJ,MAAM,EAAE,GAAG;EACXyJ,MAAM,EAAE,KAAK;EACbC,gBAAgB,EAAE;AACpB,CAAC;;AAED;AACA,SAASC,SAASA,CAACC,MAAM,EAAEC,OAAO,EAAEC,KAAK,EAAEC,IAAI,EAAE;EAC/C,MAAMC,cAAc,GAAGJ,MAAM,CAACN,SAAS,CAAChI,MAAM;EAC9C,MAAM2I,UAAU,GAAGL,MAAM,CAACH,MAAM,GAAGS,IAAI,CAACC,KAAK,CAACD,IAAI,CAACT,MAAM,CAAC,CAAC,GAAGO,cAAc,CAAC,GAAGJ,MAAM,CAACL,KAAK;EAC5F,IAAID,SAAS;EACb,IAAIM,MAAM,CAACH,MAAM,EAAE;IACjB,IAAIzB,IAAI,GAAG4B,MAAM,CAACN,SAAS,CAACjI,KAAK,CAAC,CAAC,CAAC;IACpCiI,SAAS,GAAG,EAAE;IACd,OAAOtB,IAAI,CAAC1G,MAAM,GAAG,CAAC,EAAE;MACtB,MAAM8I,SAAS,GAAGF,IAAI,CAACC,KAAK,CAACD,IAAI,CAACT,MAAM,CAAC,CAAC,GAAGzB,IAAI,CAAC1G,MAAM,CAAC;MACzDgI,SAAS,CAACpE,IAAI,CAAC8C,IAAI,CAACoC,SAAS,CAAC,CAAC;MAC/BpC,IAAI,GAAGA,IAAI,CAAC3G,KAAK,CAAC,CAAC,EAAE+I,SAAS,CAAC,CAAC5F,MAAM,CAACwD,IAAI,CAAC3G,KAAK,CAAC+I,SAAS,GAAG,CAAC,CAAC,CAAC;IACnE;IACAd,SAAS,GAAGA,SAAS,CAAC9E,MAAM,CAACwD,IAAI,CAAC;EACpC,CAAC,MAAM;IACLsB,SAAS,GAAGM,MAAM,CAACN,SAAS,CAACjI,KAAK,CAAC4I,UAAU,CAAC,CAACzF,MAAM,CAACoF,MAAM,CAACN,SAAS,CAACjI,KAAK,CAAC,CAAC,EAAE4I,UAAU,CAAC,CAAC;EAC9F;EACA,MAAMI,SAAS,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC;EAC5B,IAAIC,MAAM,GAAG,SAAS;EACtB,IAAIC,WAAW,GAAG,CAAC;EACnB,IAAIC,SAAS;EACb,IAAIC,KAAK,GAAG,IAAI;EAChB,IAAIC,KAAK,GAAG,EAAE;EACd,IAAIC,aAAa,GAAG,EAAE;EACtB,IAAI,OAAOd,IAAI,KAAK,UAAU,EAAE;IAC9Bc,aAAa,CAAC3F,IAAI,CAAC6E,IAAI,CAAC;EAC1B;EACA,SAASe,UAAUA,CAAA,EAAG;IACpB,IAAIH,KAAK,EAAE;MACTI,YAAY,CAACJ,KAAK,CAAC;MACnBA,KAAK,GAAG,IAAI;IACd;EACF;EACA,SAAS9B,KAAKA,CAAA,EAAG;IACf,IAAI2B,MAAM,KAAK,SAAS,EAAE;MACxBA,MAAM,GAAG,SAAS;IACpB;IACAM,UAAU,CAAC,CAAC;IACZF,KAAK,CAACjJ,OAAO,CAAEwD,IAAI,IAAK;MACtB,IAAIA,IAAI,CAACqF,MAAM,KAAK,SAAS,EAAE;QAC7BrF,IAAI,CAACqF,MAAM,GAAG,SAAS;MACzB;IACF,CAAC,CAAC;IACFI,KAAK,GAAG,EAAE;EACZ;EACA,SAASI,SAASA,CAACjG,QAAQ,EAAEkG,SAAS,EAAE;IACtC,IAAIA,SAAS,EAAE;MACbJ,aAAa,GAAG,EAAE;IACpB;IACA,IAAI,OAAO9F,QAAQ,KAAK,UAAU,EAAE;MAClC8F,aAAa,CAAC3F,IAAI,CAACH,QAAQ,CAAC;IAC9B;EACF;EACA,SAASmG,cAAcA,CAAA,EAAG;IACxB,OAAO;MACLb,SAAS;MACTR,OAAO;MACPW,MAAM;MACNC,WAAW;MACXU,cAAc,EAAEP,KAAK,CAACtJ,MAAM;MAC5B0J,SAAS;MACTnC;IACF,CAAC;EACH;EACA,SAASuC,SAASA,CAAA,EAAG;IACnBZ,MAAM,GAAG,QAAQ;IACjBK,aAAa,CAAClJ,OAAO,CAAEoD,QAAQ,IAAK;MAClCA,QAAQ,CAAC,KAAK,CAAC,EAAE2F,SAAS,CAAC;IAC7B,CAAC,CAAC;EACJ;EACA,SAASW,UAAUA,CAAA,EAAG;IACpBT,KAAK,CAACjJ,OAAO,CAAEwD,IAAI,IAAK;MACtB,IAAIA,IAAI,CAACqF,MAAM,KAAK,SAAS,EAAE;QAC7BrF,IAAI,CAACqF,MAAM,GAAG,SAAS;MACzB;IACF,CAAC,CAAC;IACFI,KAAK,GAAG,EAAE;EACZ;EACA,SAASU,cAAcA,CAACnG,IAAI,EAAEoG,QAAQ,EAAEtH,IAAI,EAAE;IAC5C,MAAMuH,OAAO,GAAGD,QAAQ,KAAK,SAAS;IACtCX,KAAK,GAAGA,KAAK,CAACtC,MAAM,CAAEmD,MAAM,IAAKA,MAAM,KAAKtG,IAAI,CAAC;IACjD,QAAQqF,MAAM;MACZ,KAAK,SAAS;QACZ;MACF,KAAK,QAAQ;QACX,IAAIgB,OAAO,IAAI,CAAC5B,MAAM,CAACF,gBAAgB,EAAE;UACvC;QACF;QACA;MACF;QACE;IACJ;IACA,IAAI6B,QAAQ,KAAK,OAAO,EAAE;MACxBb,SAAS,GAAGzG,IAAI;MAChBmH,SAAS,CAAC,CAAC;MACX;IACF;IACA,IAAII,OAAO,EAAE;MACXd,SAAS,GAAGzG,IAAI;MAChB,IAAI,CAAC2G,KAAK,CAACtJ,MAAM,EAAE;QACjB,IAAI,CAACgI,SAAS,CAAChI,MAAM,EAAE;UACrB8J,SAAS,CAAC,CAAC;QACb,CAAC,MAAM;UACLM,QAAQ,CAAC,CAAC;QACZ;MACF;MACA;IACF;IACAZ,UAAU,CAAC,CAAC;IACZO,UAAU,CAAC,CAAC;IACZ,IAAI,CAACzB,MAAM,CAACH,MAAM,EAAE;MAClB,MAAMF,KAAK,GAAGK,MAAM,CAACN,SAAS,CAACqC,OAAO,CAACxG,IAAI,CAACyG,QAAQ,CAAC;MACrD,IAAIrC,KAAK,KAAK,CAAC,CAAC,IAAIA,KAAK,KAAKK,MAAM,CAACL,KAAK,EAAE;QAC1CK,MAAM,CAACL,KAAK,GAAGA,KAAK;MACtB;IACF;IACAiB,MAAM,GAAG,WAAW;IACpBK,aAAa,CAAClJ,OAAO,CAAEoD,QAAQ,IAAK;MAClCA,QAAQ,CAACd,IAAI,CAAC;IAChB,CAAC,CAAC;EACJ;EACA,SAASyH,QAAQA,CAAA,EAAG;IAClB,IAAIlB,MAAM,KAAK,SAAS,EAAE;MACxB;IACF;IACAM,UAAU,CAAC,CAAC;IACZ,MAAMc,QAAQ,GAAGtC,SAAS,CAACvG,KAAK,CAAC,CAAC;IAClC,IAAI6I,QAAQ,KAAK,KAAK,CAAC,EAAE;MACvB,IAAIhB,KAAK,CAACtJ,MAAM,EAAE;QAChBqJ,KAAK,GAAGjC,UAAU,CAAC,MAAM;UACvBoC,UAAU,CAAC,CAAC;UACZ,IAAIN,MAAM,KAAK,SAAS,EAAE;YACxBa,UAAU,CAAC,CAAC;YACZD,SAAS,CAAC,CAAC;UACb;QACF,CAAC,EAAExB,MAAM,CAACJ,OAAO,CAAC;QAClB;MACF;MACA4B,SAAS,CAAC,CAAC;MACX;IACF;IACA,MAAMjG,IAAI,GAAG;MACXqF,MAAM,EAAE,SAAS;MACjBoB,QAAQ;MACR7G,QAAQ,EAAEA,CAAC8G,OAAO,EAAE5H,IAAI,KAAK;QAC3BqH,cAAc,CAACnG,IAAI,EAAE0G,OAAO,EAAE5H,IAAI,CAAC;MACrC;IACF,CAAC;IACD2G,KAAK,CAAC1F,IAAI,CAACC,IAAI,CAAC;IAChBsF,WAAW,EAAE;IACbE,KAAK,GAAGjC,UAAU,CAACgD,QAAQ,EAAE9B,MAAM,CAAC5J,MAAM,CAAC;IAC3C8J,KAAK,CAAC8B,QAAQ,EAAE/B,OAAO,EAAE1E,IAAI,CAACJ,QAAQ,CAAC;EACzC;EACA2D,UAAU,CAACgD,QAAQ,CAAC;EACpB,OAAOR,cAAc;AACvB;;AAEA;AACA,SAASY,cAAcA,CAACC,GAAG,EAAE;EAC3B,MAAMnC,MAAM,GAAG;IACb,GAAGP,aAAa;IAChB,GAAG0C;EACL,CAAC;EACD,IAAIC,OAAO,GAAG,EAAE;EAChB,SAASlL,OAAOA,CAAA,EAAG;IACjBkL,OAAO,GAAGA,OAAO,CAAC1D,MAAM,CAAEnD,IAAI,IAAKA,IAAI,CAAC,CAAC,CAACqF,MAAM,KAAK,SAAS,CAAC;EACjE;EACA,SAASV,KAAKA,CAACD,OAAO,EAAEoC,aAAa,EAAEC,YAAY,EAAE;IACnD,MAAMC,MAAM,GAAGxC,SAAS,CACtBC,MAAM,EACNC,OAAO,EACPoC,aAAa,EACb,CAAChI,IAAI,EAAEmI,KAAK,KAAK;MACftL,OAAO,CAAC,CAAC;MACT,IAAIoL,YAAY,EAAE;QAChBA,YAAY,CAACjI,IAAI,EAAEmI,KAAK,CAAC;MAC3B;IACF,CACF,CAAC;IACDJ,OAAO,CAAC9G,IAAI,CAACiH,MAAM,CAAC;IACpB,OAAOA,MAAM;EACf;EACA,SAASE,IAAIA,CAACtH,QAAQ,EAAE;IACtB,OAAOiH,OAAO,CAACK,IAAI,CAAE3L,KAAK,IAAK;MAC7B,OAAOqE,QAAQ,CAACrE,KAAK,CAAC;IACxB,CAAC,CAAC,IAAI,IAAI;EACZ;EACA,MAAM4L,QAAQ,GAAG;IACfxC,KAAK;IACLuC,IAAI;IACJE,QAAQ,EAAGhD,KAAK,IAAK;MACnBK,MAAM,CAACL,KAAK,GAAGA,KAAK;IACtB,CAAC;IACDiD,QAAQ,EAAEA,CAAA,KAAM5C,MAAM,CAACL,KAAK;IAC5BzI;EACF,CAAC;EACD,OAAOwL,QAAQ;AACjB;AAEA,SAASG,eAAeA,CAACC,MAAM,EAAE;EAC/B,IAAIpD,SAAS;EACb,IAAI,OAAOoD,MAAM,CAACpD,SAAS,KAAK,QAAQ,EAAE;IACxCA,SAAS,GAAG,CAACoD,MAAM,CAACpD,SAAS,CAAC;EAChC,CAAC,MAAM;IACLA,SAAS,GAAGoD,MAAM,CAACpD,SAAS;IAC5B,IAAI,EAAEA,SAAS,YAAYrE,KAAK,CAAC,IAAI,CAACqE,SAAS,CAAChI,MAAM,EAAE;MACtD,OAAO,IAAI;IACb;EACF;EACA,MAAM6B,MAAM,GAAG;IACb;IACAmG,SAAS;IACT;IACAqD,IAAI,EAAED,MAAM,CAACC,IAAI,IAAI,GAAG;IACxB;IACAC,MAAM,EAAEF,MAAM,CAACE,MAAM,IAAI,GAAG;IAC5B;IACA5M,MAAM,EAAE0M,MAAM,CAAC1M,MAAM,IAAI,GAAG;IAC5B;IACAwJ,OAAO,EAAEkD,MAAM,CAAClD,OAAO,IAAI,GAAG;IAC9B;IACAC,MAAM,EAAEiD,MAAM,CAACjD,MAAM,KAAK,IAAI;IAC9B;IACAF,KAAK,EAAEmD,MAAM,CAACnD,KAAK,IAAI,CAAC;IACxB;IACAG,gBAAgB,EAAEgD,MAAM,CAAChD,gBAAgB,KAAK;EAChD,CAAC;EACD,OAAOvG,MAAM;AACf;AACA,MAAM0J,aAAa,GAAG,eAAgBpN,MAAM,CAAC4E,MAAM,CAAC,IAAI,CAAC;AACzD,MAAMyI,kBAAkB,GAAG,CACzB,2BAA2B,EAC3B,wBAAwB,CACzB;AACD,MAAMC,WAAW,GAAG,EAAE;AACtB,OAAOD,kBAAkB,CAACxL,MAAM,GAAG,CAAC,EAAE;EACpC,IAAIwL,kBAAkB,CAACxL,MAAM,KAAK,CAAC,EAAE;IACnCyL,WAAW,CAAC7H,IAAI,CAAC4H,kBAAkB,CAAC/J,KAAK,CAAC,CAAC,CAAC;EAC9C,CAAC,MAAM;IACL,IAAImH,IAAI,CAACT,MAAM,CAAC,CAAC,GAAG,GAAG,EAAE;MACvBsD,WAAW,CAAC7H,IAAI,CAAC4H,kBAAkB,CAAC/J,KAAK,CAAC,CAAC,CAAC;IAC9C,CAAC,MAAM;MACLgK,WAAW,CAAC7H,IAAI,CAAC4H,kBAAkB,CAAC7J,GAAG,CAAC,CAAC,CAAC;IAC5C;EACF;AACF;AACA4J,aAAa,CAAC,EAAE,CAAC,GAAGJ,eAAe,CAAC;EAClCnD,SAAS,EAAE,CAAC,4BAA4B,CAAC,CAAC9E,MAAM,CAACuI,WAAW;AAC9D,CAAC,CAAC;AACF,SAASC,gBAAgBA,CAACnK,QAAQ,EAAEoK,YAAY,EAAE;EAChD,MAAMrD,MAAM,GAAG6C,eAAe,CAACQ,YAAY,CAAC;EAC5C,IAAIrD,MAAM,KAAK,IAAI,EAAE;IACnB,OAAO,KAAK;EACd;EACAiD,aAAa,CAAChK,QAAQ,CAAC,GAAG+G,MAAM;EAChC,OAAO,IAAI;AACb;AACA,SAASsD,YAAYA,CAACrK,QAAQ,EAAE;EAC9B,OAAOgK,aAAa,CAAChK,QAAQ,CAAC;AAChC;AACA,SAASsK,gBAAgBA,CAAA,EAAG;EAC1B,OAAO1N,MAAM,CAACgF,IAAI,CAACoI,aAAa,CAAC;AACnC;AAEA,SAASO,eAAeA,CAAA,EAAG,CAC3B;AACA,MAAMC,eAAe,GAAG,eAAgB5N,MAAM,CAAC4E,MAAM,CAAC,IAAI,CAAC;AAC3D,SAASiJ,kBAAkBA,CAACzK,QAAQ,EAAE;EACpC,IAAI,CAACwK,eAAe,CAACxK,QAAQ,CAAC,EAAE;IAC9B,MAAM+G,MAAM,GAAGsD,YAAY,CAACrK,QAAQ,CAAC;IACrC,IAAI,CAAC+G,MAAM,EAAE;MACX;IACF;IACA,MAAM2D,UAAU,GAAGzB,cAAc,CAAClC,MAAM,CAAC;IACzC,MAAM4D,eAAe,GAAG;MACtB5D,MAAM;MACN2D;IACF,CAAC;IACDF,eAAe,CAACxK,QAAQ,CAAC,GAAG2K,eAAe;EAC7C;EACA,OAAOH,eAAe,CAACxK,QAAQ,CAAC;AAClC;AACA,SAAS4K,YAAYA,CAACC,MAAM,EAAE5D,KAAK,EAAE/E,QAAQ,EAAE;EAC7C,IAAIwI,UAAU;EACd,IAAII,IAAI;EACR,IAAI,OAAOD,MAAM,KAAK,QAAQ,EAAE;IAC9B,MAAME,GAAG,GAAGzE,YAAY,CAACuE,MAAM,CAAC;IAChC,IAAI,CAACE,GAAG,EAAE;MACR7I,QAAQ,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC;MACrB,OAAOqI,eAAe;IACxB;IACAO,IAAI,GAAGC,GAAG,CAACD,IAAI;IACf,MAAME,MAAM,GAAGP,kBAAkB,CAACI,MAAM,CAAC;IACzC,IAAIG,MAAM,EAAE;MACVN,UAAU,GAAGM,MAAM,CAACN,UAAU;IAChC;EACF,CAAC,MAAM;IACL,MAAM3D,MAAM,GAAG6C,eAAe,CAACiB,MAAM,CAAC;IACtC,IAAI9D,MAAM,EAAE;MACV2D,UAAU,GAAGzB,cAAc,CAAClC,MAAM,CAAC;MACnC,MAAMkE,SAAS,GAAGJ,MAAM,CAACpE,SAAS,GAAGoE,MAAM,CAACpE,SAAS,CAAC,CAAC,CAAC,GAAG,EAAE;MAC7D,MAAMsE,GAAG,GAAGzE,YAAY,CAAC2E,SAAS,CAAC;MACnC,IAAIF,GAAG,EAAE;QACPD,IAAI,GAAGC,GAAG,CAACD,IAAI;MACjB;IACF;EACF;EACA,IAAI,CAACJ,UAAU,IAAI,CAACI,IAAI,EAAE;IACxB5I,QAAQ,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC;IACrB,OAAOqI,eAAe;EACxB;EACA,OAAOG,UAAU,CAACzD,KAAK,CAACA,KAAK,EAAE6D,IAAI,EAAE5I,QAAQ,CAAC,CAAC,CAAC,CAAC8D,KAAK;AACxD;AAEA,MAAMkF,mBAAmB,GAAG,UAAU;AACtC,MAAMC,kBAAkB,GAAG,SAAS;AACpC,MAAMC,oBAAoB,GAAGD,kBAAkB,GAAG,QAAQ;AAC1D,MAAME,sBAAsB,GAAGF,kBAAkB,GAAG,UAAU;AAC9D,MAAMG,kBAAkB,GAAG,IAAI;AAC/B,MAAMC,6BAA6B,GAAG,GAAG;AACzC,MAAMC,mBAAmB,GAAG,EAAE;AAE9B,SAASC,aAAaA,CAACC,IAAI,EAAEnM,GAAG,EAAE;EAChC,IAAI;IACF,OAAOmM,IAAI,CAACC,OAAO,CAACpM,GAAG,CAAC;EAC1B,CAAC,CAAC,OAAOgE,GAAG,EAAE,CACd;AACF;AACA,SAASqI,aAAaA,CAACF,IAAI,EAAEnM,GAAG,EAAE1B,KAAK,EAAE;EACvC,IAAI;IACF6N,IAAI,CAACG,OAAO,CAACtM,GAAG,EAAE1B,KAAK,CAAC;IACxB,OAAO,IAAI;EACb,CAAC,CAAC,OAAO0F,GAAG,EAAE,CACd;AACF;AACA,SAASuI,gBAAgBA,CAACJ,IAAI,EAAEnM,GAAG,EAAE;EACnC,IAAI;IACFmM,IAAI,CAACK,UAAU,CAACxM,GAAG,CAAC;EACtB,CAAC,CAAC,OAAOgE,GAAG,EAAE,CACd;AACF;AAEA,SAASyI,2BAA2BA,CAAC5I,OAAO,EAAEvF,KAAK,EAAE;EACnD,OAAO+N,aAAa,CAACxI,OAAO,EAAEgI,oBAAoB,EAAEvN,KAAK,CAACoO,QAAQ,CAAC,CAAC,CAAC;AACvE;AACA,SAASC,2BAA2BA,CAAC9I,OAAO,EAAE;EAC5C,OAAOhF,QAAQ,CAACqN,aAAa,CAACrI,OAAO,EAAEgI,oBAAoB,CAAC,CAAC,IAAI,CAAC;AACpE;AAEA,MAAMe,oBAAoB,GAAG;EAC3BC,KAAK,EAAE,IAAI;EACXC,OAAO,EAAE;AACX,CAAC;AACD,MAAMC,wBAAwB,GAAG;EAC/BF,KAAK,EAAE,eAAgB,IAAIpJ,GAAG,CAAC,CAAC;EAChCqJ,OAAO,EAAE,eAAgB,IAAIrJ,GAAG,CAAC;AACnC,CAAC;AACD,IAAIuJ,oBAAoB,GAAG,KAAK;AAChC,SAASC,uBAAuBA,CAAC7E,MAAM,EAAE;EACvC4E,oBAAoB,GAAG5E,MAAM;AAC/B;AAEA,IAAI8E,OAAO,GAAG,OAAOC,MAAM,KAAK,WAAW,GAAG,CAAC,CAAC,GAAGA,MAAM;AACzD,SAASC,iBAAiBA,CAACpN,GAAG,EAAE;EAC9B,MAAMD,IAAI,GAAGC,GAAG,GAAG,SAAS;EAC5B,IAAI;IACF,IAAIkN,OAAO,IAAIA,OAAO,CAACnN,IAAI,CAAC,IAAI,OAAOmN,OAAO,CAACnN,IAAI,CAAC,CAACb,MAAM,KAAK,QAAQ,EAAE;MACxE,OAAOgO,OAAO,CAACnN,IAAI,CAAC;IACtB;EACF,CAAC,CAAC,OAAOiE,GAAG,EAAE,CACd;EACA4I,oBAAoB,CAAC5M,GAAG,CAAC,GAAG,KAAK;AACnC;AAEA,SAASqN,qBAAqBA,CAACrN,GAAG,EAAE2C,QAAQ,EAAE;EAC5C,MAAMwJ,IAAI,GAAGiB,iBAAiB,CAACpN,GAAG,CAAC;EACnC,IAAI,CAACmM,IAAI,EAAE;IACT;EACF;EACA,MAAMmB,OAAO,GAAGpB,aAAa,CAACC,IAAI,EAAEL,sBAAsB,CAAC;EAC3D,IAAIwB,OAAO,KAAK3B,mBAAmB,EAAE;IACnC,IAAI2B,OAAO,EAAE;MACX,MAAMC,MAAM,GAAGZ,2BAA2B,CAACR,IAAI,CAAC;MAChD,KAAK,IAAIqB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,MAAM,EAAEC,CAAC,EAAE,EAAE;QAC/BjB,gBAAgB,CAACJ,IAAI,EAAEP,kBAAkB,GAAG4B,CAAC,CAACd,QAAQ,CAAC,CAAC,CAAC;MAC3D;IACF;IACAL,aAAa,CAACF,IAAI,EAAEL,sBAAsB,EAAEH,mBAAmB,CAAC;IAChEc,2BAA2B,CAACN,IAAI,EAAE,CAAC,CAAC;IACpC;EACF;EACA,MAAMsB,OAAO,GAAG3F,IAAI,CAACC,KAAK,CAACG,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG4D,kBAAkB,CAAC,GAAGC,6BAA6B;EAC3F,MAAM0B,SAAS,GAAIvG,KAAK,IAAK;IAC3B,MAAMnG,IAAI,GAAG4K,kBAAkB,GAAGzE,KAAK,CAACuF,QAAQ,CAAC,CAAC;IAClD,MAAM3J,IAAI,GAAGmJ,aAAa,CAACC,IAAI,EAAEnL,IAAI,CAAC;IACtC,IAAI,OAAO+B,IAAI,KAAK,QAAQ,EAAE;MAC5B;IACF;IACA,IAAI;MACF,MAAMlB,IAAI,GAAG8L,IAAI,CAAClL,KAAK,CAACM,IAAI,CAAC;MAC7B,IAAI,OAAOlB,IAAI,KAAK,QAAQ,IAAI,OAAOA,IAAI,CAAC4J,MAAM,KAAK,QAAQ,IAAI5J,IAAI,CAAC4J,MAAM,GAAGgC,OAAO,IAAI,OAAO5L,IAAI,CAACpB,QAAQ,KAAK,QAAQ,IAAI,OAAOoB,IAAI,CAACA,IAAI,KAAK,QAAQ,IAAI,OAAOA,IAAI,CAACA,IAAI,CAACf,MAAM,KAAK,QAAQ;MAAI;MAC1M6B,QAAQ,CAACd,IAAI,EAAEsF,KAAK,CAAC,EAAE;QACrB,OAAO,IAAI;MACb;IACF,CAAC,CAAC,OAAOnD,GAAG,EAAE,CACd;IACAuI,gBAAgB,CAACJ,IAAI,EAAEnL,IAAI,CAAC;EAC9B,CAAC;EACD,IAAI4M,KAAK,GAAGjB,2BAA2B,CAACR,IAAI,CAAC;EAC7C,KAAK,IAAIqB,CAAC,GAAGI,KAAK,GAAG,CAAC,EAAEJ,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;IACnC,IAAI,CAACE,SAAS,CAACF,CAAC,CAAC,EAAE;MACjB,IAAIA,CAAC,KAAKI,KAAK,GAAG,CAAC,EAAE;QACnBA,KAAK,EAAE;QACPnB,2BAA2B,CAACN,IAAI,EAAEyB,KAAK,CAAC;MAC1C,CAAC,MAAM;QACLb,wBAAwB,CAAC/M,GAAG,CAAC,CAAC8D,GAAG,CAAC0J,CAAC,CAAC;MACtC;IACF;EACF;AACF;AAEA,SAASK,kBAAkBA,CAAA,EAAG;EAC5B,IAAIb,oBAAoB,EAAE;IACxB;EACF;EACAC,uBAAuB,CAAC,IAAI,CAAC;EAC7B,KAAK,MAAMjN,GAAG,IAAI4M,oBAAoB,EAAE;IACtCS,qBAAqB,CAACrN,GAAG,EAAG+C,IAAI,IAAK;MACnC,MAAM+K,OAAO,GAAG/K,IAAI,CAAClB,IAAI;MACzB,MAAMpB,QAAQ,GAAGsC,IAAI,CAACtC,QAAQ;MAC9B,MAAMK,MAAM,GAAGgN,OAAO,CAAChN,MAAM;MAC7B,MAAM+C,OAAO,GAAGH,UAAU,CACxBjD,QAAQ,EACRK,MACF,CAAC;MACD,IAAI,CAAC8C,UAAU,CAACC,OAAO,EAAEiK,OAAO,CAAC,CAAC5O,MAAM,EAAE;QACxC,OAAO,KAAK;MACd;MACA,MAAM6O,YAAY,GAAGD,OAAO,CAACC,YAAY,IAAI,CAAC,CAAC;MAC/ClK,OAAO,CAACmK,kBAAkB,GAAGnK,OAAO,CAACmK,kBAAkB,GAAGlG,IAAI,CAACmG,GAAG,CAACpK,OAAO,CAACmK,kBAAkB,EAAED,YAAY,CAAC,GAAGA,YAAY;MAC3H,OAAO,IAAI;IACb,CAAC,CAAC;EACJ;AACF;AAEA,SAASG,kBAAkBA,CAACrK,OAAO,EAAEkK,YAAY,EAAE;EACjD,MAAMI,SAAS,GAAGtK,OAAO,CAACmK,kBAAkB;EAC5C;EACE;EACAG,SAAS,IAAIA,SAAS,IAAIJ,YAAY,EACtC;IACA,OAAOI,SAAS,KAAKJ,YAAY;EACnC;EACAlK,OAAO,CAACmK,kBAAkB,GAAGD,YAAY;EACzC,IAAII,SAAS,EAAE;IACb,KAAK,MAAMnO,GAAG,IAAI4M,oBAAoB,EAAE;MACtCS,qBAAqB,CAACrN,GAAG,EAAG+C,IAAI,IAAK;QACnC,MAAM+K,OAAO,GAAG/K,IAAI,CAAClB,IAAI;QACzB,OAAOkB,IAAI,CAACtC,QAAQ,KAAKoD,OAAO,CAACpD,QAAQ,IAAIqN,OAAO,CAAChN,MAAM,KAAK+C,OAAO,CAAC/C,MAAM,IAAIgN,OAAO,CAACC,YAAY,KAAKA,YAAY;MACzH,CAAC,CAAC;IACJ;EACF;EACA,OAAO,IAAI;AACb;AACA,SAASK,qBAAqBA,CAACvK,OAAO,EAAEhC,IAAI,EAAE;EAC5C,IAAI,CAACmL,oBAAoB,EAAE;IACzBa,kBAAkB,CAAC,CAAC;EACtB;EACA,SAASQ,KAAKA,CAACrO,GAAG,EAAE;IAClB,IAAImM,IAAI;IACR,IAAI,CAACS,oBAAoB,CAAC5M,GAAG,CAAC,IAAI,EAAEmM,IAAI,GAAGiB,iBAAiB,CAACpN,GAAG,CAAC,CAAC,EAAE;MAClE;IACF;IACA,MAAMsO,GAAG,GAAGvB,wBAAwB,CAAC/M,GAAG,CAAC;IACzC,IAAImH,KAAK;IACT,IAAImH,GAAG,CAACC,IAAI,EAAE;MACZD,GAAG,CAACE,MAAM,CAACrH,KAAK,GAAGtE,KAAK,CAAC4L,IAAI,CAACH,GAAG,CAAC,CAAC3N,KAAK,CAAC,CAAC,CAAC;IAC7C,CAAC,MAAM;MACLwG,KAAK,GAAGwF,2BAA2B,CAACR,IAAI,CAAC;MACzC,IAAIhF,KAAK,IAAI8E,mBAAmB,IAAI,CAACQ,2BAA2B,CAACN,IAAI,EAAEhF,KAAK,GAAG,CAAC,CAAC,EAAE;QACjF;MACF;IACF;IACA,MAAMpE,IAAI,GAAG;MACX0I,MAAM,EAAE3D,IAAI,CAACC,KAAK,CAACG,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG4D,kBAAkB,CAAC;MACnDtL,QAAQ,EAAEoD,OAAO,CAACpD,QAAQ;MAC1BoB;IACF,CAAC;IACD,OAAOwK,aAAa,CAClBF,IAAI,EACJP,kBAAkB,GAAGzE,KAAK,CAACuF,QAAQ,CAAC,CAAC,EACrCiB,IAAI,CAACe,SAAS,CAAC3L,IAAI,CACrB,CAAC;EACH;EACA,IAAIlB,IAAI,CAACkM,YAAY,IAAI,CAACG,kBAAkB,CAACrK,OAAO,EAAEhC,IAAI,CAACkM,YAAY,CAAC,EAAE;IACxE;EACF;EACA,IAAI,CAAC1Q,MAAM,CAACgF,IAAI,CAACR,IAAI,CAACE,KAAK,CAAC,CAAC7C,MAAM,EAAE;IACnC;EACF;EACA,IAAI2C,IAAI,CAACe,SAAS,EAAE;IAClBf,IAAI,GAAGxE,MAAM,CAACsR,MAAM,CAAC,CAAC,CAAC,EAAE9M,IAAI,CAAC;IAC9B,OAAOA,IAAI,CAACe,SAAS;EACvB;EACA,IAAI,CAACyL,KAAK,CAAC,OAAO,CAAC,EAAE;IACnBA,KAAK,CAAC,SAAS,CAAC;EAClB;AACF;AAEA,SAASO,aAAaA,CAAA,EAAG,CACzB;AACA,SAASC,cAAcA,CAAChL,OAAO,EAAE;EAC/B,IAAI,CAACA,OAAO,CAACiL,eAAe,EAAE;IAC5BjL,OAAO,CAACiL,eAAe,GAAG,IAAI;IAC9BxI,UAAU,CAAC,MAAM;MACfzC,OAAO,CAACiL,eAAe,GAAG,KAAK;MAC/B1I,eAAe,CAACvC,OAAO,CAAC;IAC1B,CAAC,CAAC;EACJ;AACF;AACA,SAASkL,YAAYA,CAAClL,OAAO,EAAE9B,KAAK,EAAE;EACpC,IAAI,CAAC8B,OAAO,CAACmL,WAAW,EAAE;IACxBnL,OAAO,CAACmL,WAAW,GAAGjN,KAAK;EAC7B,CAAC,MAAM;IACL8B,OAAO,CAACmL,WAAW,GAAGnL,OAAO,CAACmL,WAAW,CAAC5M,MAAM,CAACL,KAAK,CAAC,CAACuD,IAAI,CAAC,CAAC;EAChE;EACA,IAAI,CAACzB,OAAO,CAACoL,cAAc,EAAE;IAC3BpL,OAAO,CAACoL,cAAc,GAAG,IAAI;IAC7B3I,UAAU,CAAC,MAAM;MACfzC,OAAO,CAACoL,cAAc,GAAG,KAAK;MAC9B,MAAM;QAAExO,QAAQ;QAAEK;MAAO,CAAC,GAAG+C,OAAO;MACpC,MAAMqL,MAAM,GAAGrL,OAAO,CAACmL,WAAW;MAClC,OAAOnL,OAAO,CAACmL,WAAW;MAC1B,IAAIxD,GAAG;MACP,IAAI,CAAC0D,MAAM,IAAI,EAAE1D,GAAG,GAAGzE,YAAY,CAACtG,QAAQ,CAAC,CAAC,EAAE;QAC9C;MACF;MACA,MAAM0O,MAAM,GAAG3D,GAAG,CAAC4D,OAAO,CAAC3O,QAAQ,EAAEK,MAAM,EAAEoO,MAAM,CAAC;MACpDC,MAAM,CAAC5P,OAAO,CAAEwD,IAAI,IAAK;QACvBsI,YAAY,CAAC5K,QAAQ,EAAEsC,IAAI,EAAGlB,IAAI,IAAK;UACrC,IAAI,OAAOA,IAAI,KAAK,QAAQ,EAAE;YAC5BkB,IAAI,CAAChB,KAAK,CAACxC,OAAO,CAAEyB,IAAI,IAAK;cAC3B6C,OAAO,CAACL,OAAO,CAACM,GAAG,CAAC9C,IAAI,CAAC;YAC3B,CAAC,CAAC;UACJ,CAAC,MAAM;YACL,IAAI;cACF,MAAMqO,MAAM,GAAGzL,UAAU,CACvBC,OAAO,EACPhC,IACF,CAAC;cACD,IAAI,CAACwN,MAAM,CAACnQ,MAAM,EAAE;gBAClB;cACF;cACA,MAAMmG,OAAO,GAAGxB,OAAO,CAACyL,YAAY;cACpC,IAAIjK,OAAO,EAAE;gBACXgK,MAAM,CAAC9P,OAAO,CAAEyB,IAAI,IAAK;kBACvBqE,OAAO,CAACmJ,MAAM,CAACxN,IAAI,CAAC;gBACtB,CAAC,CAAC;cACJ;cACAoN,qBAAqB,CAACvK,OAAO,EAAEhC,IAAI,CAAC;YACtC,CAAC,CAAC,OAAOmC,GAAG,EAAE;cACZuL,OAAO,CAACvF,KAAK,CAAChG,GAAG,CAAC;YACpB;UACF;UACA6K,cAAc,CAAChL,OAAO,CAAC;QACzB,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;AACF;AACA,MAAM2L,WAAW,GAAGA,CAACzN,KAAK,EAAEY,QAAQ,KAAK;EACvC,MAAM8M,YAAY,GAAGzI,WAAW,CAACjF,KAAK,EAAE,IAAI,EAAE0C,gBAAgB,CAAC,CAAC,CAAC;EACjE,MAAMiL,WAAW,GAAGvK,SAAS,CAACsK,YAAY,CAAC;EAC3C,IAAI,CAACC,WAAW,CAACrK,OAAO,CAACnG,MAAM,EAAE;IAC/B,IAAIyQ,YAAY,GAAG,IAAI;IACvB,IAAIhN,QAAQ,EAAE;MACZ2D,UAAU,CAAC,MAAM;QACf,IAAIqJ,YAAY,EAAE;UAChBhN,QAAQ,CACN+M,WAAW,CAACtK,MAAM,EAClBsK,WAAW,CAAClM,OAAO,EACnBkM,WAAW,CAACrK,OAAO,EACnBuJ,aACF,CAAC;QACH;MACF,CAAC,CAAC;IACJ;IACA,OAAO,MAAM;MACXe,YAAY,GAAG,KAAK;IACtB,CAAC;EACH;EACA,MAAMC,QAAQ,GAAG,eAAgBvS,MAAM,CAAC4E,MAAM,CAAC,IAAI,CAAC;EACpD,MAAM4N,OAAO,GAAG,EAAE;EAClB,IAAIC,YAAY,EAAEC,UAAU;EAC5BL,WAAW,CAACrK,OAAO,CAAC9F,OAAO,CAAE6B,IAAI,IAAK;IACpC,MAAM;MAAEX,QAAQ;MAAEK;IAAO,CAAC,GAAGM,IAAI;IACjC,IAAIN,MAAM,KAAKiP,UAAU,IAAItP,QAAQ,KAAKqP,YAAY,EAAE;MACtD;IACF;IACAA,YAAY,GAAGrP,QAAQ;IACvBsP,UAAU,GAAGjP,MAAM;IACnB+O,OAAO,CAAC/M,IAAI,CAACY,UAAU,CAACjD,QAAQ,EAAEK,MAAM,CAAC,CAAC;IAC1C,MAAMkP,gBAAgB,GAAGJ,QAAQ,CAACnP,QAAQ,CAAC,KAAKmP,QAAQ,CAACnP,QAAQ,CAAC,GAAG,eAAgBpD,MAAM,CAAC4E,MAAM,CAAC,IAAI,CAAC,CAAC;IACzG,IAAI,CAAC+N,gBAAgB,CAAClP,MAAM,CAAC,EAAE;MAC7BkP,gBAAgB,CAAClP,MAAM,CAAC,GAAG,EAAE;IAC/B;EACF,CAAC,CAAC;EACF4O,WAAW,CAACrK,OAAO,CAAC9F,OAAO,CAAE6B,IAAI,IAAK;IACpC,MAAM;MAAEX,QAAQ;MAAEK,MAAM;MAAEE;IAAK,CAAC,GAAGI,IAAI;IACvC,MAAMyC,OAAO,GAAGH,UAAU,CAACjD,QAAQ,EAAEK,MAAM,CAAC;IAC5C,MAAMmP,YAAY,GAAGpM,OAAO,CAACyL,YAAY,KAAKzL,OAAO,CAACyL,YAAY,GAAG,eAAgB,IAAI7L,GAAG,CAAC,CAAC,CAAC;IAC/F,IAAI,CAACwM,YAAY,CAACpL,GAAG,CAAC7D,IAAI,CAAC,EAAE;MAC3BiP,YAAY,CAACnM,GAAG,CAAC9C,IAAI,CAAC;MACtB4O,QAAQ,CAACnP,QAAQ,CAAC,CAACK,MAAM,CAAC,CAACgC,IAAI,CAAC9B,IAAI,CAAC;IACvC;EACF,CAAC,CAAC;EACF6O,OAAO,CAACtQ,OAAO,CAAEsE,OAAO,IAAK;IAC3B,MAAM;MAAEpD,QAAQ;MAAEK;IAAO,CAAC,GAAG+C,OAAO;IACpC,IAAI+L,QAAQ,CAACnP,QAAQ,CAAC,CAACK,MAAM,CAAC,CAAC5B,MAAM,EAAE;MACrC6P,YAAY,CAAClL,OAAO,EAAE+L,QAAQ,CAACnP,QAAQ,CAAC,CAACK,MAAM,CAAC,CAAC;IACnD;EACF,CAAC,CAAC;EACF,OAAO6B,QAAQ,GAAGgE,aAAa,CAAChE,QAAQ,EAAE+M,WAAW,EAAEG,OAAO,CAAC,GAAGjB,aAAa;AACjF,CAAC;AACD,MAAMsB,UAAU,GAAI9O,IAAI,IAAK;EAC3B,OAAO,IAAI+O,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACtC,MAAMC,OAAO,GAAG,OAAOlP,IAAI,KAAK,QAAQ,GAAGd,YAAY,CAACc,IAAI,EAAE,IAAI,CAAC,GAAGA,IAAI;IAC1E,IAAI,CAACkP,OAAO,EAAE;MACZD,MAAM,CAACjP,IAAI,CAAC;MACZ;IACF;IACAoO,WAAW,CAAC,CAACc,OAAO,IAAIlP,IAAI,CAAC,EAAGgE,MAAM,IAAK;MACzC,IAAIA,MAAM,CAAClG,MAAM,IAAIoR,OAAO,EAAE;QAC5B,MAAMzO,IAAI,GAAG8C,WAAW,CAAC2L,OAAO,CAAC;QACjC,IAAIzO,IAAI,EAAE;UACRuO,OAAO,CAAC;YACN,GAAGrS,gBAAgB;YACnB,GAAG8D;UACL,CAAC,CAAC;UACF;QACF;MACF;MACAwO,MAAM,CAACjP,IAAI,CAAC;IACd,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC;;AAED;AACA;AACA;AACA,SAASmP,cAAcA,CAACjS,KAAK,EAAE;EAC3B,IAAI;IACA,MAAM+E,GAAG,GAAG,OAAO/E,KAAK,KAAK,QAAQ,GAAGqP,IAAI,CAAClL,KAAK,CAACnE,KAAK,CAAC,GAAGA,KAAK;IACjE,IAAI,OAAO+E,GAAG,CAACpF,IAAI,KAAK,QAAQ,EAAE;MAC9B,OAAO;QACH,GAAGoF;MACP,CAAC;IACL;EACJ,CAAC,CACD,OAAOW,GAAG,EAAE;IACR;EAAA;AAER;;AAEA;AACA;AACA;AACA,SAASwM,cAAcA,CAAClS,KAAK,EAAEmS,MAAM,EAAE;EACnC;EACA,MAAMzP,IAAI,GAAG,OAAO1C,KAAK,KAAK,QAAQ,GAAGgC,YAAY,CAAChC,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,IAAI;EAC/E,IAAI,CAAC0C,IAAI,EAAE;IACP;IACA,MAAMa,IAAI,GAAG0O,cAAc,CAACjS,KAAK,CAAC;IAClC,OAAO;MACHA,KAAK;MACLuD;IACJ,CAAC;EACL;EACA;EACA,MAAMA,IAAI,GAAG8C,WAAW,CAAC3D,IAAI,CAAC;EAC9B;EACA,IAAIa,IAAI,KAAK,KAAK,CAAC,IAAI,CAACb,IAAI,CAACF,MAAM,EAAE;IACjC,OAAO;MACHxC,KAAK;MACL0C,IAAI;MACJa,IAAI,CAAE;IACV,CAAC;EACL;EACA;EACA,MAAM6O,OAAO,GAAGlB,WAAW,CAAC,CAACxO,IAAI,CAAC,EAAE,MAAMyP,MAAM,CAACnS,KAAK,EAAE0C,IAAI,EAAE2D,WAAW,CAAC3D,IAAI,CAAC,CAAC,CAAC;EACjF,OAAO;IACH1C,KAAK;IACL0C,IAAI;IACJ0P;EACJ,CAAC;AACL;;AAEA;AACA,IAAIC,cAAc,GAAG,KAAK;AAC1B,IAAI;EACAA,cAAc,GAAGC,SAAS,CAACC,MAAM,CAACtH,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC;AAC5D,CAAC,CACD,OAAOvF,GAAG,EAAE;EACR;AAAA;AAEJ;AACA;AACA;AACA,SAAS8M,aAAaA,CAAC7S,IAAI,EAAE8S,IAAI,EAAE;EAC/B,QAAQA,IAAI;IACR;IACA,KAAK,KAAK;IACV,KAAK,IAAI;IACT,KAAK,MAAM;MACP,OAAOA,IAAI;EACnB;EACA;EACA;EACA,IAAIA,IAAI,KAAK,OAAO,KACfJ,cAAc,IAAI1S,IAAI,CAACsL,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE;IAC/C;IACA,OAAO,KAAK;EAChB;EACA;EACA,OAAOtL,IAAI,CAACsL,OAAO,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,GAAG,MAAM;AAC9D;AAEA,MAAMyH,UAAU,GAAG,2BAA2B;AAC9C,MAAMC,SAAS,GAAG,2BAA2B;AAC7C,SAASC,eAAeA,CAAC3C,IAAI,EAAE4C,KAAK,EAAEC,SAAS,EAAE;EAC/C,IAAID,KAAK,KAAK,CAAC,EAAE;IACf,OAAO5C,IAAI;EACb;EACA6C,SAAS,GAAGA,SAAS,IAAI,GAAG;EAC5B,IAAI,OAAO7C,IAAI,KAAK,QAAQ,EAAE;IAC5B,OAAOzG,IAAI,CAACuJ,IAAI,CAAC9C,IAAI,GAAG4C,KAAK,GAAGC,SAAS,CAAC,GAAGA,SAAS;EACxD;EACA,IAAI,OAAO7C,IAAI,KAAK,QAAQ,EAAE;IAC5B,OAAOA,IAAI;EACb;EACA,MAAM+C,QAAQ,GAAG/C,IAAI,CAACxP,KAAK,CAACiS,UAAU,CAAC;EACvC,IAAIM,QAAQ,KAAK,IAAI,IAAI,CAACA,QAAQ,CAACpS,MAAM,EAAE;IACzC,OAAOqP,IAAI;EACb;EACA,MAAMgD,QAAQ,GAAG,EAAE;EACnB,IAAIC,IAAI,GAAGF,QAAQ,CAAC3Q,KAAK,CAAC,CAAC;EAC3B,IAAI8Q,QAAQ,GAAGR,SAAS,CAACS,IAAI,CAACF,IAAI,CAAC;EACnC,OAAO,IAAI,EAAE;IACX,IAAIC,QAAQ,EAAE;MACZ,MAAM7S,GAAG,GAAGI,UAAU,CAACwS,IAAI,CAAC;MAC5B,IAAI1S,KAAK,CAACF,GAAG,CAAC,EAAE;QACd2S,QAAQ,CAACzO,IAAI,CAAC0O,IAAI,CAAC;MACrB,CAAC,MAAM;QACLD,QAAQ,CAACzO,IAAI,CAACgF,IAAI,CAACuJ,IAAI,CAACzS,GAAG,GAAGuS,KAAK,GAAGC,SAAS,CAAC,GAAGA,SAAS,CAAC;MAC/D;IACF,CAAC,MAAM;MACLG,QAAQ,CAACzO,IAAI,CAAC0O,IAAI,CAAC;IACrB;IACAA,IAAI,GAAGF,QAAQ,CAAC3Q,KAAK,CAAC,CAAC;IACvB,IAAI6Q,IAAI,KAAK,KAAK,CAAC,EAAE;MACnB,OAAOD,QAAQ,CAACpQ,IAAI,CAAC,EAAE,CAAC;IAC1B;IACAsQ,QAAQ,GAAG,CAACA,QAAQ;EACtB;AACF;AAEA,SAASE,YAAYA,CAACC,OAAO,EAAEC,GAAG,GAAG,MAAM,EAAE;EAC3C,IAAIC,IAAI,GAAG,EAAE;EACb,MAAM3K,KAAK,GAAGyK,OAAO,CAACrI,OAAO,CAAC,GAAG,GAAGsI,GAAG,CAAC;EACxC,OAAO1K,KAAK,IAAI,CAAC,EAAE;IACjB,MAAM4K,KAAK,GAAGH,OAAO,CAACrI,OAAO,CAAC,GAAG,EAAEpC,KAAK,CAAC;IACzC,MAAM6K,GAAG,GAAGJ,OAAO,CAACrI,OAAO,CAAC,IAAI,GAAGsI,GAAG,CAAC;IACvC,IAAIE,KAAK,KAAK,CAAC,CAAC,IAAIC,GAAG,KAAK,CAAC,CAAC,EAAE;MAC9B;IACF;IACA,MAAMC,MAAM,GAAGL,OAAO,CAACrI,OAAO,CAAC,GAAG,EAAEyI,GAAG,CAAC;IACxC,IAAIC,MAAM,KAAK,CAAC,CAAC,EAAE;MACjB;IACF;IACAH,IAAI,IAAIF,OAAO,CAAC3S,KAAK,CAAC8S,KAAK,GAAG,CAAC,EAAEC,GAAG,CAAC,CAACvS,IAAI,CAAC,CAAC;IAC5CmS,OAAO,GAAGA,OAAO,CAAC3S,KAAK,CAAC,CAAC,EAAEkI,KAAK,CAAC,CAAC1H,IAAI,CAAC,CAAC,GAAGmS,OAAO,CAAC3S,KAAK,CAACgT,MAAM,GAAG,CAAC,CAAC;EACtE;EACA,OAAO;IACLH,IAAI;IACJF;EACF,CAAC;AACH;AACA,SAASM,mBAAmBA,CAACJ,IAAI,EAAEF,OAAO,EAAE;EAC1C,OAAOE,IAAI,GAAG,QAAQ,GAAGA,IAAI,GAAG,SAAS,GAAGF,OAAO,GAAGA,OAAO;AAC/D;AACA,SAASO,cAAcA,CAAClU,IAAI,EAAE8T,KAAK,EAAEC,GAAG,EAAE;EACxC,MAAMjT,KAAK,GAAG4S,YAAY,CAAC1T,IAAI,CAAC;EAChC,OAAOiU,mBAAmB,CAACnT,KAAK,CAAC+S,IAAI,EAAEC,KAAK,GAAGhT,KAAK,CAAC6S,OAAO,GAAGI,GAAG,CAAC;AACrE;AAEA,MAAMI,cAAc,GAAI9T,KAAK,IAAKA,KAAK,KAAK,OAAO,IAAIA,KAAK,KAAK,WAAW,IAAIA,KAAK,KAAK,MAAM;AAChG,SAAS+T,SAASA,CAACjR,IAAI,EAAEtB,cAAc,EAAE;EACvC,MAAMwS,QAAQ,GAAG;IACf,GAAGvU,gBAAgB;IACnB,GAAGqD;EACL,CAAC;EACD,MAAMmR,kBAAkB,GAAG;IACzB,GAAGnU,yBAAyB;IAC5B,GAAG0B;EACL,CAAC;EACD,MAAM0S,GAAG,GAAG;IACVjV,IAAI,EAAE+U,QAAQ,CAAC/U,IAAI;IACnBC,GAAG,EAAE8U,QAAQ,CAAC9U,GAAG;IACjBC,KAAK,EAAE6U,QAAQ,CAAC7U,KAAK;IACrBC,MAAM,EAAE4U,QAAQ,CAAC5U;EACnB,CAAC;EACD,IAAIO,IAAI,GAAGqU,QAAQ,CAACrU,IAAI;EACxB,CAACqU,QAAQ,EAAEC,kBAAkB,CAAC,CAAChT,OAAO,CAAEkT,KAAK,IAAK;IAChD,MAAMC,eAAe,GAAG,EAAE;IAC1B,MAAM5U,KAAK,GAAG2U,KAAK,CAAC3U,KAAK;IACzB,MAAMD,KAAK,GAAG4U,KAAK,CAAC5U,KAAK;IACzB,IAAI8U,QAAQ,GAAGF,KAAK,CAAC7U,MAAM;IAC3B,IAAIE,KAAK,EAAE;MACT,IAAID,KAAK,EAAE;QACT8U,QAAQ,IAAI,CAAC;MACf,CAAC,MAAM;QACLD,eAAe,CAAC5P,IAAI,CAClB,YAAY,GAAG,CAAC0P,GAAG,CAAC/U,KAAK,GAAG+U,GAAG,CAACjV,IAAI,EAAEmP,QAAQ,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG8F,GAAG,CAAChV,GAAG,EAAEkP,QAAQ,CAAC,CAAC,GAAG,GACtF,CAAC;QACDgG,eAAe,CAAC5P,IAAI,CAAC,aAAa,CAAC;QACnC0P,GAAG,CAAChV,GAAG,GAAGgV,GAAG,CAACjV,IAAI,GAAG,CAAC;MACxB;IACF,CAAC,MAAM,IAAIM,KAAK,EAAE;MAChB6U,eAAe,CAAC5P,IAAI,CAClB,YAAY,GAAG,CAAC,CAAC,GAAG0P,GAAG,CAACjV,IAAI,EAAEmP,QAAQ,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC8F,GAAG,CAAC9U,MAAM,GAAG8U,GAAG,CAAChV,GAAG,EAAEkP,QAAQ,CAAC,CAAC,GAAG,GACvF,CAAC;MACDgG,eAAe,CAAC5P,IAAI,CAAC,aAAa,CAAC;MACnC0P,GAAG,CAAChV,GAAG,GAAGgV,GAAG,CAACjV,IAAI,GAAG,CAAC;IACxB;IACA,IAAIqV,SAAS;IACb,IAAID,QAAQ,GAAG,CAAC,EAAE;MAChBA,QAAQ,IAAI7K,IAAI,CAACC,KAAK,CAAC4K,QAAQ,GAAG,CAAC,CAAC,GAAG,CAAC;IAC1C;IACAA,QAAQ,GAAGA,QAAQ,GAAG,CAAC;IACvB,QAAQA,QAAQ;MACd,KAAK,CAAC;QACJC,SAAS,GAAGJ,GAAG,CAAC9U,MAAM,GAAG,CAAC,GAAG8U,GAAG,CAAChV,GAAG;QACpCkV,eAAe,CAACG,OAAO,CACrB,YAAY,GAAGD,SAAS,CAAClG,QAAQ,CAAC,CAAC,GAAG,GAAG,GAAGkG,SAAS,CAAClG,QAAQ,CAAC,CAAC,GAAG,GACrE,CAAC;QACD;MACF,KAAK,CAAC;QACJgG,eAAe,CAACG,OAAO,CACrB,aAAa,GAAG,CAACL,GAAG,CAAC/U,KAAK,GAAG,CAAC,GAAG+U,GAAG,CAACjV,IAAI,EAAEmP,QAAQ,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC8F,GAAG,CAAC9U,MAAM,GAAG,CAAC,GAAG8U,GAAG,CAAChV,GAAG,EAAEkP,QAAQ,CAAC,CAAC,GAAG,GACxG,CAAC;QACD;MACF,KAAK,CAAC;QACJkG,SAAS,GAAGJ,GAAG,CAAC/U,KAAK,GAAG,CAAC,GAAG+U,GAAG,CAACjV,IAAI;QACpCmV,eAAe,CAACG,OAAO,CACrB,aAAa,GAAGD,SAAS,CAAClG,QAAQ,CAAC,CAAC,GAAG,GAAG,GAAGkG,SAAS,CAAClG,QAAQ,CAAC,CAAC,GAAG,GACtE,CAAC;QACD;IACJ;IACA,IAAIiG,QAAQ,GAAG,CAAC,KAAK,CAAC,EAAE;MACtB,IAAIH,GAAG,CAACjV,IAAI,KAAKiV,GAAG,CAAChV,GAAG,EAAE;QACxBoV,SAAS,GAAGJ,GAAG,CAACjV,IAAI;QACpBiV,GAAG,CAACjV,IAAI,GAAGiV,GAAG,CAAChV,GAAG;QAClBgV,GAAG,CAAChV,GAAG,GAAGoV,SAAS;MACrB;MACA,IAAIJ,GAAG,CAAC/U,KAAK,KAAK+U,GAAG,CAAC9U,MAAM,EAAE;QAC5BkV,SAAS,GAAGJ,GAAG,CAAC/U,KAAK;QACrB+U,GAAG,CAAC/U,KAAK,GAAG+U,GAAG,CAAC9U,MAAM;QACtB8U,GAAG,CAAC9U,MAAM,GAAGkV,SAAS;MACxB;IACF;IACA,IAAIF,eAAe,CAACxT,MAAM,EAAE;MAC1BjB,IAAI,GAAGkU,cAAc,CACnBlU,IAAI,EACJ,gBAAgB,GAAGyU,eAAe,CAACvR,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,EACnD,MACF,CAAC;IACH;EACF,CAAC,CAAC;EACF,MAAM2R,mBAAmB,GAAGP,kBAAkB,CAAC9U,KAAK;EACpD,MAAMsV,oBAAoB,GAAGR,kBAAkB,CAAC7U,MAAM;EACtD,MAAMsV,QAAQ,GAAGR,GAAG,CAAC/U,KAAK;EAC1B,MAAMwV,SAAS,GAAGT,GAAG,CAAC9U,MAAM;EAC5B,IAAID,KAAK;EACT,IAAIC,MAAM;EACV,IAAIoV,mBAAmB,KAAK,IAAI,EAAE;IAChCpV,MAAM,GAAGqV,oBAAoB,KAAK,IAAI,GAAG,KAAK,GAAGA,oBAAoB,KAAK,MAAM,GAAGE,SAAS,GAAGF,oBAAoB;IACnHtV,KAAK,GAAGyT,eAAe,CAACxT,MAAM,EAAEsV,QAAQ,GAAGC,SAAS,CAAC;EACvD,CAAC,MAAM;IACLxV,KAAK,GAAGqV,mBAAmB,KAAK,MAAM,GAAGE,QAAQ,GAAGF,mBAAmB;IACvEpV,MAAM,GAAGqV,oBAAoB,KAAK,IAAI,GAAG7B,eAAe,CAACzT,KAAK,EAAEwV,SAAS,GAAGD,QAAQ,CAAC,GAAGD,oBAAoB,KAAK,MAAM,GAAGE,SAAS,GAAGF,oBAAoB;EAC5J;EACA,MAAMG,UAAU,GAAG,CAAC,CAAC;EACrB,MAAMC,OAAO,GAAGA,CAAChQ,IAAI,EAAE7E,KAAK,KAAK;IAC/B,IAAI,CAAC8T,cAAc,CAAC9T,KAAK,CAAC,EAAE;MAC1B4U,UAAU,CAAC/P,IAAI,CAAC,GAAG7E,KAAK,CAACoO,QAAQ,CAAC,CAAC;IACrC;EACF,CAAC;EACDyG,OAAO,CAAC,OAAO,EAAE1V,KAAK,CAAC;EACvB0V,OAAO,CAAC,QAAQ,EAAEzV,MAAM,CAAC;EACzB,MAAM0V,OAAO,GAAG,CAACZ,GAAG,CAACjV,IAAI,EAAEiV,GAAG,CAAChV,GAAG,EAAEwV,QAAQ,EAAEC,SAAS,CAAC;EACxDC,UAAU,CAACE,OAAO,GAAGA,OAAO,CAACjS,IAAI,CAAC,GAAG,CAAC;EACtC,OAAO;IACL+R,UAAU;IACVE,OAAO;IACPnV;EACF,CAAC;AACH;AAEA,SAASoV,YAAYA,CAACpV,IAAI,EAAEiV,UAAU,EAAE;EACtC,IAAII,iBAAiB,GAAGrV,IAAI,CAACsL,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,GAAG,6CAA6C;EAC1G,KAAK,MAAMxJ,IAAI,IAAImT,UAAU,EAAE;IAC7BI,iBAAiB,IAAI,GAAG,GAAGvT,IAAI,GAAG,IAAI,GAAGmT,UAAU,CAACnT,IAAI,CAAC,GAAG,GAAG;EACjE;EACA,OAAO,yCAAyC,GAAGuT,iBAAiB,GAAG,GAAG,GAAGrV,IAAI,GAAG,QAAQ;AAC9F;AAEA,SAASsV,eAAeA,CAACC,GAAG,EAAE;EAC5B,OAAOA,GAAG,CAAC/U,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAACA,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC,CAACA,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC,CAACA,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC,CAACA,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC,CAACA,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC;AACxI;AACA,SAASgV,SAASA,CAACD,GAAG,EAAE;EACtB,OAAO,qBAAqB,GAAGD,eAAe,CAACC,GAAG,CAAC;AACrD;AACA,SAASE,UAAUA,CAACF,GAAG,EAAE;EACvB,OAAO,OAAO,GAAGC,SAAS,CAACD,GAAG,CAAC,GAAG,IAAI;AACxC;AAEA,MAAMG,WAAW,GAAGA,CAAA,KAAM;EACxB,IAAIhR,QAAQ;EACZ,IAAI;IACFA,QAAQ,GAAGiR,KAAK;IAChB,IAAI,OAAOjR,QAAQ,KAAK,UAAU,EAAE;MAClC,OAAOA,QAAQ;IACjB;EACF,CAAC,CAAC,OAAOqB,GAAG,EAAE,CACd;AACF,CAAC;AACD,IAAI6P,WAAW,GAAGF,WAAW,CAAC,CAAC;AAC/B,SAASG,QAAQA,CAACC,MAAM,EAAE;EACxBF,WAAW,GAAGE,MAAM;AACtB;AACA,SAASC,QAAQA,CAAA,EAAG;EAClB,OAAOH,WAAW;AACpB;AACA,SAASI,kBAAkBA,CAACxT,QAAQ,EAAEK,MAAM,EAAE;EAC5C,MAAM0G,MAAM,GAAGsD,YAAY,CAACrK,QAAQ,CAAC;EACrC,IAAI,CAAC+G,MAAM,EAAE;IACX,OAAO,CAAC;EACV;EACA,IAAIzG,MAAM;EACV,IAAI,CAACyG,MAAM,CAACgD,MAAM,EAAE;IAClBzJ,MAAM,GAAG,CAAC;EACZ,CAAC,MAAM;IACL,IAAImT,aAAa,GAAG,CAAC;IACrB1M,MAAM,CAACN,SAAS,CAAC3H,OAAO,CAAEwD,IAAI,IAAK;MACjC,MAAMoR,IAAI,GAAGpR,IAAI;MACjBmR,aAAa,GAAGpM,IAAI,CAACsM,GAAG,CAACF,aAAa,EAAEC,IAAI,CAACjV,MAAM,CAAC;IACtD,CAAC,CAAC;IACF,MAAMmV,GAAG,GAAGvT,MAAM,GAAG,cAAc;IACnCC,MAAM,GAAGyG,MAAM,CAACgD,MAAM,GAAG0J,aAAa,GAAG1M,MAAM,CAAC+C,IAAI,CAACrL,MAAM,GAAGmV,GAAG,CAACnV,MAAM;EAC1E;EACA,OAAO6B,MAAM;AACf;AACA,SAASuT,WAAWA,CAAClM,MAAM,EAAE;EAC3B,OAAOA,MAAM,KAAK,GAAG;AACvB;AACA,MAAMgH,OAAO,GAAGA,CAAC3O,QAAQ,EAAEK,MAAM,EAAEiB,KAAK,KAAK;EAC3C,MAAMwS,OAAO,GAAG,EAAE;EAClB,MAAMC,SAAS,GAAGP,kBAAkB,CAACxT,QAAQ,EAAEK,MAAM,CAAC;EACtD,MAAM2T,IAAI,GAAG,OAAO;EACpB,IAAI1R,IAAI,GAAG;IACT0R,IAAI;IACJhU,QAAQ;IACRK,MAAM;IACNiB,KAAK,EAAE;EACT,CAAC;EACD,IAAI7C,MAAM,GAAG,CAAC;EACd6C,KAAK,CAACxC,OAAO,CAAC,CAACyB,IAAI,EAAEmG,KAAK,KAAK;IAC7BjI,MAAM,IAAI8B,IAAI,CAAC9B,MAAM,GAAG,CAAC;IACzB,IAAIA,MAAM,IAAIsV,SAAS,IAAIrN,KAAK,GAAG,CAAC,EAAE;MACpCoN,OAAO,CAACzR,IAAI,CAACC,IAAI,CAAC;MAClBA,IAAI,GAAG;QACL0R,IAAI;QACJhU,QAAQ;QACRK,MAAM;QACNiB,KAAK,EAAE;MACT,CAAC;MACD7C,MAAM,GAAG8B,IAAI,CAAC9B,MAAM;IACtB;IACA6D,IAAI,CAAChB,KAAK,CAACe,IAAI,CAAC9B,IAAI,CAAC;EACvB,CAAC,CAAC;EACFuT,OAAO,CAACzR,IAAI,CAACC,IAAI,CAAC;EAClB,OAAOwR,OAAO;AAChB,CAAC;AACD,SAASG,OAAOA,CAACjU,QAAQ,EAAE;EACzB,IAAI,OAAOA,QAAQ,KAAK,QAAQ,EAAE;IAChC,MAAM+G,MAAM,GAAGsD,YAAY,CAACrK,QAAQ,CAAC;IACrC,IAAI+G,MAAM,EAAE;MACV,OAAOA,MAAM,CAAC+C,IAAI;IACpB;EACF;EACA,OAAO,GAAG;AACZ;AACA,MAAMgB,IAAI,GAAGA,CAAC4I,IAAI,EAAEhF,MAAM,EAAExM,QAAQ,KAAK;EACvC,IAAI,CAACkR,WAAW,EAAE;IAChBlR,QAAQ,CAAC,OAAO,EAAE,GAAG,CAAC;IACtB;EACF;EACA,IAAI4H,IAAI,GAAGmK,OAAO,CAACvF,MAAM,CAAC1O,QAAQ,CAAC;EACnC,QAAQ0O,MAAM,CAACsF,IAAI;IACjB,KAAK,OAAO;MAAE;QACZ,MAAM3T,MAAM,GAAGqO,MAAM,CAACrO,MAAM;QAC5B,MAAMiB,KAAK,GAAGoN,MAAM,CAACpN,KAAK;QAC1B,MAAM4S,SAAS,GAAG5S,KAAK,CAACZ,IAAI,CAAC,GAAG,CAAC;QACjC,MAAMyT,SAAS,GAAG,IAAIC,eAAe,CAAC;UACpC9S,KAAK,EAAE4S;QACT,CAAC,CAAC;QACFpK,IAAI,IAAIzJ,MAAM,GAAG,QAAQ,GAAG8T,SAAS,CAAClI,QAAQ,CAAC,CAAC;QAChD;MACF;IACA,KAAK,QAAQ;MAAE;QACb,MAAMoI,GAAG,GAAG3F,MAAM,CAAC2F,GAAG;QACtBvK,IAAI,IAAIuK,GAAG,CAAC7V,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,GAAG,GAAG6V,GAAG,CAAC7V,KAAK,CAAC,CAAC,CAAC,GAAG6V,GAAG;QACpD;MACF;IACA;MACEnS,QAAQ,CAAC,OAAO,EAAE,GAAG,CAAC;MACtB;EACJ;EACA,IAAIoS,YAAY,GAAG,GAAG;EACtBlB,WAAW,CAACM,IAAI,GAAG5J,IAAI,CAAC,CAACyK,IAAI,CAAE7L,QAAQ,IAAK;IAC1C,MAAMf,MAAM,GAAGe,QAAQ,CAACf,MAAM;IAC9B,IAAIA,MAAM,KAAK,GAAG,EAAE;MAClB9B,UAAU,CAAC,MAAM;QACf3D,QAAQ,CAAC2R,WAAW,CAAClM,MAAM,CAAC,GAAG,OAAO,GAAG,MAAM,EAAEA,MAAM,CAAC;MAC1D,CAAC,CAAC;MACF;IACF;IACA2M,YAAY,GAAG,GAAG;IAClB,OAAO5L,QAAQ,CAAC8L,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC,CAACD,IAAI,CAAEnT,IAAI,IAAK;IAChB,IAAI,OAAOA,IAAI,KAAK,QAAQ,IAAIA,IAAI,KAAK,IAAI,EAAE;MAC7CyE,UAAU,CAAC,MAAM;QACf,IAAIzE,IAAI,KAAK,GAAG,EAAE;UAChBc,QAAQ,CAAC,OAAO,EAAEd,IAAI,CAAC;QACzB,CAAC,MAAM;UACLc,QAAQ,CAAC,MAAM,EAAEoS,YAAY,CAAC;QAChC;MACF,CAAC,CAAC;MACF;IACF;IACAzO,UAAU,CAAC,MAAM;MACf3D,QAAQ,CAAC,SAAS,EAAEd,IAAI,CAAC;IAC3B,CAAC,CAAC;EACJ,CAAC,CAAC,CAACqT,KAAK,CAAC,MAAM;IACbvS,QAAQ,CAAC,MAAM,EAAEoS,YAAY,CAAC;EAChC,CAAC,CAAC;AACJ,CAAC;AACD,MAAMI,cAAc,GAAG;EACrB/F,OAAO;EACP7D;AACF,CAAC;AAED,SAAS6J,kBAAkBA,CAACvR,OAAO,EAAEvF,KAAK,EAAE;EAC1C,QAAQuF,OAAO;IACb,KAAK,OAAO;IACZ,KAAK,SAAS;MACZ+I,oBAAoB,CAAC/I,OAAO,CAAC,GAAGvF,KAAK;MACrC;IACF,KAAK,KAAK;MACR,KAAK,MAAM0B,GAAG,IAAI4M,oBAAoB,EAAE;QACtCA,oBAAoB,CAAC5M,GAAG,CAAC,GAAG1B,KAAK;MACnC;MACA;EACJ;AACF;;AAEA;AACA;AACA;AACA,MAAM+W,QAAQ,GAAG,YAAY;AAC7B;AACA;AACA;AACA,IAAIC,WAAW,GAAG,EAAE;AACpB;AACA;AACA;AACA;AACA;AACA,SAASC,iBAAiBA,CAACC,KAAK,EAAE;EAC9BF,WAAW,GAAGE,KAAK;AACvB;AACA;AACA;AACA;AACA,SAASC,WAAWA,CAAC/T,MAAM,EAAEgU,MAAM,EAAE;EACjC;EACA,IAAIC,SAAS,GAAG9S,KAAK,CAAC4L,IAAI,CAAC/M,MAAM,CAACkU,UAAU,CAAC,CAAC3L,IAAI,CAAEpK,IAAI,IAAKA,IAAI,CAACgW,YAAY,IAC1EhW,IAAI,CAACgW,YAAY,CAACR,QAAQ,CAAC,CAAC;EAChC,IAAI,CAACM,SAAS,EAAE;IACZA,SAAS,GAAGG,QAAQ,CAACC,aAAa,CAAC,OAAO,CAAC;IAC3CJ,SAAS,CAACK,YAAY,CAACX,QAAQ,EAAEA,QAAQ,CAAC;IAC1C3T,MAAM,CAACuU,WAAW,CAACN,SAAS,CAAC;EACjC;EACA;EACAA,SAAS,CAACO,WAAW,GACjB,4CAA4C,IACvCR,MAAM,GAAG,UAAU,GAAG,GAAG,CAAC,GAC3B,0BAA0B,GAC1BJ,WAAW;AACvB;;AAEA;AACA;AACA;AACA;AACA,SAASa,eAAeA,CAAA,EAAG;EACvB;AACJ;AACA;EACI;EACArP,YAAY,CAAC,EAAE,EAAEqO,cAAc,CAAC;EAChC;EACA1Q,gBAAgB,CAAC,IAAI,CAAC;EACtB,IAAIyI,OAAO;EACX,IAAI;IACAA,OAAO,GAAGC,MAAM;EACpB,CAAC,CACD,OAAOnJ,GAAG,EAAE;IACR;EAAA;EAEJ,IAAIkJ,OAAO,EAAE;IACT;IACAW,kBAAkB,CAAC,CAAC;IACpB;IACA,IAAIX,OAAO,CAACkJ,cAAc,KAAK,KAAK,CAAC,EAAE;MACnC,MAAMC,OAAO,GAAGnJ,OAAO,CAACkJ,cAAc;MACtC,MAAMpS,GAAG,GAAG,gCAAgC;MAC5C,IAAI,OAAOqS,OAAO,KAAK,QAAQ,IAAIA,OAAO,KAAK,IAAI,EAAE;QACjD,CAACA,OAAO,YAAYxT,KAAK,GAAGwT,OAAO,GAAG,CAACA,OAAO,CAAC,EAAE9W,OAAO,CAAEwD,IAAI,IAAK;UAC/D,IAAI;YACA;YACA;YACA,OAAOA,IAAI,KAAK,QAAQ,IACpBA,IAAI,KAAK,IAAI,IACbA,IAAI,YAAYF,KAAK;YACrB;YACA,OAAOE,IAAI,CAAChB,KAAK,KAAK,QAAQ,IAC9B,OAAOgB,IAAI,CAACjC,MAAM,KAAK,QAAQ;YAC/B;YACA,CAACiE,eAAe,CAAChC,IAAI,CAAC,EAAE;cACxBwM,OAAO,CAACvF,KAAK,CAAChG,GAAG,CAAC;YACtB;UACJ,CAAC,CACD,OAAOsS,CAAC,EAAE;YACN/G,OAAO,CAACvF,KAAK,CAAChG,GAAG,CAAC;UACtB;QACJ,CAAC,CAAC;MACN;IACJ;IACA;IACA,IAAIkJ,OAAO,CAACqJ,gBAAgB,KAAK,KAAK,CAAC,EAAE;MACrC,MAAMpS,SAAS,GAAG+I,OAAO,CAACqJ,gBAAgB;MAC1C,IAAI,OAAOpS,SAAS,KAAK,QAAQ,IAAIA,SAAS,KAAK,IAAI,EAAE;QACrD,KAAK,MAAMnE,GAAG,IAAImE,SAAS,EAAE;UACzB,MAAMH,GAAG,GAAG,mBAAmB,GAAGhE,GAAG,GAAG,eAAe;UACvD,IAAI;YACA,MAAM1B,KAAK,GAAG6F,SAAS,CAACnE,GAAG,CAAC;YAC5B,IAAI,OAAO1B,KAAK,KAAK,QAAQ,IACzB,CAACA,KAAK,IACNA,KAAK,CAAC4I,SAAS,KAAK,KAAK,CAAC,EAAE;cAC5B;YACJ;YACA,IAAI,CAAC0D,gBAAgB,CAAC5K,GAAG,EAAE1B,KAAK,CAAC,EAAE;cAC/BiR,OAAO,CAACvF,KAAK,CAAChG,GAAG,CAAC;YACtB;UACJ,CAAC,CACD,OAAOsS,CAAC,EAAE;YACN/G,OAAO,CAACvF,KAAK,CAAChG,GAAG,CAAC;UACtB;QACJ;MACJ;IACJ;EACJ;EACA,MAAMwS,IAAI,GAAG;IACT1L,YAAY;IACZhE,YAAY;IACZuE,YAAY;IACZyI,QAAQ;IACRE,QAAQ;IACRjJ;EACJ,CAAC;EACD,OAAO;IACH0L,WAAW,EAAG5S,OAAO,IAAKuR,kBAAkB,CAACvR,OAAO,EAAE,IAAI,CAAC;IAC3D6S,YAAY,EAAG7S,OAAO,IAAKuR,kBAAkB,CAACvR,OAAO,EAAE,KAAK,CAAC;IAC7D8S,UAAU,EAAE1R,YAAY;IACxB2R,UAAU,EAAE3R,YAAY;IAAE;IAC1B4R,OAAO,EAAE3R,SAAS;IAClB4R,SAAS,EAAE7S,WAAW;IACtB8S,OAAO,EAAEjS,SAAS;IAClBkS,aAAa,EAAEjS,eAAe;IAC9BkS,aAAa,EAAE/F,eAAe;IAC9BgG,SAAS,EAAE7E,SAAS;IACpB8E,UAAU,EAAE9D,YAAY;IACxB+D,QAAQ,EAAE1D,UAAU;IACpB2D,SAAS,EAAE7H,WAAW;IACtB8H,QAAQ,EAAEpH,UAAU;IACpBqH,cAAc,EAAE3M,gBAAgB;IAChC2K,iBAAiB;IACjBiB;EACJ,CAAC;AACL;;AAEA;AACA,MAAMgB,aAAa,GAAG;EAClB,kBAAkB,EAAE;AACxB,CAAC;AACD,MAAMC,YAAY,GAAG;EACjB,kBAAkB,EAAE;AACxB,CAAC;AACD;AACA,MAAMC,UAAU,GAAG;EACfC,KAAK,EAAE,YAAY;EACnBC,MAAM,EAAE,WAAW;EACnBrJ,IAAI,EAAE;AACV,CAAC;AACD,MAAMsJ,YAAY,GAAG;EACjB,cAAc,EAAEL,aAAa;EAC7B,MAAM,EAAEA,aAAa;EACrB,YAAY,EAAEC;AAClB,CAAC;AACD,KAAK,MAAM3W,MAAM,IAAI+W,YAAY,EAAE;EAC/B,MAAMjS,IAAI,GAAGiS,YAAY,CAAC/W,MAAM,CAAC;EACjC,KAAK,MAAMqC,IAAI,IAAIuU,UAAU,EAAE;IAC3B9R,IAAI,CAAC9E,MAAM,GAAG,GAAG,GAAGqC,IAAI,CAAC,GAAGuU,UAAU,CAACvU,IAAI,CAAC;EAChD;AACJ;AACA;AACA;AACA;AACA,SAAS2U,OAAOA,CAACxZ,KAAK,EAAE;EACpB,OAAOA,KAAK,GAAGA,KAAK,IAAIA,KAAK,CAAC+C,KAAK,CAAC,YAAY,CAAC,GAAG,IAAI,GAAG,EAAE,CAAC,GAAG,SAAS;AAC9E;AACA;AACA;AACA;AACA,SAAS0W,UAAUA,CAAClW,IAAI,EAAET,IAAI,EAAE4W,OAAO,EAAE;EACrC,MAAMnY,IAAI,GAAGiW,QAAQ,CAACC,aAAa,CAAC,MAAM,CAAC;EAC3C;EACA,IAAI9X,IAAI,GAAG4D,IAAI,CAAC5D,IAAI;EACpB,IAAIA,IAAI,CAACsL,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;IAC3B;IACAtL,IAAI,IAAI,OAAO,GAAGiK,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,MAAM;EACzC;EACA;EACA,MAAM8P,aAAa,GAAGpW,IAAI,CAACqR,UAAU;EACrC,MAAMgF,IAAI,GAAG7E,YAAY,CAACpV,IAAI,EAAE;IAC5B,GAAGga,aAAa;IAChBxa,KAAK,EAAE2D,IAAI,CAAC3D,KAAK,GAAG,EAAE;IACtBC,MAAM,EAAE0D,IAAI,CAAC1D,MAAM,GAAG;EAC1B,CAAC,CAAC;EACF,MAAM2W,GAAG,GAAGX,UAAU,CAACwE,IAAI,CAAC;EAC5B;EACA,MAAMC,QAAQ,GAAGtY,IAAI,CAAC2V,KAAK;EAC3B,MAAM4C,MAAM,GAAG;IACX,OAAO,EAAE/D,GAAG;IACZ,OAAO,EAAEyD,OAAO,CAACG,aAAa,CAACxa,KAAK,CAAC;IACrC,QAAQ,EAAEqa,OAAO,CAACG,aAAa,CAACva,MAAM,CAAC;IACvC,IAAIsa,OAAO,GAAGR,aAAa,GAAGC,YAAY;EAC9C,CAAC;EACD;EACA,KAAK,MAAMtU,IAAI,IAAIiV,MAAM,EAAE;IACvBD,QAAQ,CAACE,WAAW,CAAClV,IAAI,EAAEiV,MAAM,CAACjV,IAAI,CAAC,CAAC;EAC5C;EACA,OAAOtD,IAAI;AACf;AAEA,IAAIyY,MAAM;AACV,SAASC,YAAYA,CAAA,EAAG;EACtB,IAAI;IACFD,MAAM,GAAGnL,MAAM,CAACqL,YAAY,CAACD,YAAY,CAAC,SAAS,EAAE;MACnD;MACAE,UAAU,EAAGC,CAAC,IAAKA;IACrB,CAAC,CAAC;EACJ,CAAC,CAAC,OAAO1U,GAAG,EAAE;IACZsU,MAAM,GAAG,IAAI;EACf;AACF;AACA,SAASK,gBAAgBA,CAACT,IAAI,EAAE;EAC9B,IAAII,MAAM,KAAK,KAAK,CAAC,EAAE;IACrBC,YAAY,CAAC,CAAC;EAChB;EACA,OAAOD,MAAM,GAAGA,MAAM,CAACG,UAAU,CAACP,IAAI,CAAC,GAAGA,IAAI;AAChD;;AAEA;AACA;AACA;AACA,SAASU,SAASA,CAAC/W,IAAI,EAAE;EACrB,MAAMhC,IAAI,GAAGiW,QAAQ,CAACC,aAAa,CAAC,MAAM,CAAC;EAC3C;EACA,MAAMhW,IAAI,GAAG8B,IAAI,CAACqR,UAAU;EAC5B,IAAIsC,KAAK,GAAG,EAAE;EACd,IAAI,CAACzV,IAAI,CAACtC,KAAK,EAAE;IACb+X,KAAK,GAAG,iBAAiB;EAC7B;EACA,IAAI,CAACzV,IAAI,CAACrC,MAAM,EAAE;IACd8X,KAAK,IAAI,kBAAkB;EAC/B;EACA,IAAIA,KAAK,EAAE;IACPzV,IAAI,CAACyV,KAAK,GAAGA,KAAK;EACtB;EACA;EACA,MAAM0C,IAAI,GAAG7E,YAAY,CAACxR,IAAI,CAAC5D,IAAI,EAAE8B,IAAI,CAAC;EAC1CF,IAAI,CAACgZ,SAAS,GAAGF,gBAAgB,CAACT,IAAI,CAAC;EACvC,OAAOrY,IAAI,CAACiZ,UAAU;AAC1B;;AAEA;AACA;AACA;AACA,SAASC,eAAeA,CAACrX,MAAM,EAAE;EAC7B,OAAOmB,KAAK,CAAC4L,IAAI,CAAC/M,MAAM,CAACkU,UAAU,CAAC,CAAC3L,IAAI,CAAEpK,IAAI,IAAK;IAChD,MAAMgS,GAAG,GAAGhS,IAAI,CAACmZ,OAAO,IACpBnZ,IAAI,CAACmZ,OAAO,CAACC,WAAW,CAAC,CAAC;IAC9B,OAAOpH,GAAG,KAAK,MAAM,IAAIA,GAAG,KAAK,KAAK;EAC1C,CAAC,CAAC;AACN;AACA;AACA;AACA;AACA,SAASqH,UAAUA,CAACxX,MAAM,EAAEyX,KAAK,EAAE;EAC/B,MAAMC,QAAQ,GAAGD,KAAK,CAAC/X,IAAI,CAACS,IAAI;EAChC,MAAM/B,cAAc,GAAGqZ,KAAK,CAACrZ,cAAc;EAC3C;EACA,MAAMuZ,UAAU,GAAGhH,SAAS,CAAC+G,QAAQ,EAAEtZ,cAAc,CAAC;EACtD,IAAIA,cAAc,CAACH,mBAAmB,EAAE;IACpC0Z,UAAU,CAACnG,UAAU,CAAC,qBAAqB,CAAC,GACxCpT,cAAc,CAACH,mBAAmB;EAC1C;EACA,MAAMoR,IAAI,GAAGoI,KAAK,CAACG,YAAY;EAC/B,IAAIzZ,IAAI;EACR,QAAQkR,IAAI;IACR,KAAK,KAAK;MACNlR,IAAI,GAAG+Y,SAAS,CAACS,UAAU,CAAC;MAC5B;IACJ;MACIxZ,IAAI,GAAGkY,UAAU,CAACsB,UAAU,EAAE;QAC1B,GAAGtb,gBAAgB;QACnB,GAAGqb;MACP,CAAC,EAAErI,IAAI,KAAK,MAAM,CAAC;EAC3B;EACA;EACA,MAAMwI,OAAO,GAAGR,eAAe,CAACrX,MAAM,CAAC;EACvC,IAAI6X,OAAO,EAAE;IACT;IACA,IAAI1Z,IAAI,CAACmZ,OAAO,KAAK,MAAM,IAAIO,OAAO,CAACP,OAAO,KAAKnZ,IAAI,CAACmZ,OAAO,EAAE;MAC7D;MACAO,OAAO,CAACvD,YAAY,CAAC,OAAO,EAAEnW,IAAI,CAACK,YAAY,CAAC,OAAO,CAAC,CAAC;IAC7D,CAAC,MACI;MACDwB,MAAM,CAAC8X,YAAY,CAAC3Z,IAAI,EAAE0Z,OAAO,CAAC;IACtC;EACJ,CAAC,MACI;IACD;IACA7X,MAAM,CAACuU,WAAW,CAACpW,IAAI,CAAC;EAC5B;AACJ;;AAEA;AACA;AACA;AACA,SAAS4Z,eAAeA,CAACrY,IAAI,EAAEsU,MAAM,EAAEgE,SAAS,EAAE;EAC9C,MAAMC,UAAU,GAAGD,SAAS,KACvBA,SAAS,CAACE,QAAQ,GACbF,SAAS,GACTA,SAAS,CAACC,UAAU,CAAC;EAC/B,OAAO;IACHC,QAAQ,EAAE,KAAK;IACflE,MAAM;IACNtU,IAAI;IACJuY;EACJ,CAAC;AACL;;AAEA;AACA;AACA;AACA,SAASE,iBAAiBA,CAAC7Y,IAAI,GAAG,cAAc,EAAE;EAC9C;EACA,IAAI8Y,cAAc;EAClB,IAAIC,WAAW;EACf,IAAI;IACAD,cAAc,GAAG3M,MAAM,CAAC2M,cAAc;IACtCC,WAAW,GAAG5M,MAAM,CAAC6M,WAAW;EACpC,CAAC,CACD,OAAOhW,GAAG,EAAE;IACR;EACJ;EACA;EACA,IAAI,CAAC8V,cAAc,IAAI,CAACC,WAAW,EAAE;IACjC;EACJ;EACA;EACA,MAAME,gBAAgB,GAAGH,cAAc,CAACI,GAAG,CAAClZ,IAAI,CAAC;EACjD,IAAIiZ,gBAAgB,EAAE;IAClB,OAAOA,gBAAgB;EAC3B;EACA;EACA,MAAM/G,UAAU,GAAG;EACf;EACA,MAAM;EACN;EACA,MAAM,EACN,QAAQ,EACR,YAAY;EACZ;EACA,OAAO,EACP,QAAQ,EACR,QAAQ,EACR,MAAM,CACT;EACD;AACJ;AACA;EACI,MAAMiH,WAAW,GAAG,cAAcJ,WAAW,CAAC;IAC1C;IACAK,WAAW;IACX;IACAC,YAAY,GAAG,KAAK;IACpB;IACAC,MAAM;IACN;IACAC,YAAY,GAAG,KAAK;IACpB;IACAC,UAAU,GAAG,KAAK;IAClB;IACAC,SAAS,GAAG,IAAI;IAChBC,QAAQ,GAAG,IAAI;IACf;AACR;AACA;IACQC,WAAWA,CAAA,EAAG;MACV,KAAK,CAAC,CAAC;MACP;MACA,MAAMC,IAAI,GAAI,IAAI,CAACR,WAAW,GAAG,IAAI,CAACS,YAAY,CAAC;QAC/C9J,IAAI,EAAE;MACV,CAAC,CAAE;MACH;MACA,MAAM2E,MAAM,GAAG,IAAI,CAACG,YAAY,CAAC,QAAQ,CAAC;MAC1CJ,WAAW,CAACmF,IAAI,EAAElF,MAAM,CAAC;MACzB;MACA,IAAI,CAAC4E,MAAM,GAAGb,eAAe,CAAC;QAC1Bnb,KAAK,EAAE;MACX,CAAC,EAAEoX,MAAM,CAAC;MACV;MACA,IAAI,CAACoF,WAAW,CAAC,CAAC;IACtB;IACA;AACR;AACA;IACQC,iBAAiBA,CAAA,EAAG;MAChB,IAAI,CAACP,UAAU,GAAG,IAAI;MACtB,IAAI,CAACQ,aAAa,CAAC,CAAC;IACxB;IACA;AACR;AACA;IACQC,oBAAoBA,CAAA,EAAG;MACnB,IAAI,CAACT,UAAU,GAAG,KAAK;MACvB,IAAI,CAACU,YAAY,CAAC,CAAC;IACvB;IACA;AACR;AACA;IACQ,WAAWC,kBAAkBA,CAAA,EAAG;MAC5B,OAAOjI,UAAU,CAACjU,KAAK,CAAC,CAAC,CAAC;IAC9B;IACA;AACR;AACA;AACA;AACA;IACQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACQ;AACR;AACA;IACQmc,wBAAwBA,CAACpa,IAAI,EAAE;MAC3B,QAAQA,IAAI;QACR,KAAK,QAAQ;UAAE;YACX;YACA,MAAMqa,SAAS,GAAG,IAAI,CAACxF,YAAY,CAAC,QAAQ,CAAC;YAC7C,MAAMsD,KAAK,GAAG,IAAI,CAACmB,MAAM;YACzB,IAAIe,SAAS,KAAKlC,KAAK,CAACzD,MAAM,EAAE;cAC5B;cACAyD,KAAK,CAACzD,MAAM,GAAG2F,SAAS;cACxB5F,WAAW,CAAC,IAAI,CAAC2E,WAAW,EAAEiB,SAAS,CAAC;YAC5C;YACA;UACJ;QACA,KAAK,YAAY;UAAE;YACf,MAAM/c,KAAK,GAAG,IAAI,CAACuX,YAAY,CAAC,YAAY,CAAC;YAC7C,IAAIvX,KAAK,EAAE;cACP,IAAI,CAAC0c,aAAa,CAAC,CAAC;YACxB,CAAC,MACI;cACD,IAAI,CAACE,YAAY,CAAC,CAAC;YACvB;YACA;UACJ;QACA;UACI;UACA,IAAI,CAACJ,WAAW,CAAC,CAAC;MAC1B;IACJ;IACA;AACR;AACA;IACQ,IAAI1Z,IAAIA,CAAA,EAAG;MACP,MAAM9C,KAAK,GAAG,IAAI,CAAC4B,YAAY,CAAC,MAAM,CAAC;MACvC,IAAI5B,KAAK,IAAIA,KAAK,CAACW,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,GAAG,EAAE;QACpC,IAAI;UACA,OAAO0O,IAAI,CAAClL,KAAK,CAACnE,KAAK,CAAC;QAC5B,CAAC,CACD,OAAO0F,GAAG,EAAE;UACR;QAAA;MAER;MACA,OAAO1F,KAAK;IAChB;IACA,IAAI8C,IAAIA,CAAC9C,KAAK,EAAE;MACZ,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;QAC3BA,KAAK,GAAGqP,IAAI,CAACe,SAAS,CAACpQ,KAAK,CAAC;MACjC;MACA,IAAI,CAAC0X,YAAY,CAAC,MAAM,EAAE1X,KAAK,CAAC;IACpC;IACA;AACR;AACA;IACQ,IAAIoX,MAAMA,CAAA,EAAG;MACT,OAAO,IAAI,CAACG,YAAY,CAAC,QAAQ,CAAC;IACtC;IACA,IAAIH,MAAMA,CAACpX,KAAK,EAAE;MACd,IAAIA,KAAK,EAAE;QACP,IAAI,CAAC0X,YAAY,CAAC,QAAQ,EAAE,MAAM,CAAC;MACvC,CAAC,MACI;QACD,IAAI,CAACsF,eAAe,CAAC,QAAQ,CAAC;MAClC;IACJ;IACA;AACR;AACA;IACQ,IAAIC,QAAQA,CAAA,EAAG;MACX,OAAO,IAAI,CAAC1F,YAAY,CAAC,UAAU,CAAC;IACxC;IACA,IAAI0F,QAAQA,CAACjd,KAAK,EAAE;MAChB,IAAIA,KAAK,EAAE;QACP,IAAI,CAAC0X,YAAY,CAAC,UAAU,EAAE,MAAM,CAAC;MACzC,CAAC,MACI;QACD,IAAI,CAACsF,eAAe,CAAC,UAAU,CAAC;MACpC;IACJ;IACA;AACR;AACA;IACQE,gBAAgBA,CAAA,EAAG;MACf,MAAMrC,KAAK,GAAG,IAAI,CAACmB,MAAM;MACzB,IAAInB,KAAK,CAACS,QAAQ,EAAE;QAChB,MAAMgB,IAAI,GAAG,IAAI,CAACR,WAAW;QAC7B,IAAIjB,KAAK,CAACG,YAAY,KAAK,KAAK,EAAE;UAC9B;UACA,IAAI;YACAsB,IAAI,CAACa,SAAS,CAACC,cAAc,CAAC,CAAC,CAAC;YAChC;UACJ,CAAC,CACD,OAAO1X,GAAG,EAAE;YACR;UAAA;QAER;QACAkV,UAAU,CAAC0B,IAAI,EAAEzB,KAAK,CAAC;MAC3B;IACJ;IACA;AACR;AACA;IACQ,IAAI/Q,MAAMA,CAAA,EAAG;MACT,MAAM+Q,KAAK,GAAG,IAAI,CAACmB,MAAM;MACzB,OAAOnB,KAAK,CAACS,QAAQ,GACf,UAAU,GACVT,KAAK,CAAC/X,IAAI,CAACS,IAAI,KAAK,IAAI,GACpB,QAAQ,GACR,SAAS;IACvB;IACA;AACR;AACA;IACQiZ,WAAWA,CAAA,EAAG;MACV,IAAI,CAAC,IAAI,CAACP,YAAY,EAAE;QACpB,IAAI,CAACA,YAAY,GAAG,IAAI;QACxBjU,UAAU,CAAC,MAAM;UACb,IAAI,CAACqV,MAAM,CAAC,CAAC;QACjB,CAAC,CAAC;MACN;IACJ;IACA;AACR;AACA;IACQA,MAAMA,CAAA,EAAG;MACL,IAAI,CAAC,IAAI,CAACpB,YAAY,EAAE;QACpB;MACJ;MACA,IAAI,CAACA,YAAY,GAAG,KAAK;MACzB,MAAMpB,KAAK,GAAG,IAAI,CAACmB,MAAM;MACzB;MACA,MAAMsB,OAAO,GAAG,IAAI,CAAC1b,YAAY,CAAC,MAAM,CAAC;MACzC,IAAI0b,OAAO,KAAKzC,KAAK,CAAC/X,IAAI,CAAC9C,KAAK,EAAE;QAC9B,IAAI,CAACud,YAAY,CAACD,OAAO,CAAC;QAC1B;MACJ;MACA;MACA,IAAI,CAACzC,KAAK,CAACS,QAAQ,IAAI,CAAC,IAAI,CAACc,QAAQ,EAAE;QACnC;MACJ;MACA;MACA,MAAM3J,IAAI,GAAG,IAAI,CAAC7Q,YAAY,CAAC,MAAM,CAAC;MACtC,MAAMJ,cAAc,GAAGF,iBAAiB,CAAC,IAAI,CAAC;MAC9C,IAAIuZ,KAAK,CAAC2C,QAAQ,KAAK/K,IAAI,IACvB5Q,yBAAyB,CAACgZ,KAAK,CAACrZ,cAAc,EAAEA,cAAc,CAAC,IAC/D,CAACiZ,eAAe,CAAC,IAAI,CAACqB,WAAW,CAAC,EAAE;QACpC,IAAI,CAAC2B,WAAW,CAAC5C,KAAK,CAAC/X,IAAI,EAAEtB,cAAc,EAAEiR,IAAI,CAAC;MACtD;IACJ;IACA;AACR;AACA;IACQ8K,YAAYA,CAACG,QAAQ,EAAE;MACnB,MAAM5a,IAAI,GAAGoP,cAAc,CAACwL,QAAQ,EAAE,CAAC1d,KAAK,EAAE0C,IAAI,EAAEa,IAAI,KAAK;QACzD;QACA,MAAMsX,KAAK,GAAG,IAAI,CAACmB,MAAM;QACzB,IAAInB,KAAK,CAACS,QAAQ,IAAI,IAAI,CAAC1Z,YAAY,CAAC,MAAM,CAAC,KAAK5B,KAAK,EAAE;UACvD;UACA;QACJ;QACA;QACA,MAAM8C,IAAI,GAAG;UACT9C,KAAK;UACL0C,IAAI;UACJa;QACJ,CAAC;QACD,IAAIT,IAAI,CAACS,IAAI,EAAE;UACX;UACA,IAAI,CAACoa,YAAY,CAAC7a,IAAI,CAAC;QAC3B,CAAC,MACI;UACD;UACA+X,KAAK,CAAC/X,IAAI,GAAGA,IAAI;QACrB;MACJ,CAAC,CAAC;MACF,IAAIA,IAAI,CAACS,IAAI,EAAE;QACX;QACA,IAAI,CAACoa,YAAY,CAAC7a,IAAI,CAAC;MAC3B,CAAC,MACI;QACD;QACA,IAAI,CAACkZ,MAAM,GAAGb,eAAe,CAACrY,IAAI,EAAE,IAAI,CAACkZ,MAAM,CAAC5E,MAAM,EAAE,IAAI,CAAC4E,MAAM,CAAC;MACxE;IACJ;IACA;AACR;AACA;IACQ4B,YAAYA,CAAA,EAAG;MACX,IAAI,CAAC,IAAI,CAACxB,QAAQ,EAAE;QAChB;QACA,MAAM7a,IAAI,GAAGkZ,eAAe,CAAC,IAAI,CAACqB,WAAW,CAAC;QAC9C,IAAIva,IAAI,EAAE;UACN,IAAI,CAACua,WAAW,CAAC+B,WAAW,CAACtc,IAAI,CAAC;QACtC;QACA;MACJ;MACA;MACA,IAAI,CAACib,WAAW,CAAC,CAAC;IACtB;IACA;AACR;AACA;IACQmB,YAAYA,CAAC7a,IAAI,EAAE;MACf,IAAI,CAACmZ,YAAY,GAAG,KAAK;MACzB,IAAI,CAACwB,WAAW,CAAC3a,IAAI,EAAExB,iBAAiB,CAAC,IAAI,CAAC,EAAE,IAAI,CAACM,YAAY,CAAC,MAAM,CAAC,CAAC;IAC9E;IACA;AACR;AACA;IACQ6b,WAAWA,CAAC3a,IAAI,EAAEtB,cAAc,EAAEgc,QAAQ,EAAE;MACxC;MACA,MAAMxC,YAAY,GAAGxI,aAAa,CAAC1P,IAAI,CAACS,IAAI,CAAC5D,IAAI,EAAE6d,QAAQ,CAAC;MAC5D;MACA,MAAMpG,MAAM,GAAG,IAAI,CAAC4E,MAAM,CAAC5E,MAAM;MACjC;MACAwD,UAAU,CAAC,IAAI,CAACkB,WAAW,EAAG,IAAI,CAACE,MAAM,GAAG;QACxCV,QAAQ,EAAE,IAAI;QACdxY,IAAI;QACJsU,MAAM;QACN5V,cAAc;QACdgc,QAAQ;QACRxC;MACJ,CAAE,CAAC;IACP;IACA;AACR;AACA;IACQ0B,aAAaA,CAAA,EAAG;MACZ,IAAI,CAAC,IAAI,CAACP,SAAS,IAAI,CAAC,IAAI,CAAC5E,YAAY,CAAC,YAAY,CAAC,EAAE;QACrD,IAAI;UACA,IAAI,CAAC4E,SAAS,GAAG,IAAI2B,oBAAoB,CAAEC,OAAO,IAAK;YACnD,MAAMC,YAAY,GAAGD,OAAO,CAACE,IAAI,CAAEC,KAAK,IAAKA,KAAK,CAACC,cAAc,CAAC;YAClE,IAAIH,YAAY,KAAK,IAAI,CAAC5B,QAAQ,EAAE;cAChC,IAAI,CAACA,QAAQ,GAAG4B,YAAY;cAC5B,IAAI,CAACJ,YAAY,CAAC,CAAC;YACvB;UACJ,CAAC,CAAC;UACF,IAAI,CAACzB,SAAS,CAACiC,OAAO,CAAC,IAAI,CAAC;QAChC,CAAC,CACD,OAAO1Y,GAAG,EAAE;UACR;UACA,IAAI,IAAI,CAACyW,SAAS,EAAE;YAChB,IAAI;cACA,IAAI,CAACA,SAAS,CAACkC,UAAU,CAAC,CAAC;YAC/B,CAAC,CACD,OAAO3Y,GAAG,EAAE;cACR;YAAA;YAEJ,IAAI,CAACyW,SAAS,GAAG,IAAI;UACzB;QACJ;MACJ;IACJ;IACA;AACR;AACA;IACQS,YAAYA,CAAA,EAAG;MACX,IAAI,IAAI,CAACT,SAAS,EAAE;QAChB,IAAI,CAACA,SAAS,CAACkC,UAAU,CAAC,CAAC;QAC3B,IAAI,CAAClC,SAAS,GAAG,IAAI;QACrB,IAAI,CAACC,QAAQ,GAAG,IAAI;QACpB,IAAI,IAAI,CAACF,UAAU,EAAE;UACjB;UACA,IAAI,CAAC0B,YAAY,CAAC,CAAC;QACvB;MACJ;IACJ;EACJ,CAAC;EACD;EACAhJ,UAAU,CAAC3T,OAAO,CAAEQ,IAAI,IAAK;IACzB,IAAI,EAAEA,IAAI,IAAIoa,WAAW,CAACyC,SAAS,CAAC,EAAE;MAClCvf,MAAM,CAACwf,cAAc,CAAC1C,WAAW,CAACyC,SAAS,EAAE7c,IAAI,EAAE;QAC/Cma,GAAG,EAAE,SAAAA,CAAA,EAAY;UACb,OAAO,IAAI,CAACha,YAAY,CAACH,IAAI,CAAC;QAClC,CAAC;QACDuO,GAAG,EAAE,SAAAA,CAAUhQ,KAAK,EAAE;UAClB,IAAIA,KAAK,KAAK,IAAI,EAAE;YAChB,IAAI,CAAC0X,YAAY,CAACjW,IAAI,EAAEzB,KAAK,CAAC;UAClC,CAAC,MACI;YACD,IAAI,CAACgd,eAAe,CAACvb,IAAI,CAAC;UAC9B;QACJ;MACJ,CAAC,CAAC;IACN;EACJ,CAAC,CAAC;EACF;EACA,MAAM+c,SAAS,GAAG3G,eAAe,CAAC,CAAC;EACnC,KAAK,MAAMnW,GAAG,IAAI8c,SAAS,EAAE;IACzB3C,WAAW,CAACna,GAAG,CAAC,GAAGma,WAAW,CAACyC,SAAS,CAAC5c,GAAG,CAAC,GAAG8c,SAAS,CAAC9c,GAAG,CAAC;EAClE;EACA;EACA8Z,cAAc,CAACiD,MAAM,CAAC/b,IAAI,EAAEmZ,WAAW,CAAC;EACxC,OAAOA,WAAW;AACtB;;AAEA;AACA;AACA;AACA,MAAM6C,oBAAoB,GAAGnD,iBAAiB,CAAC,CAAC,IAAI1D,eAAe,CAAC,CAAC;AACrE;AACA;AACA;AACA,MAAM;EAAEM,WAAW;EAAEC,YAAY;EAAEC,UAAU;EAAEC,UAAU;EAAE;EAC3DC,OAAO;EAAEC,SAAS;EAAEC,OAAO;EAAEC,aAAa;EAAEC,aAAa;EAAEC,SAAS;EAAEC,UAAU;EAAEC,QAAQ;EAAEC,SAAS;EAAEC,QAAQ;EAAEC,cAAc;EAAEf;AAAM,CAAC,GAAGwG,oBAAoB;AAE/J,SAASA,oBAAoB,EAAExG,IAAI,EAAEe,cAAc,EAAEP,aAAa,EAAED,OAAO,EAAExB,iBAAiB,EAAE2B,SAAS,EAAED,aAAa,EAAEP,YAAY,EAAED,WAAW,EAAEI,OAAO,EAAED,UAAU,EAAED,UAAU,EAAEQ,UAAU,EAAEL,SAAS,EAAEQ,QAAQ,EAAED,SAAS,EAAED,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}